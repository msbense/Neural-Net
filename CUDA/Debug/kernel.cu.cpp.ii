#line 1 "Debug/kernel.cudafe1.cpp"
#line 1 "C:/Users/MSB/Documents/Visual Studio 2015/Projects/Neural-Net/CUDA/kernel.cu"
#pragma section("__nv_managed_data__")
#line 1 "C:/Users/MSB/Documents/Visual Studio 2015/Projects/Neural-Net/CUDA/kernel.cu"
static char __nv_inited_managed_rt = 0; static void **__nv_fatbinhandle_for_managed_rt; static void __nv_save_fatbinhandle_for_managed_rt(void **in){__nv_fatbinhandle_for_managed_rt = in;} static char __nv_init_managed_rt_with_module(void **); static inline void __nv_init_managed_rt(void) { __nv_inited_managed_rt = (__nv_inited_managed_rt ? __nv_inited_managed_rt                 : __nv_init_managed_rt_with_module(__nv_fatbinhandle_for_managed_rt));}
#line 1 "C:/Users/MSB/Documents/Visual Studio 2015/Projects/Neural-Net/CUDA/kernel.cu"
#line 1 "C:/Users/MSB/Documents/Visual Studio 2015/Projects/Neural-Net/CUDA/kernel.cu"
#line 62 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
#pragma warning(push)
#pragma warning(disable: 4820)
#line 717 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\sal.h"
#pragma region Input Buffer SAL 1 compatibility macros
#line 1481 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\sal.h"
#pragma endregion Input Buffer SAL 1 compatibility macros
#line 72 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\crtdefs.h"
#pragma pack ( push, 8 )
#line 28 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\vadefs.h"
#pragma pack ( push, 8 )
#line 50 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\vadefs.h"
extern "C" { typedef unsigned __w64 uintptr_t; }
#line 59 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\vadefs.h"
extern "C" { typedef char *va_list; }
#line 144 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\vadefs.h"
#pragma pack ( pop )
#line 496 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\crtdefs.h"
typedef unsigned __w64 size_t; 
#line 1 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\crt/host_runtime.h"


































































#line 68 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\crt/host_runtime.h"

#line 1 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\builtin_types.h"























































#line 1 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_types.h"




















































#line 1 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\host_defines.h"


























































































#line 92 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\host_defines.h"










#line 103 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\host_defines.h"








































#line 144 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\host_defines.h"














#line 161 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\host_defines.h"











#line 173 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\host_defines.h"






#line 181 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\host_defines.h"



#line 185 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\host_defines.h"













        














#line 214 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\host_defines.h"
























#line 239 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\host_defines.h"


#line 242 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\host_defines.h"
#line 54 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_types.h"







enum  cudaRoundMode
{
    cudaRoundNearest,
    cudaRoundZero,
    cudaRoundPosInf,
    cudaRoundMinInf
};

#line 70 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_types.h"
#line 57 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\builtin_types.h"


#line 1 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\driver_types.h"




















































#line 1 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\host_defines.h"
















































































































































































































































#line 242 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\host_defines.h"
#line 54 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\driver_types.h"






















































































#line 141 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\driver_types.h"










enum  cudaError
{
    




    cudaSuccess                           =      0,
  
    



    cudaErrorMissingConfiguration         =      1,
  
    



    cudaErrorMemoryAllocation             =      2,
  
    



    cudaErrorInitializationError          =      3,
  
    







    cudaErrorLaunchFailure                =      4,
  
    






    cudaErrorPriorLaunchFailure           =      5,
  
    







    cudaErrorLaunchTimeout                =      6,
  
    






    cudaErrorLaunchOutOfResources         =      7,
  
    



    cudaErrorInvalidDeviceFunction        =      8,
  
    






    cudaErrorInvalidConfiguration         =      9,
  
    



    cudaErrorInvalidDevice                =     10,
  
    



    cudaErrorInvalidValue                 =     11,
  
    



    cudaErrorInvalidPitchValue            =     12,
  
    



    cudaErrorInvalidSymbol                =     13,
  
    


    cudaErrorMapBufferObjectFailed        =     14,
  
    


    cudaErrorUnmapBufferObjectFailed      =     15,
  
    



    cudaErrorInvalidHostPointer           =     16,
  
    



    cudaErrorInvalidDevicePointer         =     17,
  
    



    cudaErrorInvalidTexture               =     18,
  
    



    cudaErrorInvalidTextureBinding        =     19,
  
    




    cudaErrorInvalidChannelDescriptor     =     20,
  
    



    cudaErrorInvalidMemcpyDirection       =     21,
  
    







    cudaErrorAddressOfConstant            =     22,
  
    






    cudaErrorTextureFetchFailed           =     23,
  
    






    cudaErrorTextureNotBound              =     24,
  
    






    cudaErrorSynchronizationError         =     25,
  
    



    cudaErrorInvalidFilterSetting         =     26,
  
    



    cudaErrorInvalidNormSetting           =     27,
  
    





    cudaErrorMixedDeviceExecution         =     28,
  
    




    cudaErrorCudartUnloading              =     29,
  
    


    cudaErrorUnknown                      =     30,

    





    cudaErrorNotYetImplemented            =     31,
  
    






    cudaErrorMemoryValueTooLarge          =     32,
  
    




    cudaErrorInvalidResourceHandle        =     33,
  
    





    cudaErrorNotReady                     =     34,
  
    




    cudaErrorInsufficientDriver           =     35,
  
    










    cudaErrorSetOnActiveProcess           =     36,
  
    



    cudaErrorInvalidSurface               =     37,
  
    



    cudaErrorNoDevice                     =     38,
  
    



    cudaErrorECCUncorrectable             =     39,
  
    


    cudaErrorSharedObjectSymbolNotFound   =     40,
  
    


    cudaErrorSharedObjectInitFailed       =     41,
  
    



    cudaErrorUnsupportedLimit             =     42,
  
    



    cudaErrorDuplicateVariableName        =     43,
  
    



    cudaErrorDuplicateTextureName         =     44,
  
    



    cudaErrorDuplicateSurfaceName         =     45,
  
    







    cudaErrorDevicesUnavailable           =     46,
  
    


    cudaErrorInvalidKernelImage           =     47,
  
    





    cudaErrorNoKernelImageForDevice       =     48,
  
    










    cudaErrorIncompatibleDriverContext    =     49,
      
    




    cudaErrorPeerAccessAlreadyEnabled     =     50,
    
    




    cudaErrorPeerAccessNotEnabled         =     51,
    
    



    cudaErrorDeviceAlreadyInUse           =     54,

    




    cudaErrorProfilerDisabled             =     55,

    





    cudaErrorProfilerNotInitialized       =     56,

    




    cudaErrorProfilerAlreadyStarted       =     57,

    




     cudaErrorProfilerAlreadyStopped       =    58,

    





    cudaErrorAssert                        =    59,
  
    




    cudaErrorTooManyPeers                 =     60,
  
    



    cudaErrorHostMemoryAlreadyRegistered  =     61,
        
    



    cudaErrorHostMemoryNotRegistered      =     62,

    


    cudaErrorOperatingSystem              =     63,

    



    cudaErrorPeerAccessUnsupported        =     64,

    




    cudaErrorLaunchMaxDepthExceeded       =     65,

    





    cudaErrorLaunchFileScopedTex          =     66,

    





    cudaErrorLaunchFileScopedSurf         =     67,

    












    cudaErrorSyncDepthExceeded            =     68,

    









    cudaErrorLaunchPendingCountExceeded   =     69,
    
    


    cudaErrorNotPermitted                 =     70,

    



    cudaErrorNotSupported                 =     71,

    






    cudaErrorHardwareStackError           =     72,

    





    cudaErrorIllegalInstruction           =     73,

    






    cudaErrorMisalignedAddress            =     74,

    








    cudaErrorInvalidAddressSpace          =     75,

    





    cudaErrorInvalidPc                    =     76,

    





    cudaErrorIllegalAddress               =     77,

    



    cudaErrorInvalidPtx                   =     78,

    


    cudaErrorInvalidGraphicsContext       =     79,


    


    cudaErrorStartupFailure               =   0x7f,

    





    cudaErrorApiFailureBase               =  10000
};




enum  cudaChannelFormatKind
{
    cudaChannelFormatKindSigned           =   0,      
    cudaChannelFormatKindUnsigned         =   1,      
    cudaChannelFormatKindFloat            =   2,      
    cudaChannelFormatKindNone             =   3       
};




struct  cudaChannelFormatDesc
{
    int                        x; 
    int                        y; 
    int                        z; 
    int                        w; 
    enum cudaChannelFormatKind f; 
};




typedef struct cudaArray *cudaArray_t;




typedef const struct cudaArray *cudaArray_const_t;

struct cudaArray;




typedef struct cudaMipmappedArray *cudaMipmappedArray_t;




typedef const struct cudaMipmappedArray *cudaMipmappedArray_const_t;

struct cudaMipmappedArray;




enum  cudaMemoryType
{
    cudaMemoryTypeHost   = 1, 
    cudaMemoryTypeDevice = 2  
};




enum  cudaMemcpyKind
{
    cudaMemcpyHostToHost          =   0,      
    cudaMemcpyHostToDevice        =   1,      
    cudaMemcpyDeviceToHost        =   2,      
    cudaMemcpyDeviceToDevice      =   3,      
    cudaMemcpyDefault             =   4       
};






struct  cudaPitchedPtr
{
    void   *ptr;      
    size_t  pitch;    
    size_t  xsize;    
    size_t  ysize;    
};






struct  cudaExtent
{
    size_t width;     
    size_t height;    
    size_t depth;     
};






struct  cudaPos
{
    size_t x;     
    size_t y;     
    size_t z;     
};




struct  cudaMemcpy3DParms
{
    cudaArray_t            srcArray;  
    struct cudaPos         srcPos;    
    struct cudaPitchedPtr  srcPtr;    
  
    cudaArray_t            dstArray;  
    struct cudaPos         dstPos;    
    struct cudaPitchedPtr  dstPtr;    
  
    struct cudaExtent      extent;    
    enum cudaMemcpyKind    kind;      
};




struct  cudaMemcpy3DPeerParms
{
    cudaArray_t            srcArray;  
    struct cudaPos         srcPos;    
    struct cudaPitchedPtr  srcPtr;    
    int                    srcDevice; 
  
    cudaArray_t            dstArray;  
    struct cudaPos         dstPos;    
    struct cudaPitchedPtr  dstPtr;    
    int                    dstDevice; 
  
    struct cudaExtent      extent;    
};




struct cudaGraphicsResource;




enum  cudaGraphicsRegisterFlags
{
    cudaGraphicsRegisterFlagsNone             = 0,  
    cudaGraphicsRegisterFlagsReadOnly         = 1,   
    cudaGraphicsRegisterFlagsWriteDiscard     = 2,  
    cudaGraphicsRegisterFlagsSurfaceLoadStore = 4,  
    cudaGraphicsRegisterFlagsTextureGather    = 8   
};




enum  cudaGraphicsMapFlags
{
    cudaGraphicsMapFlagsNone         = 0,  
    cudaGraphicsMapFlagsReadOnly     = 1,  
    cudaGraphicsMapFlagsWriteDiscard = 2   
};




enum  cudaGraphicsCubeFace 
{
    cudaGraphicsCubeFacePositiveX = 0x00, 
    cudaGraphicsCubeFaceNegativeX = 0x01, 
    cudaGraphicsCubeFacePositiveY = 0x02, 
    cudaGraphicsCubeFaceNegativeY = 0x03, 
    cudaGraphicsCubeFacePositiveZ = 0x04, 
    cudaGraphicsCubeFaceNegativeZ = 0x05  
};




enum  cudaResourceType
{
    cudaResourceTypeArray          = 0x00, 
    cudaResourceTypeMipmappedArray = 0x01, 
    cudaResourceTypeLinear         = 0x02, 
    cudaResourceTypePitch2D        = 0x03  
};




enum  cudaResourceViewFormat
{
    cudaResViewFormatNone                      = 0x00, 
    cudaResViewFormatUnsignedChar1             = 0x01, 
    cudaResViewFormatUnsignedChar2             = 0x02, 
    cudaResViewFormatUnsignedChar4             = 0x03, 
    cudaResViewFormatSignedChar1               = 0x04, 
    cudaResViewFormatSignedChar2               = 0x05, 
    cudaResViewFormatSignedChar4               = 0x06, 
    cudaResViewFormatUnsignedShort1            = 0x07, 
    cudaResViewFormatUnsignedShort2            = 0x08, 
    cudaResViewFormatUnsignedShort4            = 0x09, 
    cudaResViewFormatSignedShort1              = 0x0a, 
    cudaResViewFormatSignedShort2              = 0x0b, 
    cudaResViewFormatSignedShort4              = 0x0c, 
    cudaResViewFormatUnsignedInt1              = 0x0d, 
    cudaResViewFormatUnsignedInt2              = 0x0e, 
    cudaResViewFormatUnsignedInt4              = 0x0f, 
    cudaResViewFormatSignedInt1                = 0x10, 
    cudaResViewFormatSignedInt2                = 0x11, 
    cudaResViewFormatSignedInt4                = 0x12, 
    cudaResViewFormatHalf1                     = 0x13, 
    cudaResViewFormatHalf2                     = 0x14, 
    cudaResViewFormatHalf4                     = 0x15, 
    cudaResViewFormatFloat1                    = 0x16, 
    cudaResViewFormatFloat2                    = 0x17, 
    cudaResViewFormatFloat4                    = 0x18, 
    cudaResViewFormatUnsignedBlockCompressed1  = 0x19, 
    cudaResViewFormatUnsignedBlockCompressed2  = 0x1a, 
    cudaResViewFormatUnsignedBlockCompressed3  = 0x1b, 
    cudaResViewFormatUnsignedBlockCompressed4  = 0x1c, 
    cudaResViewFormatSignedBlockCompressed4    = 0x1d, 
    cudaResViewFormatUnsignedBlockCompressed5  = 0x1e, 
    cudaResViewFormatSignedBlockCompressed5    = 0x1f, 
    cudaResViewFormatUnsignedBlockCompressed6H = 0x20, 
    cudaResViewFormatSignedBlockCompressed6H   = 0x21, 
    cudaResViewFormatUnsignedBlockCompressed7  = 0x22  
};




struct  cudaResourceDesc {
	enum cudaResourceType resType;             
	
	union {
		struct {
			cudaArray_t array;                 
		} array;
        struct {
            cudaMipmappedArray_t mipmap;       
        } mipmap;
		struct {
			void *devPtr;                      
			struct cudaChannelFormatDesc desc; 
			size_t sizeInBytes;                
		} linear;
		struct {
			void *devPtr;                      
			struct cudaChannelFormatDesc desc; 
			size_t width;                      
			size_t height;                     
			size_t pitchInBytes;               
		} pitch2D;
	} res;
};




struct  cudaResourceViewDesc
{
    enum cudaResourceViewFormat format;           
    size_t                      width;            
    size_t                      height;           
    size_t                      depth;            
    unsigned int                firstMipmapLevel; 
    unsigned int                lastMipmapLevel;  
    unsigned int                firstLayer;       
    unsigned int                lastLayer;        
};




struct  cudaPointerAttributes
{
    



    enum cudaMemoryType memoryType;

    








    int device;

    



    void *devicePointer;

    



    void *hostPointer;

    


    int isManaged;
};




struct  cudaFuncAttributes
{
   




   size_t sharedSizeBytes;

   



   size_t constSizeBytes;

   


   size_t localSizeBytes;

   




   int maxThreadsPerBlock;

   


   int numRegs;

   




   int ptxVersion;

   




   int binaryVersion;

   



   int cacheModeCA;
};




enum  cudaFuncCache
{
    cudaFuncCachePreferNone   = 0,    
    cudaFuncCachePreferShared = 1,    
    cudaFuncCachePreferL1     = 2,    
    cudaFuncCachePreferEqual  = 3     
};





enum  cudaSharedMemConfig
{
    cudaSharedMemBankSizeDefault   = 0,
    cudaSharedMemBankSizeFourByte  = 1,
    cudaSharedMemBankSizeEightByte = 2
};




enum  cudaComputeMode
{
    cudaComputeModeDefault          = 0,  
    cudaComputeModeExclusive        = 1,  
    cudaComputeModeProhibited       = 2,  
    cudaComputeModeExclusiveProcess = 3   
};




enum  cudaLimit
{
    cudaLimitStackSize                    = 0x00, 
    cudaLimitPrintfFifoSize               = 0x01, 
    cudaLimitMallocHeapSize               = 0x02, 
    cudaLimitDevRuntimeSyncDepth          = 0x03, 
    cudaLimitDevRuntimePendingLaunchCount = 0x04  
};




enum  cudaOutputMode
{
    cudaKeyValuePair    = 0x00, 
    cudaCSV             = 0x01  
};




enum  cudaDeviceAttr
{
    cudaDevAttrMaxThreadsPerBlock             = 1,  
    cudaDevAttrMaxBlockDimX                   = 2,  
    cudaDevAttrMaxBlockDimY                   = 3,  
    cudaDevAttrMaxBlockDimZ                   = 4,  
    cudaDevAttrMaxGridDimX                    = 5,  
    cudaDevAttrMaxGridDimY                    = 6,  
    cudaDevAttrMaxGridDimZ                    = 7,  
    cudaDevAttrMaxSharedMemoryPerBlock        = 8,  
    cudaDevAttrTotalConstantMemory            = 9,  
    cudaDevAttrWarpSize                       = 10, 
    cudaDevAttrMaxPitch                       = 11, 
    cudaDevAttrMaxRegistersPerBlock           = 12, 
    cudaDevAttrClockRate                      = 13, 
    cudaDevAttrTextureAlignment               = 14, 
    cudaDevAttrGpuOverlap                     = 15, 
    cudaDevAttrMultiProcessorCount            = 16, 
    cudaDevAttrKernelExecTimeout              = 17, 
    cudaDevAttrIntegrated                     = 18, 
    cudaDevAttrCanMapHostMemory               = 19, 
    cudaDevAttrComputeMode                    = 20, 
    cudaDevAttrMaxTexture1DWidth              = 21, 
    cudaDevAttrMaxTexture2DWidth              = 22, 
    cudaDevAttrMaxTexture2DHeight             = 23, 
    cudaDevAttrMaxTexture3DWidth              = 24, 
    cudaDevAttrMaxTexture3DHeight             = 25, 
    cudaDevAttrMaxTexture3DDepth              = 26, 
    cudaDevAttrMaxTexture2DLayeredWidth       = 27, 
    cudaDevAttrMaxTexture2DLayeredHeight      = 28, 
    cudaDevAttrMaxTexture2DLayeredLayers      = 29, 
    cudaDevAttrSurfaceAlignment               = 30, 
    cudaDevAttrConcurrentKernels              = 31, 
    cudaDevAttrEccEnabled                     = 32, 
    cudaDevAttrPciBusId                       = 33, 
    cudaDevAttrPciDeviceId                    = 34, 
    cudaDevAttrTccDriver                      = 35, 
    cudaDevAttrMemoryClockRate                = 36, 
    cudaDevAttrGlobalMemoryBusWidth           = 37, 
    cudaDevAttrL2CacheSize                    = 38, 
    cudaDevAttrMaxThreadsPerMultiProcessor    = 39, 
    cudaDevAttrAsyncEngineCount               = 40, 
    cudaDevAttrUnifiedAddressing              = 41,     
    cudaDevAttrMaxTexture1DLayeredWidth       = 42, 
    cudaDevAttrMaxTexture1DLayeredLayers      = 43, 
    cudaDevAttrMaxTexture2DGatherWidth        = 45, 
    cudaDevAttrMaxTexture2DGatherHeight       = 46, 
    cudaDevAttrMaxTexture3DWidthAlt           = 47, 
    cudaDevAttrMaxTexture3DHeightAlt          = 48, 
    cudaDevAttrMaxTexture3DDepthAlt           = 49, 
    cudaDevAttrPciDomainId                    = 50, 
    cudaDevAttrTexturePitchAlignment          = 51, 
    cudaDevAttrMaxTextureCubemapWidth         = 52, 
    cudaDevAttrMaxTextureCubemapLayeredWidth  = 53, 
    cudaDevAttrMaxTextureCubemapLayeredLayers = 54, 
    cudaDevAttrMaxSurface1DWidth              = 55, 
    cudaDevAttrMaxSurface2DWidth              = 56, 
    cudaDevAttrMaxSurface2DHeight             = 57, 
    cudaDevAttrMaxSurface3DWidth              = 58, 
    cudaDevAttrMaxSurface3DHeight             = 59, 
    cudaDevAttrMaxSurface3DDepth              = 60, 
    cudaDevAttrMaxSurface1DLayeredWidth       = 61, 
    cudaDevAttrMaxSurface1DLayeredLayers      = 62, 
    cudaDevAttrMaxSurface2DLayeredWidth       = 63, 
    cudaDevAttrMaxSurface2DLayeredHeight      = 64, 
    cudaDevAttrMaxSurface2DLayeredLayers      = 65, 
    cudaDevAttrMaxSurfaceCubemapWidth         = 66, 
    cudaDevAttrMaxSurfaceCubemapLayeredWidth  = 67, 
    cudaDevAttrMaxSurfaceCubemapLayeredLayers = 68, 
    cudaDevAttrMaxTexture1DLinearWidth        = 69, 
    cudaDevAttrMaxTexture2DLinearWidth        = 70, 
    cudaDevAttrMaxTexture2DLinearHeight       = 71, 
    cudaDevAttrMaxTexture2DLinearPitch        = 72, 
    cudaDevAttrMaxTexture2DMipmappedWidth     = 73, 
    cudaDevAttrMaxTexture2DMipmappedHeight    = 74, 
    cudaDevAttrComputeCapabilityMajor         = 75,  
    cudaDevAttrComputeCapabilityMinor         = 76, 
    cudaDevAttrMaxTexture1DMipmappedWidth     = 77, 
    cudaDevAttrStreamPrioritiesSupported      = 78, 
    cudaDevAttrGlobalL1CacheSupported         = 79, 
    cudaDevAttrLocalL1CacheSupported          = 80, 
    cudaDevAttrMaxSharedMemoryPerMultiprocessor = 81, 
    cudaDevAttrMaxRegistersPerMultiprocessor  = 82, 
    cudaDevAttrManagedMemory                  = 83, 
    cudaDevAttrIsMultiGpuBoard                = 84, 
    cudaDevAttrMultiGpuBoardGroupID           = 85  
};




struct  cudaDeviceProp
{
    char   name[256];                  
    size_t totalGlobalMem;             
    size_t sharedMemPerBlock;          
    int    regsPerBlock;               
    int    warpSize;                   
    size_t memPitch;                   
    int    maxThreadsPerBlock;         
    int    maxThreadsDim[3];           
    int    maxGridSize[3];             
    int    clockRate;                  
    size_t totalConstMem;              
    int    major;                      
    int    minor;                      
    size_t textureAlignment;           
    size_t texturePitchAlignment;      
    int    deviceOverlap;              
    int    multiProcessorCount;        
    int    kernelExecTimeoutEnabled;   
    int    integrated;                 
    int    canMapHostMemory;           
    int    computeMode;                
    int    maxTexture1D;               
    int    maxTexture1DMipmap;         
    int    maxTexture1DLinear;         
    int    maxTexture2D[2];            
    int    maxTexture2DMipmap[2];      
    int    maxTexture2DLinear[3];      
    int    maxTexture2DGather[2];      
    int    maxTexture3D[3];            
    int    maxTexture3DAlt[3];         
    int    maxTextureCubemap;          
    int    maxTexture1DLayered[2];     
    int    maxTexture2DLayered[3];     
    int    maxTextureCubemapLayered[2];
    int    maxSurface1D;               
    int    maxSurface2D[2];            
    int    maxSurface3D[3];            
    int    maxSurface1DLayered[2];     
    int    maxSurface2DLayered[3];     
    int    maxSurfaceCubemap;          
    int    maxSurfaceCubemapLayered[2];
    size_t surfaceAlignment;           
    int    concurrentKernels;          
    int    ECCEnabled;                 
    int    pciBusID;                   
    int    pciDeviceID;                
    int    pciDomainID;                
    int    tccDriver;                  
    int    asyncEngineCount;           
    int    unifiedAddressing;          
    int    memoryClockRate;            
    int    memoryBusWidth;             
    int    l2CacheSize;                
    int    maxThreadsPerMultiProcessor;
    int    streamPrioritiesSupported;  
    int    globalL1CacheSupported;     
    int    localL1CacheSupported;      
    size_t sharedMemPerMultiprocessor; 
    int    regsPerMultiprocessor;      
    int    managedMemory;              
    int    isMultiGpuBoard;            
    int    multiGpuBoardGroupID;       
};











































































typedef  struct  cudaIpcEventHandle_st
{
    char reserved[64];
}cudaIpcEventHandle_t;




typedef  struct  cudaIpcMemHandle_st 
{
    char reserved[64];
}cudaIpcMemHandle_t;










typedef  enum cudaError cudaError_t;




typedef  struct CUstream_st *cudaStream_t;




typedef  struct CUevent_st *cudaEvent_t;




typedef  struct cudaGraphicsResource *cudaGraphicsResource_t;




typedef  struct CUuuid_st cudaUUID_t;




typedef  enum cudaOutputMode cudaOutputMode_t;


 

#line 1451 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\driver_types.h"

#line 60 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\builtin_types.h"

#line 62 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\builtin_types.h"
#line 1 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_types.h"


























































#line 1 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\driver_types.h"









































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































#line 1451 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\driver_types.h"

#line 60 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_types.h"
























enum  cudaSurfaceBoundaryMode
{
    cudaBoundaryModeZero  = 0,    
    cudaBoundaryModeClamp = 1,    
    cudaBoundaryModeTrap  = 2     
};




enum   cudaSurfaceFormatMode
{
    cudaFormatModeForced = 0,     
    cudaFormatModeAuto = 1        
};




struct  surfaceReference
{
    


    struct cudaChannelFormatDesc channelDesc;
};




typedef  unsigned long long cudaSurfaceObject_t;


 

#line 120 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_types.h"
#line 63 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\builtin_types.h"
#line 1 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_types.h"


























































#line 1 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\driver_types.h"









































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































#line 1451 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\driver_types.h"

#line 60 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_types.h"
























enum  cudaTextureAddressMode
{
    cudaAddressModeWrap   = 0,    
    cudaAddressModeClamp  = 1,    
    cudaAddressModeMirror = 2,    
    cudaAddressModeBorder = 3     
};




enum  cudaTextureFilterMode
{
    cudaFilterModePoint  = 0,     
    cudaFilterModeLinear = 1      
};




enum  cudaTextureReadMode
{
    cudaReadModeElementType     = 0,  
    cudaReadModeNormalizedFloat = 1   
};




struct  textureReference
{
    


    int                          normalized;
    


    enum cudaTextureFilterMode   filterMode;
    


    enum cudaTextureAddressMode  addressMode[3];
    


    struct cudaChannelFormatDesc channelDesc;
    


    int                          sRGB;
    


    unsigned int                 maxAnisotropy;
    


    enum cudaTextureFilterMode   mipmapFilterMode;
    


    float                        mipmapLevelBias;
    


    float                        minMipmapLevelClamp;
    


    float                        maxMipmapLevelClamp;
    int                          __cudaReserved[15];
};




struct  cudaTextureDesc
{
    


    enum cudaTextureAddressMode addressMode[3];
    


    enum cudaTextureFilterMode  filterMode;
    


    enum cudaTextureReadMode    readMode;
    


    int                         sRGB;
    


    int                         normalizedCoords;
    


    unsigned int                maxAnisotropy;
    


    enum cudaTextureFilterMode  mipmapFilterMode;
    


    float                       mipmapLevelBias;
    


    float                       minMipmapLevelClamp;
    


    float                       maxMipmapLevelClamp;
};




typedef  unsigned long long cudaTextureObject_t;


 

#line 214 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_types.h"
#line 64 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\builtin_types.h"
#line 1 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"




























































#line 1 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\builtin_types.h"























































#line 1 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_types.h"




































































#line 70 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_types.h"
#line 57 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\builtin_types.h"


#line 1 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\driver_types.h"









































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































#line 1451 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\driver_types.h"

#line 60 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\builtin_types.h"

#line 62 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\builtin_types.h"
#line 1 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_types.h"






















































































































#line 120 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_types.h"
#line 63 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\builtin_types.h"
#line 1 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_types.h"




















































































































































































































#line 214 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_types.h"
#line 64 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\builtin_types.h"
#line 1 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"














































































































































































































































































































































































































































#line 432 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"
#line 65 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\builtin_types.h"
#line 62 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"

#line 64 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"
#line 1 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\host_defines.h"
















































































































































































































































#line 242 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\host_defines.h"
#line 65 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"









#pragma warning(push)
#pragma warning(disable: 4201 4408)



















#line 97 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"

struct  char1
{
    signed char x;
};

struct  uchar1
{
    unsigned char x;
};


struct  __declspec(align(2)) char2
{
    signed char x, y;
};

struct  __declspec(align(2)) uchar2
{
    unsigned char x, y;
};

struct  char3
{
    signed char x, y, z;
};

struct  uchar3
{
    unsigned char x, y, z;
};

struct  __declspec(align(4)) char4
{
    signed char x, y, z, w;
};

struct  __declspec(align(4)) uchar4
{
    unsigned char x, y, z, w;
};

struct  short1
{
    short x;
};

struct  ushort1
{
    unsigned short x;
};

struct  __declspec(align(4)) short2
{
    short x, y;
};

struct  __declspec(align(4)) ushort2
{
    unsigned short x, y;
};

struct  short3
{
    short x, y, z;
};

struct  ushort3
{
    unsigned short x, y, z;
};

struct  short4 { union { struct { short x; short y; short z; short w; }; struct { long long int :1,:0; }; }; };
struct  ushort4 { union { struct { unsigned short x; unsigned short y; unsigned short z; unsigned short w; }; struct { long long int :1,:0; }; }; };

struct  int1
{
    int x;
};

struct  uint1
{
    unsigned int x;
};

struct  int2 { union { struct { int x; int y; }; struct { long long int :1,:0; }; }; };
struct  uint2 { union { struct { unsigned int x; unsigned int y; }; struct { long long int :1,:0; }; }; };

struct  int3
{
    int x, y, z;
};

struct  uint3
{
    unsigned int x, y, z;
};

struct   int4
{
    int x, y, z, w;
};

struct   uint4
{
    unsigned int x, y, z, w;
};

struct  long1
{
    long int x;
};

struct  ulong1
{
    unsigned long x;
};


struct  long2 { union { struct { long int x; long int y; }; struct { long long int :1,:0; }; }; };
struct  ulong2 { union { struct { unsigned long int x; unsigned long int y; }; struct { long long int :1,:0; }; }; };












#line 231 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"

struct  long3
{
    long int x, y, z;
};

struct  ulong3
{
    unsigned long int x, y, z;
};

struct   long4
{
    long int x, y, z, w;
};

struct   ulong4
{
    unsigned long int x, y, z, w;
};

struct  float1
{
    float x;
};















#line 273 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"

struct  float2 { union { struct { float x; float y; }; struct { long long int :1,:0; }; }; };

#line 277 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"


struct  float3
{
    float x, y, z;
};

struct   float4
{
    float x, y, z, w;
};

struct  longlong1
{
    long long int x;
};

struct  ulonglong1
{
    unsigned long long int x;
};

struct   longlong2
{
    long long int x, y;
};

struct   ulonglong2
{
    unsigned long long int x, y;
};

struct  longlong3
{
    long long int x, y, z;
};

struct  ulonglong3
{
    unsigned long long int x, y, z;
};

struct   longlong4
{
    long long int x, y, z ,w;
};

struct   ulonglong4
{
    unsigned long long int x, y, z, w;
};

struct  double1
{
    double x;
};

struct   double2
{
    double x, y;
};

struct  double3
{
    double x, y, z;
};

struct   double4
{
    double x, y, z, w;
};



#pragma warning(pop)

#line 355 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"







typedef  struct char1 char1;
typedef  struct uchar1 uchar1;
typedef  struct char2 char2;
typedef  struct uchar2 uchar2;
typedef  struct char3 char3;
typedef  struct uchar3 uchar3;
typedef  struct char4 char4;
typedef  struct uchar4 uchar4;
typedef  struct short1 short1;
typedef  struct ushort1 ushort1;
typedef  struct short2 short2;
typedef  struct ushort2 ushort2;
typedef  struct short3 short3;
typedef  struct ushort3 ushort3;
typedef  struct short4 short4;
typedef  struct ushort4 ushort4;
typedef  struct int1 int1;
typedef  struct uint1 uint1;
typedef  struct int2 int2;
typedef  struct uint2 uint2;
typedef  struct int3 int3;
typedef  struct uint3 uint3;
typedef  struct int4 int4;
typedef  struct uint4 uint4;
typedef  struct long1 long1;
typedef  struct ulong1 ulong1;
typedef  struct long2 long2;
typedef  struct ulong2 ulong2;
typedef  struct long3 long3;
typedef  struct ulong3 ulong3;
typedef  struct long4 long4;
typedef  struct ulong4 ulong4;
typedef  struct float1 float1;
typedef  struct float2 float2;
typedef  struct float3 float3;
typedef  struct float4 float4;
typedef  struct longlong1 longlong1;
typedef  struct ulonglong1 ulonglong1;
typedef  struct longlong2 longlong2;
typedef  struct ulonglong2 ulonglong2;
typedef  struct longlong3 longlong3;
typedef  struct ulonglong3 ulonglong3;
typedef  struct longlong4 longlong4;
typedef  struct ulonglong4 ulonglong4;
typedef  struct double1 double1;
typedef  struct double2 double2;
typedef  struct double3 double3;
typedef  struct double4 double4;







struct  dim3
{
    unsigned int x, y, z;

      dim3(unsigned int vx = 1, unsigned int vy = 1, unsigned int vz = 1) : x(vx), y(vy), z(vz) {}
      dim3(uint3 v) : x(v.x), y(v.y), z(v.z) {}
      operator uint3(void) { uint3 t; t.x = x; t.y = y; t.z = z; return t; }
#line 425 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"
};

typedef  struct dim3 dim3;



#line 432 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"
#line 65 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\builtin_types.h"
#line 70 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\crt/host_runtime.h"
#line 1 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\crt\\storage_class.h"










































#line 44 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\crt\\storage_class.h"






#line 51 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\crt\\storage_class.h"



#line 55 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\crt\\storage_class.h"



#line 59 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\crt\\storage_class.h"



#line 63 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\crt\\storage_class.h"



#line 67 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\crt\\storage_class.h"



#line 71 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\crt\\storage_class.h"



#line 75 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\crt\\storage_class.h"



#line 79 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\crt\\storage_class.h"



#line 83 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\crt\\storage_class.h"



#line 87 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\crt\\storage_class.h"



#line 91 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\crt\\storage_class.h"



#line 95 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\crt\\storage_class.h"



#line 99 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\crt\\storage_class.h"



#line 103 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\crt\\storage_class.h"



#line 107 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\crt\\storage_class.h"



#line 111 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\crt\\storage_class.h"



#line 115 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\crt\\storage_class.h"



#line 119 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\crt\\storage_class.h"



#line 123 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\crt\\storage_class.h"



#line 127 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\crt\\storage_class.h"



#line 131 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\crt\\storage_class.h"



#line 135 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\crt\\storage_class.h"



#line 139 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\crt\\storage_class.h"



#line 143 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\crt\\storage_class.h"



#line 147 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\crt\\storage_class.h"

#line 149 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\crt\\storage_class.h"
#line 71 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\crt/host_runtime.h"







































































































































































































#line 271 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\crt/host_runtime.h"
#line 498 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\crtdefs.h"
#line 503 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\crtdefs.h"
extern "C" { typedef size_t rsize_t; }
#line 512 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\crtdefs.h"
extern "C" { typedef int __w64 intptr_t; }
#line 530 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\crtdefs.h"
extern "C" { typedef int __w64 ptrdiff_t; }
#line 541 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\crtdefs.h"
extern "C" { typedef unsigned short wint_t; }
#line 542 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\crtdefs.h"
extern "C" { typedef unsigned short wctype_t; }
#line 563 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\crtdefs.h"
extern "C" { typedef int errno_t; }
#line 567 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\crtdefs.h"
extern "C" { typedef long __w64 __time32_t; }
#line 572 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\crtdefs.h"
extern "C" { typedef __int64 __time64_t; }
#line 580 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\crtdefs.h"
extern "C" { typedef __time64_t time_t; }
#line 635 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\crtdefs.h"
extern "C" { __declspec(dllimport) void __cdecl _invalid_parameter(const __wchar_t *, const __wchar_t *, const __wchar_t *, unsigned, uintptr_t); } 
#line 642 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\crtdefs.h"
extern "C" { 
#line 641 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\crtdefs.h"
__declspec(dllimport) __declspec(noreturn) void __cdecl 
#line 642 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\crtdefs.h"
_invoke_watson(const __wchar_t *, const __wchar_t *, const __wchar_t *, unsigned, uintptr_t); } 
#line 2072 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\crtdefs.h"
struct threadlocaleinfostruct; 
#line 2073 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\crtdefs.h"
struct threadmbcinfostruct; 
#line 2074 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\crtdefs.h"
extern "C" { typedef threadlocaleinfostruct *pthreadlocinfo; }
#line 2075 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\crtdefs.h"
extern "C" { typedef threadmbcinfostruct *pthreadmbcinfo; }
#line 2076 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\crtdefs.h"
struct __lc_time_data; 
#line 2082 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\crtdefs.h"
extern "C" { typedef 
#line 2078 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\crtdefs.h"
struct localeinfo_struct { 
#line 2080 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\crtdefs.h"
pthreadlocinfo locinfo; 
#line 2081 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\crtdefs.h"
pthreadmbcinfo mbcinfo; 
#line 2082 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\crtdefs.h"
} _locale_tstruct, *_locale_t; }
#line 2090 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\crtdefs.h"
extern "C" { typedef 
#line 2085 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\crtdefs.h"
struct localerefcount { 
#line 2086 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\crtdefs.h"
char *locale; 
#line 2087 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\crtdefs.h"
__wchar_t *wlocale; 
#line 2088 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\crtdefs.h"
int *refcount; 
#line 2089 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\crtdefs.h"
int *wrefcount; 
#line 2090 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\crtdefs.h"
} locrefcount; }
#line 2111 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\crtdefs.h"
extern "C" { typedef 
#line 2092 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\crtdefs.h"
struct threadlocaleinfostruct { 
#line 2093 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\crtdefs.h"
int refcount; 
#line 2094 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\crtdefs.h"
unsigned lc_codepage; 
#line 2095 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\crtdefs.h"
unsigned lc_collate_cp; 
#line 2096 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\crtdefs.h"
unsigned lc_time_cp; 
#line 2097 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\crtdefs.h"
locrefcount lc_category[6]; 
#line 2098 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\crtdefs.h"
int lc_clike; 
#line 2099 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\crtdefs.h"
int mb_cur_max; 
#line 2100 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\crtdefs.h"
int *lconv_intl_refcount; 
#line 2101 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\crtdefs.h"
int *lconv_num_refcount; 
#line 2102 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\crtdefs.h"
int *lconv_mon_refcount; 
#line 2103 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\crtdefs.h"
struct lconv *lconv; 
#line 2104 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\crtdefs.h"
int *ctype1_refcount; 
#line 2105 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\crtdefs.h"
unsigned short *ctype1; 
#line 2106 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\crtdefs.h"
const unsigned short *pctype; 
#line 2107 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\crtdefs.h"
const unsigned char *pclmap; 
#line 2108 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\crtdefs.h"
const unsigned char *pcumap; 
#line 2109 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\crtdefs.h"
__lc_time_data *lc_time_curr; 
#line 2110 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\crtdefs.h"
__wchar_t *locale_name[6]; 
#line 2111 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\crtdefs.h"
} threadlocinfo; }
#line 2148 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\crtdefs.h"
#pragma pack ( pop )
#line 61 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_types.h"













#line 75 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_types.h"
#line 36 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stddef.h"
namespace std { typedef decltype((__nullptr)) nullptr_t; }
#line 37 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stddef.h"
using std::nullptr_t;
#line 43 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stddef.h"
extern "C" { __declspec(dllimport) extern int *__cdecl _errno(); } 
#line 46 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stddef.h"
extern "C" { errno_t __cdecl _set_errno(int _Value); } 
#line 47 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stddef.h"
extern "C" { errno_t __cdecl _get_errno(int * _Value); } 
#line 69 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stddef.h"
extern "C" { __declspec(dllimport) extern unsigned long __cdecl __threadid(); } 
#line 71 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stddef.h"
extern "C" { __declspec(dllimport) extern uintptr_t __cdecl __threadhandle(); } 
#line 151 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\driver_types.h"





































































































































































#line 317 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\driver_types.h"
#line 741 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\driver_types.h"













#line 755 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\driver_types.h"
#line 752 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\driver_types.h"















#line 768 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\driver_types.h"
#line 764 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\driver_types.h"
typedef struct cudaArray *cudaArray_t; 
#line 769 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\driver_types.h"
typedef const cudaArray *cudaArray_const_t; 
#line 771 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\driver_types.h"
struct cudaArray; 
#line 776 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\driver_types.h"
typedef struct cudaMipmappedArray *cudaMipmappedArray_t; 
#line 781 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\driver_types.h"
typedef const cudaMipmappedArray *cudaMipmappedArray_const_t; 
#line 783 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\driver_types.h"
struct cudaMipmappedArray; 
#line 788 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\driver_types.h"









#line 798 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\driver_types.h"
#line 797 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\driver_types.h"















#line 813 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\driver_types.h"
#line 811 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\driver_types.h"













#line 825 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\driver_types.h"
#line 824 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\driver_types.h"











#line 836 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\driver_types.h"
#line 836 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\driver_types.h"











#line 848 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\driver_types.h"
#line 846 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\driver_types.h"





















#line 868 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\driver_types.h"
#line 863 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\driver_types.h"























#line 887 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\driver_types.h"
#line 881 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\driver_types.h"
struct cudaGraphicsResource; 
#line 886 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\driver_types.h"















#line 902 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\driver_types.h"
#line 898 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\driver_types.h"











#line 910 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\driver_types.h"
#line 908 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\driver_types.h"

















#line 926 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\driver_types.h"
#line 921 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\driver_types.h"













#line 935 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\driver_types.h"
#line 932 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\driver_types.h"











































































#line 1008 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\driver_types.h"
#line 974 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\driver_types.h"















































#line 1022 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\driver_types.h"
#line 1002 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\driver_types.h"





















#line 1024 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\driver_types.h"
#line 1017 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\driver_types.h"















#line 1033 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\driver_types.h"
#line 1057 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\driver_types.h"





















#line 1079 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\driver_types.h"
#line 1113 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\driver_types.h"













#line 1127 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\driver_types.h"
#line 1125 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\driver_types.h"











#line 1137 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\driver_types.h"
#line 1135 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\driver_types.h"













#line 1149 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\driver_types.h"
#line 1146 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\driver_types.h"















#line 1162 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\driver_types.h"
#line 1158 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\driver_types.h"









#line 1168 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\driver_types.h"
#line 1167 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\driver_types.h"













































































































































































#line 1341 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\driver_types.h"
#line 1258 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\driver_types.h"

































































































































#line 1388 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\driver_types.h"
#line 1401 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\driver_types.h"








#line 1410 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\driver_types.h"
#line 1409 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\driver_types.h"








#line 1418 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\driver_types.h"
#line 1420 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\driver_types.h"




#line 1425 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\driver_types.h"
#line 1425 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\driver_types.h"




#line 1430 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\driver_types.h"
#line 1430 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\driver_types.h"




#line 1435 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\driver_types.h"
#line 1435 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\driver_types.h"




#line 1440 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\driver_types.h"
#line 1440 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\driver_types.h"




#line 1445 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\driver_types.h"
#line 1445 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\driver_types.h"




#line 1450 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\driver_types.h"
#line 84 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_types.h"











#line 96 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_types.h"
#line 94 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_types.h"









#line 104 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_types.h"
#line 103 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_types.h"







#line 111 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_types.h"
#line 114 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_types.h"




#line 119 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_types.h"
#line 84 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_types.h"













#line 98 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_types.h"
#line 95 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_types.h"









#line 105 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_types.h"
#line 104 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_types.h"









#line 114 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_types.h"
#line 113 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_types.h"



























#line 141 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_types.h"
#line 161 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_types.h"

























#line 187 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_types.h"
#line 208 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_types.h"




#line 213 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_types.h"
#line 98 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"







#line 106 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"
#line 103 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"







#line 111 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"
#line 109 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"







#line 117 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"
#line 114 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"







#line 122 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"
#line 119 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"







#line 127 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"
#line 124 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"







#line 132 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"
#line 129 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"







#line 137 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"
#line 134 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"







#line 142 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"
#line 139 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"







#line 147 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"
#line 144 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"







#line 152 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"
#line 149 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"







#line 157 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"
#line 154 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"







#line 162 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"
#line 159 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"







#line 167 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"
#line 164 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"







#line 172 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"
#line 169 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"



#line 173 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"
#line 170 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"



#line 174 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"
#line 172 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"







#line 180 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"
#line 177 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"







#line 185 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"
#line 182 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"



#line 186 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"
#line 183 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"



#line 187 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"
#line 185 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"







#line 193 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"
#line 190 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"







#line 198 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"
#line 195 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"







#line 203 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"
#line 200 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"







#line 208 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"
#line 205 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"







#line 213 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"
#line 210 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"







#line 218 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"
#line 216 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"



#line 220 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"
#line 217 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"



#line 221 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"
#line 232 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"







#line 240 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"
#line 237 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"







#line 245 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"
#line 242 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"







#line 250 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"
#line 247 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"







#line 255 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"
#line 252 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"







#line 260 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"
#line 274 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"



#line 278 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"
#line 279 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"







#line 287 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"
#line 284 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"







#line 292 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"
#line 289 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"







#line 297 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"
#line 294 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"







#line 302 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"
#line 299 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"







#line 307 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"
#line 304 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"







#line 312 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"
#line 309 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"







#line 317 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"
#line 314 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"







#line 322 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"
#line 319 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"







#line 327 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"
#line 324 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"







#line 332 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"
#line 329 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"







#line 337 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"
#line 334 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"







#line 342 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"
#line 339 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"







#line 347 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"
#line 344 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"







#line 352 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"
#line 362 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"




#line 367 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"
#line 363 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"




#line 368 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"
#line 364 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"




#line 369 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"
#line 365 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"




#line 370 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"
#line 366 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"




#line 371 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"
#line 367 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"




#line 372 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"
#line 368 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"




#line 373 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"
#line 369 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"




#line 374 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"
#line 370 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"




#line 375 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"
#line 371 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"




#line 376 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"
#line 372 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"




#line 377 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"
#line 373 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"




#line 378 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"
#line 374 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"




#line 379 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"
#line 375 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"




#line 380 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"
#line 376 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"




#line 381 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"
#line 377 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"




#line 382 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"
#line 378 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"




#line 383 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"
#line 379 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"




#line 384 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"
#line 380 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"




#line 385 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"
#line 381 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"




#line 386 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"
#line 382 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"




#line 387 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"
#line 383 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"




#line 388 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"
#line 384 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"




#line 389 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"
#line 385 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"




#line 390 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"
#line 386 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"




#line 391 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"
#line 387 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"




#line 392 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"
#line 388 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"




#line 393 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"
#line 389 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"




#line 394 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"
#line 390 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"




#line 395 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"
#line 391 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"




#line 396 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"
#line 392 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"




#line 397 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"
#line 393 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"




#line 398 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"
#line 394 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"




#line 399 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"
#line 395 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"




#line 400 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"
#line 396 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"




#line 401 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"
#line 397 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"




#line 402 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"
#line 398 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"




#line 403 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"
#line 399 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"




#line 404 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"
#line 400 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"




#line 405 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"
#line 401 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"




#line 406 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"
#line 402 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"




#line 407 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"
#line 403 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"




#line 408 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"
#line 404 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"




#line 409 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"
#line 405 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"




#line 410 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"
#line 406 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"




#line 411 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"
#line 407 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"




#line 412 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"
#line 408 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"




#line 413 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"
#line 409 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"




#line 414 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"
#line 417 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"







#line 425 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"
#line 427 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"




#line 432 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_types.h"
#line 106 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_device_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaDeviceGetAttribute(int * value, cudaDeviceAttr attr, int device); } 
#line 107 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_device_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaDeviceGetLimit(size_t * pValue, cudaLimit limit); } 
#line 108 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_device_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaDeviceGetCacheConfig(cudaFuncCache * pCacheConfig); } 
#line 109 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_device_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaDeviceGetSharedMemConfig(cudaSharedMemConfig * pConfig); } 
#line 110 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_device_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaDeviceSynchronize(); } 
#line 111 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_device_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaGetLastError(); } 
#line 112 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_device_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaPeekAtLastError(); } 
#line 113 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_device_runtime_api.h"
extern "C" { extern const char *__stdcall cudaGetErrorString(cudaError_t error); } 
#line 114 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_device_runtime_api.h"
extern "C" { extern const char *__stdcall cudaGetErrorName(cudaError_t error); } 
#line 115 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_device_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaGetDeviceCount(int * count); } 
#line 116 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_device_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaGetDevice(int * device); } 
#line 117 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_device_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaStreamCreateWithFlags(cudaStream_t * pStream, unsigned flags); } 
#line 118 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_device_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaStreamDestroy(cudaStream_t stream); } 
#line 119 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_device_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaStreamWaitEvent(cudaStream_t stream, cudaEvent_t event, unsigned flags); } 
#line 120 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_device_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaStreamWaitEvent_ptsz(cudaStream_t stream, cudaEvent_t event, unsigned flags); } 
#line 121 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_device_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaEventCreateWithFlags(cudaEvent_t * event, unsigned flags); } 
#line 122 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_device_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaEventRecord(cudaEvent_t event, cudaStream_t stream); } 
#line 123 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_device_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaEventRecord_ptsz(cudaEvent_t event, cudaStream_t stream); } 
#line 124 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_device_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaEventDestroy(cudaEvent_t event); } 
#line 125 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_device_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaFuncGetAttributes(cudaFuncAttributes * attr, const void * func); } 
#line 126 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_device_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaFree(void * devPtr); } 
#line 127 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_device_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMalloc(void ** devPtr, size_t size); } 
#line 128 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_device_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemcpyAsync(void * dst, const void * src, size_t count, cudaMemcpyKind kind, cudaStream_t stream); } 
#line 129 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_device_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemcpyAsync_ptsz(void * dst, const void * src, size_t count, cudaMemcpyKind kind, cudaStream_t stream); } 
#line 130 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_device_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemcpy2DAsync(void * dst, size_t dpitch, const void * src, size_t spitch, size_t width, size_t height, cudaMemcpyKind kind, cudaStream_t stream); } 
#line 131 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_device_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemcpy2DAsync_ptsz(void * dst, size_t dpitch, const void * src, size_t spitch, size_t width, size_t height, cudaMemcpyKind kind, cudaStream_t stream); } 
#line 132 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_device_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemcpy3DAsync(const cudaMemcpy3DParms * p, cudaStream_t stream); } 
#line 133 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_device_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemcpy3DAsync_ptsz(const cudaMemcpy3DParms * p, cudaStream_t stream); } 
#line 134 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_device_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemsetAsync(void * devPtr, int value, size_t count, cudaStream_t stream); } 
#line 135 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_device_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemsetAsync_ptsz(void * devPtr, int value, size_t count, cudaStream_t stream); } 
#line 136 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_device_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemset2DAsync(void * devPtr, size_t pitch, int value, size_t width, size_t height, cudaStream_t stream); } 
#line 137 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_device_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemset2DAsync_ptsz(void * devPtr, size_t pitch, int value, size_t width, size_t height, cudaStream_t stream); } 
#line 138 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_device_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemset3DAsync(cudaPitchedPtr pitchedDevPtr, int value, cudaExtent extent, cudaStream_t stream); } 
#line 139 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_device_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemset3DAsync_ptsz(cudaPitchedPtr pitchedDevPtr, int value, cudaExtent extent, cudaStream_t stream); } 
#line 140 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_device_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaRuntimeGetVersion(int * runtimeVersion); } 
#line 161 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_device_runtime_api.h"
extern "C" { extern void *__stdcall cudaGetParameterBuffer(size_t alignment, size_t size); } 
#line 189 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_device_runtime_api.h"
extern "C" { extern void *__stdcall cudaGetParameterBufferV2(void * func, dim3 gridDimension, dim3 blockDimension, unsigned sharedMemSize); } 
#line 190 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_device_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaLaunchDevice_ptsz(void * func, void * parameterBuffer, dim3 gridDimension, dim3 blockDimension, unsigned sharedMemSize, cudaStream_t stream); } 
#line 191 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_device_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaLaunchDeviceV2_ptsz(void * parameterBuffer, cudaStream_t stream); } 
#line 209 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_device_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaLaunchDevice(void * func, void * parameterBuffer, dim3 gridDimension, dim3 blockDimension, unsigned sharedMemSize, cudaStream_t stream); } 
#line 210 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_device_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaLaunchDeviceV2(void * parameterBuffer, cudaStream_t stream); } 
#line 213 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_device_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaOccupancyMaxActiveBlocksPerMultiprocessor(int * numBlocks, const void * func, int blockSize, size_t dynamicSmemSize); } 
#line 214 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_device_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags(int * numBlocks, const void * func, int blockSize, size_t dynamicSmemSize, unsigned flags); } 
#line 218 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_device_runtime_api.h"
template< class T> static __inline cudaError_t cudaMalloc(T ** devPtr, size_t size); 
#line 219 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_device_runtime_api.h"
template< class T> static __inline cudaError_t cudaFuncGetAttributes(cudaFuncAttributes * attr, T * entry); 
#line 220 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_device_runtime_api.h"
template< class T> static __inline cudaError_t cudaOccupancyMaxActiveBlocksPerMultiprocessor(int * numBlocks, T func, int blockSize, size_t dynamicSmemSize); 
#line 221 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_device_runtime_api.h"
template< class T> static __inline cudaError_t cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags(int * numBlocks, T func, int blockSize, size_t dynamicSmemSize, unsigned flags); 
#line 251 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaDeviceReset(); } 
#line 268 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaDeviceSynchronize(); } 
#line 343 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaDeviceSetLimit(cudaLimit limit, size_t value); } 
#line 372 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaDeviceGetLimit(size_t * pValue, cudaLimit limit); } 
#line 403 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaDeviceGetCacheConfig(cudaFuncCache * pCacheConfig); } 
#line 438 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaDeviceGetStreamPriorityRange(int * leastPriority, int * greatestPriority); } 
#line 480 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaDeviceSetCacheConfig(cudaFuncCache cacheConfig); } 
#line 509 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaDeviceGetSharedMemConfig(cudaSharedMemConfig * pConfig); } 
#line 551 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaDeviceSetSharedMemConfig(cudaSharedMemConfig config); } 
#line 574 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaDeviceGetByPCIBusId(int * device, const char * pciBusId); } 
#line 601 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaDeviceGetPCIBusId(char * pciBusId, int len, int device); } 
#line 643 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaIpcGetEventHandle(cudaIpcEventHandle_t * handle, cudaEvent_t event); } 
#line 678 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaIpcOpenEventHandle(cudaEvent_t * event, cudaIpcEventHandle_t handle); } 
#line 716 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaIpcGetMemHandle(cudaIpcMemHandle_t * handle, void * devPtr); } 
#line 766 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaIpcOpenMemHandle(void ** devPtr, cudaIpcMemHandle_t handle, unsigned flags); } 
#line 796 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaIpcCloseMemHandle(void * devPtr); } 
#line 836 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaThreadExit(); } 
#line 860 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaThreadSynchronize(); } 
#line 907 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaThreadSetLimit(cudaLimit limit, size_t value); } 
#line 938 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaThreadGetLimit(size_t * pValue, cudaLimit limit); } 
#line 973 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaThreadGetCacheConfig(cudaFuncCache * pCacheConfig); } 
#line 1019 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaThreadSetCacheConfig(cudaFuncCache cacheConfig); } 
#line 1073 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaGetLastError(); } 
#line 1114 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaPeekAtLastError(); } 
#line 1129 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_runtime_api.h"
extern "C" { extern const char *__stdcall cudaGetErrorName(cudaError_t error); } 
#line 1144 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_runtime_api.h"
extern "C" { extern const char *__stdcall cudaGetErrorString(cudaError_t error); } 
#line 1174 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaGetDeviceCount(int * count); } 
#line 1410 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaGetDeviceProperties(cudaDeviceProp * prop, int device); } 
#line 1570 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaDeviceGetAttribute(int * value, cudaDeviceAttr attr, int device); } 
#line 1589 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaChooseDevice(int * device, const cudaDeviceProp * prop); } 
#line 1623 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaSetDevice(int device); } 
#line 1640 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaGetDevice(int * device); } 
#line 1669 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaSetValidDevices(int * device_arr, int len); } 
#line 1731 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaSetDeviceFlags(unsigned flags); } 
#line 1772 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaGetDeviceFlags(unsigned * flags); } 
#line 1809 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaStreamCreate(cudaStream_t * pStream); } 
#line 1838 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaStreamCreateWithFlags(cudaStream_t * pStream, unsigned flags); } 
#line 1881 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaStreamCreateWithPriority(cudaStream_t * pStream, unsigned flags, int priority); } 
#line 1905 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaStreamGetPriority(cudaStream_t hStream, int * priority); } 
#line 1926 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaStreamGetFlags(cudaStream_t hStream, unsigned * flags); } 
#line 1947 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaStreamDestroy(cudaStream_t stream); } 
#line 1979 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaStreamWaitEvent(cudaStream_t stream, cudaEvent_t event, unsigned flags); } 
#line 1993 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_runtime_api.h"
extern "C" { typedef void (__stdcall *cudaStreamCallback_t)(cudaStream_t stream, cudaError_t status, void * userData); }
#line 2050 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaStreamAddCallback(cudaStream_t stream, cudaStreamCallback_t callback, void * userData, unsigned flags); } 
#line 2070 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaStreamSynchronize(cudaStream_t stream); } 
#line 2091 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaStreamQuery(cudaStream_t stream); } 
#line 2157 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaStreamAttachMemAsync(cudaStream_t stream, void * devPtr, size_t length, unsigned flags); } 
#line 2193 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaEventCreate(cudaEvent_t * event); } 
#line 2227 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaEventCreateWithFlags(cudaEvent_t * event, unsigned flags); } 
#line 2258 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaEventRecord(cudaEvent_t event, cudaStream_t stream = 0); } 
#line 2290 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaEventQuery(cudaEvent_t event); } 
#line 2322 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaEventSynchronize(cudaEvent_t event); } 
#line 2347 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaEventDestroy(cudaEvent_t event); } 
#line 2388 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaEventElapsedTime(float * ms, cudaEvent_t start, cudaEvent_t end); } 
#line 2447 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaLaunchKernel(const void * func, dim3 gridDim, dim3 blockDim, void ** args, size_t sharedMem, cudaStream_t stream); } 
#line 2497 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaFuncSetCacheConfig(const void * func, cudaFuncCache cacheConfig); } 
#line 2551 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaFuncSetSharedMemConfig(const void * func, cudaSharedMemConfig config); } 
#line 2585 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaFuncGetAttributes(cudaFuncAttributes * attr, const void * func); } 
#line 2608 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaSetDoubleForDevice(double * d); } 
#line 2631 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaSetDoubleForHost(double * d); } 
#line 2687 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaOccupancyMaxActiveBlocksPerMultiprocessor(int * numBlocks, const void * func, int blockSize, size_t dynamicSMemSize); } 
#line 2731 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags(int * numBlocks, const void * func, int blockSize, size_t dynamicSMemSize, unsigned flags); } 
#line 2782 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaConfigureCall(dim3 gridDim, dim3 blockDim, size_t sharedMem = 0, cudaStream_t stream = 0); } 
#line 2811 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaSetupArgument(const void * arg, size_t size, size_t offset); } 
#line 2849 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaLaunch(const void * func); } 
#line 2938 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMallocManaged(void ** devPtr, size_t size, unsigned flags); } 
#line 2964 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMalloc(void ** devPtr, size_t size); } 
#line 2993 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMallocHost(void ** ptr, size_t size); } 
#line 3032 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMallocPitch(void ** devPtr, size_t * pitch, size_t width, size_t height); } 
#line 3074 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMallocArray(cudaArray_t * array, const cudaChannelFormatDesc * desc, size_t width, size_t height = 0, unsigned flags = 0); } 
#line 3101 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaFree(void * devPtr); } 
#line 3121 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaFreeHost(void * ptr); } 
#line 3143 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaFreeArray(cudaArray_t array); } 
#line 3165 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaFreeMipmappedArray(cudaMipmappedArray_t mipmappedArray); } 
#line 3224 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaHostAlloc(void ** pHost, size_t size, unsigned flags); } 
#line 3286 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaHostRegister(void * ptr, size_t size, unsigned flags); } 
#line 3305 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaHostUnregister(void * ptr); } 
#line 3332 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaHostGetDevicePointer(void ** pDevice, void * pHost, unsigned flags); } 
#line 3351 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaHostGetFlags(unsigned * pFlags, void * pHost); } 
#line 3386 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMalloc3D(cudaPitchedPtr * pitchedDevPtr, cudaExtent extent); } 
#line 3521 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMalloc3DArray(cudaArray_t * array, const cudaChannelFormatDesc * desc, cudaExtent extent, unsigned flags = 0); } 
#line 3642 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMallocMipmappedArray(cudaMipmappedArray_t * mipmappedArray, const cudaChannelFormatDesc * desc, cudaExtent extent, unsigned numLevels, unsigned flags = 0); } 
#line 3668 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaGetMipmappedArrayLevel(cudaArray_t * levelArray, cudaMipmappedArray_const_t mipmappedArray, unsigned level); } 
#line 3765 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemcpy3D(const cudaMemcpy3DParms * p); } 
#line 3793 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemcpy3DPeer(const cudaMemcpy3DPeerParms * p); } 
#line 3901 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemcpy3DAsync(const cudaMemcpy3DParms * p, cudaStream_t stream = 0); } 
#line 3924 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemcpy3DPeerAsync(const cudaMemcpy3DPeerParms * p, cudaStream_t stream = 0); } 
#line 3943 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemGetInfo(size_t * free, size_t * total); } 
#line 3964 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaArrayGetInfo(cudaChannelFormatDesc * desc, cudaExtent * extent, unsigned * flags, cudaArray_t array); } 
#line 3999 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemcpy(void * dst, const void * src, size_t count, cudaMemcpyKind kind); } 
#line 4031 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemcpyPeer(void * dst, int dstDevice, const void * src, int srcDevice, size_t count); } 
#line 4065 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemcpyToArray(cudaArray_t dst, size_t wOffset, size_t hOffset, const void * src, size_t count, cudaMemcpyKind kind); } 
#line 4099 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemcpyFromArray(void * dst, cudaArray_const_t src, size_t wOffset, size_t hOffset, size_t count, cudaMemcpyKind kind); } 
#line 4134 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemcpyArrayToArray(cudaArray_t dst, size_t wOffsetDst, size_t hOffsetDst, cudaArray_const_t src, size_t wOffsetSrc, size_t hOffsetSrc, size_t count, cudaMemcpyKind kind = cudaMemcpyDeviceToDevice); } 
#line 4176 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemcpy2D(void * dst, size_t dpitch, const void * src, size_t spitch, size_t width, size_t height, cudaMemcpyKind kind); } 
#line 4218 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemcpy2DToArray(cudaArray_t dst, size_t wOffset, size_t hOffset, const void * src, size_t spitch, size_t width, size_t height, cudaMemcpyKind kind); } 
#line 4260 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemcpy2DFromArray(void * dst, size_t dpitch, cudaArray_const_t src, size_t wOffset, size_t hOffset, size_t width, size_t height, cudaMemcpyKind kind); } 
#line 4300 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemcpy2DArrayToArray(cudaArray_t dst, size_t wOffsetDst, size_t hOffsetDst, cudaArray_const_t src, size_t wOffsetSrc, size_t hOffsetSrc, size_t width, size_t height, cudaMemcpyKind kind = cudaMemcpyDeviceToDevice); } 
#line 4335 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemcpyToSymbol(const void * symbol, const void * src, size_t count, size_t offset = 0, cudaMemcpyKind kind = cudaMemcpyHostToDevice); } 
#line 4370 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemcpyFromSymbol(void * dst, const void * symbol, size_t count, size_t offset = 0, cudaMemcpyKind kind = cudaMemcpyDeviceToHost); } 
#line 4416 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemcpyAsync(void * dst, const void * src, size_t count, cudaMemcpyKind kind, cudaStream_t stream = 0); } 
#line 4448 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemcpyPeerAsync(void * dst, int dstDevice, const void * src, int srcDevice, size_t count, cudaStream_t stream = 0); } 
#line 4490 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemcpyToArrayAsync(cudaArray_t dst, size_t wOffset, size_t hOffset, const void * src, size_t count, cudaMemcpyKind kind, cudaStream_t stream = 0); } 
#line 4532 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemcpyFromArrayAsync(void * dst, cudaArray_const_t src, size_t wOffset, size_t hOffset, size_t count, cudaMemcpyKind kind, cudaStream_t stream = 0); } 
#line 4587 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemcpy2DAsync(void * dst, size_t dpitch, const void * src, size_t spitch, size_t width, size_t height, cudaMemcpyKind kind, cudaStream_t stream = 0); } 
#line 4638 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemcpy2DToArrayAsync(cudaArray_t dst, size_t wOffset, size_t hOffset, const void * src, size_t spitch, size_t width, size_t height, cudaMemcpyKind kind, cudaStream_t stream = 0); } 
#line 4688 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemcpy2DFromArrayAsync(void * dst, size_t dpitch, cudaArray_const_t src, size_t wOffset, size_t hOffset, size_t width, size_t height, cudaMemcpyKind kind, cudaStream_t stream = 0); } 
#line 4731 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemcpyToSymbolAsync(const void * symbol, const void * src, size_t count, size_t offset, cudaMemcpyKind kind, cudaStream_t stream = 0); } 
#line 4774 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemcpyFromSymbolAsync(void * dst, const void * symbol, size_t count, size_t offset, cudaMemcpyKind kind, cudaStream_t stream = 0); } 
#line 4800 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemset(void * devPtr, int value, size_t count); } 
#line 4830 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemset2D(void * devPtr, size_t pitch, int value, size_t width, size_t height); } 
#line 4873 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemset3D(cudaPitchedPtr pitchedDevPtr, int value, cudaExtent extent); } 
#line 4905 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemsetAsync(void * devPtr, int value, size_t count, cudaStream_t stream = 0); } 
#line 4942 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemset2DAsync(void * devPtr, size_t pitch, int value, size_t width, size_t height, cudaStream_t stream = 0); } 
#line 4992 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemset3DAsync(cudaPitchedPtr pitchedDevPtr, int value, cudaExtent extent, cudaStream_t stream = 0); } 
#line 5015 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaGetSymbolAddress(void ** devPtr, const void * symbol); } 
#line 5037 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaGetSymbolSize(size_t * size, const void * symbol); } 
#line 5190 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaPointerGetAttributes(cudaPointerAttributes * attributes, const void * ptr); } 
#line 5228 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaDeviceCanAccessPeer(int * canAccessPeer, int device, int peerDevice); } 
#line 5267 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaDeviceEnablePeerAccess(int peerDevice, unsigned flags); } 
#line 5286 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaDeviceDisablePeerAccess(int peerDevice); } 
#line 5344 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaGraphicsUnregisterResource(cudaGraphicsResource_t resource); } 
#line 5376 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaGraphicsResourceSetMapFlags(cudaGraphicsResource_t resource, unsigned flags); } 
#line 5412 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaGraphicsMapResources(int count, cudaGraphicsResource_t * resources, cudaStream_t stream = 0); } 
#line 5444 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaGraphicsUnmapResources(int count, cudaGraphicsResource_t * resources, cudaStream_t stream = 0); } 
#line 5473 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaGraphicsResourceGetMappedPointer(void ** devPtr, size_t * size, cudaGraphicsResource_t resource); } 
#line 5507 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaGraphicsSubResourceGetMappedArray(cudaArray_t * array, cudaGraphicsResource_t resource, unsigned arrayIndex, unsigned mipLevel); } 
#line 5532 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaGraphicsResourceGetMappedMipmappedArray(cudaMipmappedArray_t * mipmappedArray, cudaGraphicsResource_t resource); } 
#line 5572 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaGetChannelDesc(cudaChannelFormatDesc * desc, cudaArray_const_t array); } 
#line 5607 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaChannelFormatDesc __stdcall cudaCreateChannelDesc(int x, int y, int z, int w, cudaChannelFormatKind f); } 
#line 5654 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaBindTexture(size_t * offset, const textureReference * texref, const void * devPtr, const cudaChannelFormatDesc * desc, size_t size = 4294967295U); } 
#line 5705 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaBindTexture2D(size_t * offset, const textureReference * texref, const void * devPtr, const cudaChannelFormatDesc * desc, size_t width, size_t height, size_t pitch); } 
#line 5733 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaBindTextureToArray(const textureReference * texref, cudaArray_const_t array, const cudaChannelFormatDesc * desc); } 
#line 5761 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaBindTextureToMipmappedArray(const textureReference * texref, cudaMipmappedArray_const_t mipmappedArray, const cudaChannelFormatDesc * desc); } 
#line 5782 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaUnbindTexture(const textureReference * texref); } 
#line 5807 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaGetTextureAlignmentOffset(size_t * offset, const textureReference * texref); } 
#line 5832 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaGetTextureReference(const textureReference ** texref, const void * symbol); } 
#line 5872 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaBindSurfaceToArray(const surfaceReference * surfref, cudaArray_const_t array, const cudaChannelFormatDesc * desc); } 
#line 5891 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaGetSurfaceReference(const surfaceReference ** surfref, const void * symbol); } 
#line 6108 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaCreateTextureObject(cudaTextureObject_t * pTexObject, const cudaResourceDesc * pResDesc, const cudaTextureDesc * pTexDesc, const cudaResourceViewDesc * pResViewDesc); } 
#line 6123 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaDestroyTextureObject(cudaTextureObject_t texObject); } 
#line 6139 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaGetTextureObjectResourceDesc(cudaResourceDesc * pResDesc, cudaTextureObject_t texObject); } 
#line 6155 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaGetTextureObjectTextureDesc(cudaTextureDesc * pTexDesc, cudaTextureObject_t texObject); } 
#line 6172 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaGetTextureObjectResourceViewDesc(cudaResourceViewDesc * pResViewDesc, cudaTextureObject_t texObject); } 
#line 6211 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaCreateSurfaceObject(cudaSurfaceObject_t * pSurfObject, const cudaResourceDesc * pResDesc); } 
#line 6226 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaDestroySurfaceObject(cudaSurfaceObject_t surfObject); } 
#line 6241 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaGetSurfaceObjectResourceDesc(cudaResourceDesc * pResDesc, cudaSurfaceObject_t surfObject); } 
#line 6268 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaDriverGetVersion(int * driverVersion); } 
#line 6285 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaRuntimeGetVersion(int * runtimeVersion); } 
#line 6290 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaGetExportTable(const void ** ppExportTable, const cudaUUID_t * pExportTableId); } 
#line 107 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
template< class T> __inline ::cudaChannelFormatDesc cudaCreateChannelDesc() 
#line 108 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
{ 
#line 109 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(0, 0, 0, 0, cudaChannelFormatKindNone); 
#line 110 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
} 
#line 112 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
static __inline cudaChannelFormatDesc cudaCreateChannelDescHalf() 
#line 113 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
{ 
#line 114 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
int e = (((int)sizeof(unsigned short)) * 8); 
#line 116 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindFloat); 
#line 117 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
} 
#line 119 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
static __inline cudaChannelFormatDesc cudaCreateChannelDescHalf1() 
#line 120 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
{ 
#line 121 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
int e = (((int)sizeof(unsigned short)) * 8); 
#line 123 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindFloat); 
#line 124 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
} 
#line 126 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
static __inline cudaChannelFormatDesc cudaCreateChannelDescHalf2() 
#line 127 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
{ 
#line 128 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
int e = (((int)sizeof(unsigned short)) * 8); 
#line 130 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, e, 0, 0, cudaChannelFormatKindFloat); 
#line 131 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
} 
#line 133 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
static __inline cudaChannelFormatDesc cudaCreateChannelDescHalf4() 
#line 134 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
{ 
#line 135 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
int e = (((int)sizeof(unsigned short)) * 8); 
#line 137 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, e, e, e, cudaChannelFormatKindFloat); 
#line 138 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
} 
#line 140 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< char> () 
#line 141 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
{ 
#line 142 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
int e = (((int)sizeof(char)) * 8); 
#line 147 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindSigned); 
#line 149 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
} 
#line 151 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< signed char> () 
#line 152 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
{ 
#line 153 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
int e = (((int)sizeof(signed char)) * 8); 
#line 155 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindSigned); 
#line 156 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
} 
#line 158 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< unsigned char> () 
#line 159 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
{ 
#line 160 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
int e = (((int)sizeof(unsigned char)) * 8); 
#line 162 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindUnsigned); 
#line 163 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
} 
#line 165 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< char1> () 
#line 166 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
{ 
#line 167 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
int e = (((int)sizeof(signed char)) * 8); 
#line 169 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindSigned); 
#line 170 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
} 
#line 172 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< uchar1> () 
#line 173 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
{ 
#line 174 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
int e = (((int)sizeof(unsigned char)) * 8); 
#line 176 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindUnsigned); 
#line 177 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
} 
#line 179 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< char2> () 
#line 180 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
{ 
#line 181 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
int e = (((int)sizeof(signed char)) * 8); 
#line 183 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, e, 0, 0, cudaChannelFormatKindSigned); 
#line 184 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
} 
#line 186 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< uchar2> () 
#line 187 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
{ 
#line 188 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
int e = (((int)sizeof(unsigned char)) * 8); 
#line 190 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, e, 0, 0, cudaChannelFormatKindUnsigned); 
#line 191 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
} 
#line 193 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< char4> () 
#line 194 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
{ 
#line 195 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
int e = (((int)sizeof(signed char)) * 8); 
#line 197 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, e, e, e, cudaChannelFormatKindSigned); 
#line 198 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
} 
#line 200 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< uchar4> () 
#line 201 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
{ 
#line 202 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
int e = (((int)sizeof(unsigned char)) * 8); 
#line 204 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, e, e, e, cudaChannelFormatKindUnsigned); 
#line 205 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
} 
#line 207 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< short> () 
#line 208 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
{ 
#line 209 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
int e = (((int)sizeof(short)) * 8); 
#line 211 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindSigned); 
#line 212 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
} 
#line 214 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< unsigned short> () 
#line 215 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
{ 
#line 216 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
int e = (((int)sizeof(unsigned short)) * 8); 
#line 218 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindUnsigned); 
#line 219 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
} 
#line 221 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< short1> () 
#line 222 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
{ 
#line 223 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
int e = (((int)sizeof(short)) * 8); 
#line 225 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindSigned); 
#line 226 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
} 
#line 228 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< ushort1> () 
#line 229 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
{ 
#line 230 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
int e = (((int)sizeof(unsigned short)) * 8); 
#line 232 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindUnsigned); 
#line 233 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
} 
#line 235 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< short2> () 
#line 236 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
{ 
#line 237 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
int e = (((int)sizeof(short)) * 8); 
#line 239 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, e, 0, 0, cudaChannelFormatKindSigned); 
#line 240 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
} 
#line 242 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< ushort2> () 
#line 243 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
{ 
#line 244 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
int e = (((int)sizeof(unsigned short)) * 8); 
#line 246 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, e, 0, 0, cudaChannelFormatKindUnsigned); 
#line 247 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
} 
#line 249 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< short4> () 
#line 250 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
{ 
#line 251 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
int e = (((int)sizeof(short)) * 8); 
#line 253 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, e, e, e, cudaChannelFormatKindSigned); 
#line 254 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
} 
#line 256 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< ushort4> () 
#line 257 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
{ 
#line 258 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
int e = (((int)sizeof(unsigned short)) * 8); 
#line 260 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, e, e, e, cudaChannelFormatKindUnsigned); 
#line 261 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
} 
#line 263 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< int> () 
#line 264 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
{ 
#line 265 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
int e = (((int)sizeof(int)) * 8); 
#line 267 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindSigned); 
#line 268 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
} 
#line 270 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< unsigned> () 
#line 271 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
{ 
#line 272 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
int e = (((int)sizeof(unsigned)) * 8); 
#line 274 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindUnsigned); 
#line 275 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
} 
#line 277 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< int1> () 
#line 278 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
{ 
#line 279 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
int e = (((int)sizeof(int)) * 8); 
#line 281 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindSigned); 
#line 282 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
} 
#line 284 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< uint1> () 
#line 285 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
{ 
#line 286 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
int e = (((int)sizeof(unsigned)) * 8); 
#line 288 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindUnsigned); 
#line 289 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
} 
#line 291 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< int2> () 
#line 292 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
{ 
#line 293 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
int e = (((int)sizeof(int)) * 8); 
#line 295 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, e, 0, 0, cudaChannelFormatKindSigned); 
#line 296 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
} 
#line 298 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< uint2> () 
#line 299 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
{ 
#line 300 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
int e = (((int)sizeof(unsigned)) * 8); 
#line 302 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, e, 0, 0, cudaChannelFormatKindUnsigned); 
#line 303 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
} 
#line 305 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< int4> () 
#line 306 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
{ 
#line 307 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
int e = (((int)sizeof(int)) * 8); 
#line 309 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, e, e, e, cudaChannelFormatKindSigned); 
#line 310 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
} 
#line 312 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< uint4> () 
#line 313 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
{ 
#line 314 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
int e = (((int)sizeof(unsigned)) * 8); 
#line 316 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, e, e, e, cudaChannelFormatKindUnsigned); 
#line 317 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
} 
#line 321 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< long> () 
#line 322 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
{ 
#line 323 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
int e = (((int)sizeof(long)) * 8); 
#line 325 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindSigned); 
#line 326 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
} 
#line 328 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< unsigned long> () 
#line 329 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
{ 
#line 330 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
int e = (((int)sizeof(unsigned long)) * 8); 
#line 332 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindUnsigned); 
#line 333 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
} 
#line 335 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< long1> () 
#line 336 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
{ 
#line 337 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
int e = (((int)sizeof(long)) * 8); 
#line 339 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindSigned); 
#line 340 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
} 
#line 342 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< ulong1> () 
#line 343 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
{ 
#line 344 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
int e = (((int)sizeof(unsigned long)) * 8); 
#line 346 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindUnsigned); 
#line 347 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
} 
#line 349 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< long2> () 
#line 350 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
{ 
#line 351 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
int e = (((int)sizeof(long)) * 8); 
#line 353 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, e, 0, 0, cudaChannelFormatKindSigned); 
#line 354 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
} 
#line 356 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< ulong2> () 
#line 357 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
{ 
#line 358 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
int e = (((int)sizeof(unsigned long)) * 8); 
#line 360 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, e, 0, 0, cudaChannelFormatKindUnsigned); 
#line 361 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
} 
#line 363 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< long4> () 
#line 364 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
{ 
#line 365 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
int e = (((int)sizeof(long)) * 8); 
#line 367 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, e, e, e, cudaChannelFormatKindSigned); 
#line 368 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
} 
#line 370 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< ulong4> () 
#line 371 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
{ 
#line 372 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
int e = (((int)sizeof(unsigned long)) * 8); 
#line 374 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, e, e, e, cudaChannelFormatKindUnsigned); 
#line 375 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
} 
#line 379 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< float> () 
#line 380 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
{ 
#line 381 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
int e = (((int)sizeof(float)) * 8); 
#line 383 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindFloat); 
#line 384 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
} 
#line 386 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< float1> () 
#line 387 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
{ 
#line 388 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
int e = (((int)sizeof(float)) * 8); 
#line 390 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindFloat); 
#line 391 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
} 
#line 393 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< float2> () 
#line 394 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
{ 
#line 395 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
int e = (((int)sizeof(float)) * 8); 
#line 397 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, e, 0, 0, cudaChannelFormatKindFloat); 
#line 398 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
} 
#line 400 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< float4> () 
#line 401 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
{ 
#line 402 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
int e = (((int)sizeof(float)) * 8); 
#line 404 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, e, e, e, cudaChannelFormatKindFloat); 
#line 405 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\channel_descriptor.h"
} 
#line 79 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\driver_functions.h"
static __inline cudaPitchedPtr make_cudaPitchedPtr(void *d, size_t p, size_t xsz, size_t ysz) 
#line 80 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\driver_functions.h"
{ 
#line 81 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\driver_functions.h"
cudaPitchedPtr s; 
#line 83 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\driver_functions.h"
(s.ptr) = d; 
#line 84 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\driver_functions.h"
(s.pitch) = p; 
#line 85 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\driver_functions.h"
(s.xsize) = xsz; 
#line 86 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\driver_functions.h"
(s.ysize) = ysz; 
#line 88 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\driver_functions.h"
return s; 
#line 89 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\driver_functions.h"
} 
#line 106 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\driver_functions.h"
static __inline cudaPos make_cudaPos(size_t x, size_t y, size_t z) 
#line 107 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\driver_functions.h"
{ 
#line 108 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\driver_functions.h"
cudaPos p; 
#line 110 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\driver_functions.h"
(p.x) = x; 
#line 111 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\driver_functions.h"
(p.y) = y; 
#line 112 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\driver_functions.h"
(p.z) = z; 
#line 114 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\driver_functions.h"
return p; 
#line 115 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\driver_functions.h"
} 
#line 132 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\driver_functions.h"
static __inline cudaExtent make_cudaExtent(size_t w, size_t h, size_t d) 
#line 133 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\driver_functions.h"
{ 
#line 134 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\driver_functions.h"
cudaExtent e; 
#line 136 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\driver_functions.h"
(e.width) = w; 
#line 137 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\driver_functions.h"
(e.height) = h; 
#line 138 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\driver_functions.h"
(e.depth) = d; 
#line 140 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\driver_functions.h"
return e; 
#line 141 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\driver_functions.h"
} 
#line 75 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.h"
static __inline char1 make_char1(signed char x); 
#line 77 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.h"
static __inline uchar1 make_uchar1(unsigned char x); 
#line 79 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.h"
static __inline char2 make_char2(signed char x, signed char y); 
#line 81 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.h"
static __inline uchar2 make_uchar2(unsigned char x, unsigned char y); 
#line 83 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.h"
static __inline char3 make_char3(signed char x, signed char y, signed char z); 
#line 85 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.h"
static __inline uchar3 make_uchar3(unsigned char x, unsigned char y, unsigned char z); 
#line 87 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.h"
static __inline char4 make_char4(signed char x, signed char y, signed char z, signed char w); 
#line 89 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.h"
static __inline uchar4 make_uchar4(unsigned char x, unsigned char y, unsigned char z, unsigned char w); 
#line 91 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.h"
static __inline short1 make_short1(short x); 
#line 93 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.h"
static __inline ushort1 make_ushort1(unsigned short x); 
#line 95 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.h"
static __inline short2 make_short2(short x, short y); 
#line 97 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.h"
static __inline ushort2 make_ushort2(unsigned short x, unsigned short y); 
#line 99 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.h"
static __inline short3 make_short3(short x, short y, short z); 
#line 101 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.h"
static __inline ushort3 make_ushort3(unsigned short x, unsigned short y, unsigned short z); 
#line 103 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.h"
static __inline short4 make_short4(short x, short y, short z, short w); 
#line 105 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.h"
static __inline ushort4 make_ushort4(unsigned short x, unsigned short y, unsigned short z, unsigned short w); 
#line 107 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.h"
static __inline int1 make_int1(int x); 
#line 109 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.h"
static __inline uint1 make_uint1(unsigned x); 
#line 111 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.h"
static __inline int2 make_int2(int x, int y); 
#line 113 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.h"
static __inline uint2 make_uint2(unsigned x, unsigned y); 
#line 115 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.h"
static __inline int3 make_int3(int x, int y, int z); 
#line 117 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.h"
static __inline uint3 make_uint3(unsigned x, unsigned y, unsigned z); 
#line 119 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.h"
static __inline int4 make_int4(int x, int y, int z, int w); 
#line 121 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.h"
static __inline uint4 make_uint4(unsigned x, unsigned y, unsigned z, unsigned w); 
#line 123 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.h"
static __inline long1 make_long1(long x); 
#line 125 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.h"
static __inline ulong1 make_ulong1(unsigned long x); 
#line 127 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.h"
static __inline long2 make_long2(long x, long y); 
#line 129 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.h"
static __inline ulong2 make_ulong2(unsigned long x, unsigned long y); 
#line 131 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.h"
static __inline long3 make_long3(long x, long y, long z); 
#line 133 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.h"
static __inline ulong3 make_ulong3(unsigned long x, unsigned long y, unsigned long z); 
#line 135 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.h"
static __inline long4 make_long4(long x, long y, long z, long w); 
#line 137 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.h"
static __inline ulong4 make_ulong4(unsigned long x, unsigned long y, unsigned long z, unsigned long w); 
#line 139 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.h"
static __inline float1 make_float1(float x); 
#line 141 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.h"
static __inline float2 make_float2(float x, float y); 
#line 143 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.h"
static __inline float3 make_float3(float x, float y, float z); 
#line 145 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.h"
static __inline float4 make_float4(float x, float y, float z, float w); 
#line 147 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.h"
static __inline longlong1 make_longlong1(__int64 x); 
#line 149 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.h"
static __inline ulonglong1 make_ulonglong1(unsigned __int64 x); 
#line 151 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.h"
static __inline longlong2 make_longlong2(__int64 x, __int64 y); 
#line 153 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.h"
static __inline ulonglong2 make_ulonglong2(unsigned __int64 x, unsigned __int64 y); 
#line 155 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.h"
static __inline longlong3 make_longlong3(__int64 x, __int64 y, __int64 z); 
#line 157 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.h"
static __inline ulonglong3 make_ulonglong3(unsigned __int64 x, unsigned __int64 y, unsigned __int64 z); 
#line 159 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.h"
static __inline longlong4 make_longlong4(__int64 x, __int64 y, __int64 z, __int64 w); 
#line 161 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.h"
static __inline ulonglong4 make_ulonglong4(unsigned __int64 x, unsigned __int64 y, unsigned __int64 z, unsigned __int64 w); 
#line 163 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.h"
static __inline double1 make_double1(double x); 
#line 165 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.h"
static __inline double2 make_double2(double x, double y); 
#line 167 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.h"
static __inline double3 make_double3(double x, double y, double z); 
#line 169 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.h"
static __inline double4 make_double4(double x, double y, double z, double w); 
#line 75 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
static __inline char1 make_char1(signed char x) 
#line 76 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
{ 
#line 77 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
char1 t; (t.x) = x; return t; 
#line 78 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
} 
#line 80 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
static __inline uchar1 make_uchar1(unsigned char x) 
#line 81 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
{ 
#line 82 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
uchar1 t; (t.x) = x; return t; 
#line 83 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
} 
#line 85 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
static __inline char2 make_char2(signed char x, signed char y) 
#line 86 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
{ 
#line 87 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
char2 t; (t.x) = x; (t.y) = y; return t; 
#line 88 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
} 
#line 90 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
static __inline uchar2 make_uchar2(unsigned char x, unsigned char y) 
#line 91 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
{ 
#line 92 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
uchar2 t; (t.x) = x; (t.y) = y; return t; 
#line 93 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
} 
#line 95 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
static __inline char3 make_char3(signed char x, signed char y, signed char z) 
#line 96 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
{ 
#line 97 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
char3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t; 
#line 98 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
} 
#line 100 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
static __inline uchar3 make_uchar3(unsigned char x, unsigned char y, unsigned char z) 
#line 101 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
{ 
#line 102 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
uchar3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t; 
#line 103 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
} 
#line 105 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
static __inline char4 make_char4(signed char x, signed char y, signed char z, signed char w) 
#line 106 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
{ 
#line 107 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
char4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t; 
#line 108 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
} 
#line 110 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
static __inline uchar4 make_uchar4(unsigned char x, unsigned char y, unsigned char z, unsigned char w) 
#line 111 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
{ 
#line 112 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
uchar4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t; 
#line 113 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
} 
#line 115 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
static __inline short1 make_short1(short x) 
#line 116 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
{ 
#line 117 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
short1 t; (t.x) = x; return t; 
#line 118 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
} 
#line 120 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
static __inline ushort1 make_ushort1(unsigned short x) 
#line 121 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
{ 
#line 122 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
ushort1 t; (t.x) = x; return t; 
#line 123 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
} 
#line 125 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
static __inline short2 make_short2(short x, short y) 
#line 126 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
{ 
#line 127 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
short2 t; (t.x) = x; (t.y) = y; return t; 
#line 128 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
} 
#line 130 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
static __inline ushort2 make_ushort2(unsigned short x, unsigned short y) 
#line 131 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
{ 
#line 132 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
ushort2 t; (t.x) = x; (t.y) = y; return t; 
#line 133 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
} 
#line 135 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
static __inline short3 make_short3(short x, short y, short z) 
#line 136 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
{ 
#line 137 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
short3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t; 
#line 138 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
} 
#line 140 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
static __inline ushort3 make_ushort3(unsigned short x, unsigned short y, unsigned short z) 
#line 141 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
{ 
#line 142 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
ushort3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t; 
#line 143 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
} 
#line 145 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
static __inline short4 make_short4(short x, short y, short z, short w) 
#line 146 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
{ 
#line 147 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
short4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t; 
#line 148 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
} 
#line 150 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
static __inline ushort4 make_ushort4(unsigned short x, unsigned short y, unsigned short z, unsigned short w) 
#line 151 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
{ 
#line 152 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
ushort4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t; 
#line 153 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
} 
#line 155 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
static __inline int1 make_int1(int x) 
#line 156 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
{ 
#line 157 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
int1 t; (t.x) = x; return t; 
#line 158 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
} 
#line 160 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
static __inline uint1 make_uint1(unsigned x) 
#line 161 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
{ 
#line 162 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
uint1 t; (t.x) = x; return t; 
#line 163 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
} 
#line 165 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
static __inline int2 make_int2(int x, int y) 
#line 166 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
{ 
#line 167 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
int2 t; (t.x) = x; (t.y) = y; return t; 
#line 168 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
} 
#line 170 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
static __inline uint2 make_uint2(unsigned x, unsigned y) 
#line 171 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
{ 
#line 172 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
uint2 t; (t.x) = x; (t.y) = y; return t; 
#line 173 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
} 
#line 175 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
static __inline int3 make_int3(int x, int y, int z) 
#line 176 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
{ 
#line 177 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
int3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t; 
#line 178 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
} 
#line 180 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
static __inline uint3 make_uint3(unsigned x, unsigned y, unsigned z) 
#line 181 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
{ 
#line 182 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
uint3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t; 
#line 183 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
} 
#line 185 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
static __inline int4 make_int4(int x, int y, int z, int w) 
#line 186 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
{ 
#line 187 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
int4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t; 
#line 188 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
} 
#line 190 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
static __inline uint4 make_uint4(unsigned x, unsigned y, unsigned z, unsigned w) 
#line 191 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
{ 
#line 192 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
uint4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t; 
#line 193 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
} 
#line 195 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
static __inline long1 make_long1(long x) 
#line 196 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
{ 
#line 197 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
long1 t; (t.x) = x; return t; 
#line 198 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
} 
#line 200 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
static __inline ulong1 make_ulong1(unsigned long x) 
#line 201 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
{ 
#line 202 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
ulong1 t; (t.x) = x; return t; 
#line 203 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
} 
#line 205 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
static __inline long2 make_long2(long x, long y) 
#line 206 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
{ 
#line 207 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
long2 t; (t.x) = x; (t.y) = y; return t; 
#line 208 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
} 
#line 210 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
static __inline ulong2 make_ulong2(unsigned long x, unsigned long y) 
#line 211 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
{ 
#line 212 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
ulong2 t; (t.x) = x; (t.y) = y; return t; 
#line 213 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
} 
#line 215 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
static __inline long3 make_long3(long x, long y, long z) 
#line 216 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
{ 
#line 217 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
long3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t; 
#line 218 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
} 
#line 220 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
static __inline ulong3 make_ulong3(unsigned long x, unsigned long y, unsigned long z) 
#line 221 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
{ 
#line 222 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
ulong3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t; 
#line 223 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
} 
#line 225 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
static __inline long4 make_long4(long x, long y, long z, long w) 
#line 226 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
{ 
#line 227 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
long4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t; 
#line 228 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
} 
#line 230 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
static __inline ulong4 make_ulong4(unsigned long x, unsigned long y, unsigned long z, unsigned long w) 
#line 231 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
{ 
#line 232 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
ulong4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t; 
#line 233 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
} 
#line 235 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
static __inline float1 make_float1(float x) 
#line 236 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
{ 
#line 237 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
float1 t; (t.x) = x; return t; 
#line 238 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
} 
#line 240 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
static __inline float2 make_float2(float x, float y) 
#line 241 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
{ 
#line 242 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
float2 t; (t.x) = x; (t.y) = y; return t; 
#line 243 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
} 
#line 245 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
static __inline float3 make_float3(float x, float y, float z) 
#line 246 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
{ 
#line 247 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
float3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t; 
#line 248 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
} 
#line 250 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
static __inline float4 make_float4(float x, float y, float z, float w) 
#line 251 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
{ 
#line 252 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
float4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t; 
#line 253 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
} 
#line 255 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
static __inline longlong1 make_longlong1(__int64 x) 
#line 256 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
{ 
#line 257 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
longlong1 t; (t.x) = x; return t; 
#line 258 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
} 
#line 260 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
static __inline ulonglong1 make_ulonglong1(unsigned __int64 x) 
#line 261 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
{ 
#line 262 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
ulonglong1 t; (t.x) = x; return t; 
#line 263 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
} 
#line 265 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
static __inline longlong2 make_longlong2(__int64 x, __int64 y) 
#line 266 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
{ 
#line 267 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
longlong2 t; (t.x) = x; (t.y) = y; return t; 
#line 268 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
} 
#line 270 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
static __inline ulonglong2 make_ulonglong2(unsigned __int64 x, unsigned __int64 y) 
#line 271 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
{ 
#line 272 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
ulonglong2 t; (t.x) = x; (t.y) = y; return t; 
#line 273 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
} 
#line 275 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
static __inline longlong3 make_longlong3(__int64 x, __int64 y, __int64 z) 
#line 276 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
{ 
#line 277 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
longlong3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t; 
#line 278 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
} 
#line 280 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
static __inline ulonglong3 make_ulonglong3(unsigned __int64 x, unsigned __int64 y, unsigned __int64 z) 
#line 281 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
{ 
#line 282 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
ulonglong3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t; 
#line 283 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
} 
#line 285 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
static __inline longlong4 make_longlong4(__int64 x, __int64 y, __int64 z, __int64 w) 
#line 286 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
{ 
#line 287 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
longlong4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t; 
#line 288 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
} 
#line 290 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
static __inline ulonglong4 make_ulonglong4(unsigned __int64 x, unsigned __int64 y, unsigned __int64 z, unsigned __int64 w) 
#line 291 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
{ 
#line 292 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
ulonglong4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t; 
#line 293 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
} 
#line 295 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
static __inline double1 make_double1(double x) 
#line 296 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
{ 
#line 297 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
double1 t; (t.x) = x; return t; 
#line 298 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
} 
#line 300 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
static __inline double2 make_double2(double x, double y) 
#line 301 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
{ 
#line 302 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
double2 t; (t.x) = x; (t.y) = y; return t; 
#line 303 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
} 
#line 305 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
static __inline double3 make_double3(double x, double y, double z) 
#line 306 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
{ 
#line 307 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
double3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t; 
#line 308 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
} 
#line 310 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
static __inline double4 make_double4(double x, double y, double z, double w) 
#line 311 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
{ 
#line 312 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
double4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t; 
#line 313 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\vector_functions.hpp"
} 
#line 47 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) void *__cdecl _memccpy(void * _Dst, const void * _Src, int _Val, size_t _MaxCount); } 
#line 48 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) const void *__cdecl memchr(const void * _Buf, int _Val, size_t _MaxCount); } 
#line 49 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) int __cdecl _memicmp(const void * _Buf1, const void * _Buf2, size_t _Size); } 
#line 50 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) int __cdecl _memicmp_l(const void * _Buf1, const void * _Buf2, size_t _Size, _locale_t _Locale); } 
#line 51 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { int __cdecl memcmp(const void * _Buf1, const void * _Buf2, size_t _Size); } 
#line 55 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { void *__cdecl memcpy(void * _Dst, const void * _Src, size_t _Size); } 
#line 57 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) errno_t __cdecl memcpy_s(void * _Dst, rsize_t _DstSize, const void * _Src, rsize_t _MaxCount); } 
#line 94 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { void *__cdecl memset(void * _Dst, int _Val, size_t _Size); } 
#line 98 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) void *__cdecl memccpy(void * _Dst, const void * _Src, int _Val, size_t _Size); } 
#line 99 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) int __cdecl memicmp(const void * _Buf1, const void * _Buf2, size_t _Size); } 
#line 105 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _strset_s(char * _Dst, size_t _DstSize, int _Value); } 
#line 106 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
template < size_t _Size > inline errno_t __cdecl _strset_s ( char ( & _Dest ) [ _Size ], int _Value ) throw ( ) { return _strset_s ( _Dest, _Size, _Value ); }
#line 107 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { char *__cdecl _strset(char * _Dest, int _Value); } 
#line 109 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) errno_t __cdecl strcpy_s(char * _Dst, rsize_t _SizeInBytes, const char * _Src); } 
#line 111 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
template < size_t _Size > inline errno_t __cdecl strcpy_s ( char ( & _Dest ) [ _Size ], const char * _Source ) throw ( ) { return strcpy_s ( _Dest, _Size, _Source ); }
#line 112 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { char *__cdecl strcpy(char * _Dest, const char * _Source); } 
#line 114 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) errno_t __cdecl strcat_s(char * _Dst, rsize_t _SizeInBytes, const char * _Src); } 
#line 116 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
template < size_t _Size > inline errno_t __cdecl strcat_s ( char ( & _Dest ) [ _Size ], const char * _Source ) throw ( ) { return strcat_s ( _Dest, _Size, _Source ); }
#line 118 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { char *__cdecl strcat(char * _Dest, const char * _Source); } 
#line 120 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { int __cdecl strcmp(const char * _Str1, const char * _Str2); } 
#line 121 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { size_t __cdecl strlen(const char * _Str); } 
#line 125 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { 
#line 122 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
__declspec(dllimport) size_t __cdecl 
#line 125 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
strnlen(const char * _Str, size_t _MaxCount); } 
#line 130 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { static __inline size_t __cdecl strnlen_s(const char *_Str, size_t _MaxCount) 
#line 131 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
{ 
#line 132 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
return (_Str == (0)) ? 0 : strnlen(_Str, _MaxCount); 
#line 133 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
} } 
#line 136 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) errno_t __cdecl memmove_s(void * _Dst, rsize_t _DstSize, const void * _Src, rsize_t _MaxCount); } 
#line 139 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) void *__cdecl memmove(void * _Dst, const void * _Src, size_t _Size); } 
#line 146 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) char *__cdecl _strdup(const char * _Src); } 
#line 152 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) const char *__cdecl strchr(const char * _Str, int _Val); } 
#line 153 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) int __cdecl _stricmp(const char * _Str1, const char * _Str2); } 
#line 154 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) int __cdecl _strcmpi(const char * _Str1, const char * _Str2); } 
#line 155 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) int __cdecl _stricmp_l(const char * _Str1, const char * _Str2, _locale_t _Locale); } 
#line 156 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) int __cdecl strcoll(const char * _Str1, const char * _Str2); } 
#line 157 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) int __cdecl _strcoll_l(const char * _Str1, const char * _Str2, _locale_t _Locale); } 
#line 158 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) int __cdecl _stricoll(const char * _Str1, const char * _Str2); } 
#line 159 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) int __cdecl _stricoll_l(const char * _Str1, const char * _Str2, _locale_t _Locale); } 
#line 160 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) int __cdecl _strncoll(const char * _Str1, const char * _Str2, size_t _MaxCount); } 
#line 161 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) int __cdecl _strncoll_l(const char * _Str1, const char * _Str2, size_t _MaxCount, _locale_t _Locale); } 
#line 162 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) int __cdecl _strnicoll(const char * _Str1, const char * _Str2, size_t _MaxCount); } 
#line 163 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) int __cdecl _strnicoll_l(const char * _Str1, const char * _Str2, size_t _MaxCount, _locale_t _Locale); } 
#line 164 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) size_t __cdecl strcspn(const char * _Str, const char * _Control); } 
#line 165 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) char *__cdecl _strerror(const char * _ErrMsg); } 
#line 166 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _strerror_s(char * _Buf, size_t _SizeInBytes, const char * _ErrMsg); } 
#line 167 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
template < size_t _Size > inline errno_t __cdecl _strerror_s ( char ( & _Buffer ) [ _Size ], const char * _ErrorMessage ) throw ( ) { return _strerror_s ( _Buffer, _Size, _ErrorMessage ); }
#line 168 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) char *__cdecl strerror(int); } 
#line 170 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) errno_t __cdecl strerror_s(char * _Buf, size_t _SizeInBytes, int _ErrNum); } 
#line 172 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
template < size_t _Size > inline errno_t __cdecl strerror_s ( char ( & _Buffer ) [ _Size ], int _ErrorMessage ) throw ( ) { return strerror_s ( _Buffer, _Size, _ErrorMessage ); }
#line 173 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _strlwr_s(char * _Str, size_t _Size); } 
#line 174 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
template < size_t _Size > inline errno_t __cdecl _strlwr_s ( char ( & _String ) [ _Size ] ) throw ( ) { return _strlwr_s ( _String, _Size ); }
#line 175 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) char *__cdecl _strlwr(char * _String); } 
#line 176 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _strlwr_s_l(char * _Str, size_t _Size, _locale_t _Locale); } 
#line 177 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
template < size_t _Size > inline errno_t __cdecl _strlwr_s_l ( char ( & _String ) [ _Size ], _locale_t _Locale ) throw ( ) { return _strlwr_s_l ( _String, _Size, _Locale ); }
#line 178 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) char *__cdecl _strlwr_l(char * _String, _locale_t _Locale); } 
#line 180 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) errno_t __cdecl strncat_s(char * _Dst, rsize_t _SizeInBytes, const char * _Src, rsize_t _MaxCount); } 
#line 182 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
template < size_t _Size > inline errno_t __cdecl strncat_s ( char ( & _Dest ) [ _Size ], const char * _Source, size_t _Count ) throw ( ) { return strncat_s ( _Dest, _Size, _Source, _Count ); }
#pragma warning(push)
#pragma warning(disable:6059)
#line 186 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) char *__cdecl strncat(char * _Dest, const char * _Source, size_t _Count); } 
#pragma warning(pop)
extern "C" { __declspec(dllimport) int __cdecl strncmp(const char * _Str1, const char * _Str2, size_t _MaxCount); } 
#line 189 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) int __cdecl _strnicmp(const char * _Str1, const char * _Str2, size_t _MaxCount); } 
#line 190 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) int __cdecl _strnicmp_l(const char * _Str1, const char * _Str2, size_t _MaxCount, _locale_t _Locale); } 
#line 192 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) errno_t __cdecl strncpy_s(char * _Dst, rsize_t _SizeInBytes, const char * _Src, rsize_t _MaxCount); } 
#line 194 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
template < size_t _Size > inline errno_t __cdecl strncpy_s ( char ( & _Dest ) [ _Size ], const char * _Source, size_t _Count ) throw ( ) { return strncpy_s ( _Dest, _Size, _Source, _Count ); }
#line 195 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) char *__cdecl strncpy(char * _Dest, const char * _Source, size_t _Count); } 
#line 196 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _strnset_s(char * _Str, size_t _SizeInBytes, int _Val, size_t _MaxCount); } 
#line 197 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
template < size_t _Size > inline errno_t __cdecl _strnset_s ( char ( & _Dest ) [ _Size ], int _Val, size_t _Count ) throw ( ) { return _strnset_s ( _Dest, _Size, _Val, _Count ); }
#line 198 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) char *__cdecl _strnset(char * _Dest, int _Val, size_t _Count); } 
#line 199 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) const char *__cdecl strpbrk(const char * _Str, const char * _Control); } 
#line 200 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) const char *__cdecl strrchr(const char * _Str, int _Ch); } 
#line 201 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) char *__cdecl _strrev(char * _Str); } 
#line 202 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) size_t __cdecl strspn(const char * _Str, const char * _Control); } 
#line 203 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) const char *__cdecl strstr(const char * _Str, const char * _SubStr); } 
#line 204 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) char *__cdecl strtok(char * _Str, const char * _Delim); } 
#line 206 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) char *__cdecl strtok_s(char * _Str, const char * _Delim, char ** _Context); } 
#line 208 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _strupr_s(char * _Str, size_t _Size); } 
#line 209 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
template < size_t _Size > inline errno_t __cdecl _strupr_s ( char ( & _String ) [ _Size ] ) throw ( ) { return _strupr_s ( _String, _Size ); }
#line 210 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) char *__cdecl _strupr(char * _String); } 
#line 211 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _strupr_s_l(char * _Str, size_t _Size, _locale_t _Locale); } 
#line 212 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
template < size_t _Size > inline errno_t __cdecl _strupr_s_l ( char ( & _String ) [ _Size ], _locale_t _Locale ) throw ( ) { return _strupr_s_l ( _String, _Size, _Locale ); }
#line 213 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) char *__cdecl _strupr_l(char * _String, _locale_t _Locale); } 
#line 214 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) size_t __cdecl strxfrm(char * _Dst, const char * _Src, size_t _MaxCount); } 
#line 215 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) size_t __cdecl _strxfrm_l(char * _Dst, const char * _Src, size_t _MaxCount, _locale_t _Locale); } 
#line 221 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
inline char *__cdecl strchr(char *_Str, int _Ch) 
#line 222 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
{ return (char *)strchr((const char *)_Str, _Ch); } 
#line 223 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
inline char *__cdecl strpbrk(char *_Str, const char *_Control) 
#line 224 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
{ return (char *)strpbrk((const char *)_Str, _Control); } 
#line 225 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
inline char *__cdecl strrchr(char *_Str, int _Ch) 
#line 226 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
{ return (char *)strrchr((const char *)_Str, _Ch); } 
#line 227 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
inline char *__cdecl strstr(char *_Str, const char *_SubStr) 
#line 228 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
{ return (char *)strstr((const char *)_Str, _SubStr); } 
#line 232 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
inline void *__cdecl memchr(void *_Pv, int _C, size_t _N) 
#line 233 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
{ return (void *)memchr((const void *)_Pv, _C, _N); } 
#line 245 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) char *__cdecl strdup(const char * _Src); } 
#line 252 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) int __cdecl strcmpi(const char * _Str1, const char * _Str2); } 
#line 253 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) int __cdecl stricmp(const char * _Str1, const char * _Str2); } 
#line 254 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) char *__cdecl strlwr(char * _Str); } 
#line 255 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) int __cdecl strnicmp(const char * _Str1, const char * _Str, size_t _MaxCount); } 
#line 256 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) char *__cdecl strnset(char * _Str, int _Val, size_t _MaxCount); } 
#line 257 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) char *__cdecl strrev(char * _Str); } 
#line 258 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { char *__cdecl strset(char * _Str, int _Val); } 
#line 259 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) char *__cdecl strupr(char * _Str); } 
#line 273 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) __wchar_t *__cdecl _wcsdup(const __wchar_t * _Str); } 
#line 280 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) errno_t __cdecl wcscat_s(__wchar_t * _Dst, rsize_t _SizeInWords, const __wchar_t * _Src); } 
#line 282 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
template < size_t _Size > inline errno_t __cdecl wcscat_s ( wchar_t ( & _Dest ) [ _Size ], const wchar_t * _Source ) throw ( ) { return wcscat_s ( _Dest, _Size, _Source ); }
#line 284 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) __wchar_t *__cdecl wcscat(__wchar_t * _Dest, const __wchar_t * _Source); } 
#line 288 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) const __wchar_t *__cdecl wcschr(const __wchar_t * _Str, __wchar_t _Ch); } 
#line 289 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) int __cdecl wcscmp(const __wchar_t * _Str1, const __wchar_t * _Str2); } 
#line 291 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) errno_t __cdecl wcscpy_s(__wchar_t * _Dst, rsize_t _SizeInWords, const __wchar_t * _Src); } 
#line 293 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
template < size_t _Size > inline errno_t __cdecl wcscpy_s ( wchar_t ( & _Dest ) [ _Size ], const wchar_t * _Source ) throw ( ) { return wcscpy_s ( _Dest, _Size, _Source ); }
#line 294 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) __wchar_t *__cdecl wcscpy(__wchar_t * _Dest, const __wchar_t * _Source); } 
#line 295 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) size_t __cdecl wcscspn(const __wchar_t * _Str, const __wchar_t * _Control); } 
#line 296 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) size_t __cdecl wcslen(const __wchar_t * _Str); } 
#line 300 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { 
#line 297 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
__declspec(dllimport) size_t __cdecl 
#line 300 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
wcsnlen(const __wchar_t * _Src, size_t _MaxCount); } 
#line 305 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { static __inline size_t __cdecl wcsnlen_s(const __wchar_t *_Src, size_t _MaxCount) 
#line 306 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
{ 
#line 307 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
return (_Src == (0)) ? 0 : wcsnlen(_Src, _MaxCount); 
#line 308 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
} } 
#line 311 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) errno_t __cdecl wcsncat_s(__wchar_t * _Dst, rsize_t _SizeInWords, const __wchar_t * _Src, rsize_t _MaxCount); } 
#line 313 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
template < size_t _Size > inline errno_t __cdecl wcsncat_s ( wchar_t ( & _Dest ) [ _Size ], const wchar_t * _Source, size_t _Count ) throw ( ) { return wcsncat_s ( _Dest, _Size, _Source, _Count ); }
#pragma warning(push)
#pragma warning(disable:6059)
extern "C" { __declspec(dllimport) __wchar_t *__cdecl wcsncat(__wchar_t * _Dest, const __wchar_t * _Source, size_t _Count); } 
#pragma warning(pop)
extern "C" { __declspec(dllimport) int __cdecl wcsncmp(const __wchar_t * _Str1, const __wchar_t * _Str2, size_t _MaxCount); } 
#line 320 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) errno_t __cdecl wcsncpy_s(__wchar_t * _Dst, rsize_t _SizeInWords, const __wchar_t * _Src, rsize_t _MaxCount); } 
#line 322 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
template < size_t _Size > inline errno_t __cdecl wcsncpy_s ( wchar_t ( & _Dest ) [ _Size ], const wchar_t * _Source, size_t _Count ) throw ( ) { return wcsncpy_s ( _Dest, _Size, _Source, _Count ); }
#line 323 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) __wchar_t *__cdecl wcsncpy(__wchar_t * _Dest, const __wchar_t * _Source, size_t _Count); } 
#line 324 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) const __wchar_t *__cdecl wcspbrk(const __wchar_t * _Str, const __wchar_t * _Control); } 
#line 325 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) const __wchar_t *__cdecl wcsrchr(const __wchar_t * _Str, __wchar_t _Ch); } 
#line 326 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) size_t __cdecl wcsspn(const __wchar_t * _Str, const __wchar_t * _Control); } 
#line 329 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) const __wchar_t *__cdecl wcsstr(const __wchar_t * _Str, const __wchar_t * _SubStr); } 
#line 330 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) __wchar_t *__cdecl wcstok(__wchar_t * _Str, const __wchar_t * _Delim); } 
#line 332 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) __wchar_t *__cdecl wcstok_s(__wchar_t * _Str, const __wchar_t * _Delim, __wchar_t ** _Context); } 
#line 334 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) __wchar_t *__cdecl _wcserror(int _ErrNum); } 
#line 335 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _wcserror_s(__wchar_t * _Buf, size_t _SizeInWords, int _ErrNum); } 
#line 336 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
template < size_t _Size > inline errno_t __cdecl _wcserror_s ( wchar_t ( & _Buffer ) [ _Size ], int _Error ) throw ( ) { return _wcserror_s ( _Buffer, _Size, _Error ); }
#line 337 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) __wchar_t *__cdecl __wcserror(const __wchar_t * _Str); } 
#line 338 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) errno_t __cdecl __wcserror_s(__wchar_t * _Buffer, size_t _SizeInWords, const __wchar_t * _ErrMsg); } 
#line 339 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
template < size_t _Size > inline errno_t __cdecl __wcserror_s ( wchar_t ( & _Buffer ) [ _Size ], const wchar_t * _ErrorMessage ) throw ( ) { return __wcserror_s ( _Buffer, _Size, _ErrorMessage ); }
#line 341 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) int __cdecl _wcsicmp(const __wchar_t * _Str1, const __wchar_t * _Str2); } 
#line 342 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) int __cdecl _wcsicmp_l(const __wchar_t * _Str1, const __wchar_t * _Str2, _locale_t _Locale); } 
#line 343 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) int __cdecl _wcsnicmp(const __wchar_t * _Str1, const __wchar_t * _Str2, size_t _MaxCount); } 
#line 344 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) int __cdecl _wcsnicmp_l(const __wchar_t * _Str1, const __wchar_t * _Str2, size_t _MaxCount, _locale_t _Locale); } 
#line 345 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _wcsnset_s(__wchar_t * _Dst, size_t _SizeInWords, __wchar_t _Val, size_t _MaxCount); } 
#line 346 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
template < size_t _Size > inline errno_t __cdecl _wcsnset_s ( wchar_t ( & _Dst ) [ _Size ], wchar_t _Val, size_t _MaxCount ) throw ( ) { return _wcsnset_s ( _Dst, _Size, _Val, _MaxCount ); }
#line 347 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) __wchar_t *__cdecl _wcsnset(__wchar_t * _Str, __wchar_t _Val, size_t _MaxCount); } 
#line 348 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) __wchar_t *__cdecl _wcsrev(__wchar_t * _Str); } 
#line 349 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _wcsset_s(__wchar_t * _Dst, size_t _SizeInWords, __wchar_t _Value); } 
#line 350 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
template < size_t _Size > inline errno_t __cdecl _wcsset_s ( wchar_t ( & _Str ) [ _Size ], wchar_t _Val ) throw ( ) { return _wcsset_s ( _Str, _Size, _Val ); }
#line 351 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) __wchar_t *__cdecl _wcsset(__wchar_t * _Str, __wchar_t _Val); } 
#line 353 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _wcslwr_s(__wchar_t * _Str, size_t _SizeInWords); } 
#line 354 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
template < size_t _Size > inline errno_t __cdecl _wcslwr_s ( wchar_t ( & _String ) [ _Size ] ) throw ( ) { return _wcslwr_s ( _String, _Size ); }
#line 355 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) __wchar_t *__cdecl _wcslwr(__wchar_t * _String); } 
#line 356 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _wcslwr_s_l(__wchar_t * _Str, size_t _SizeInWords, _locale_t _Locale); } 
#line 357 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
template < size_t _Size > inline errno_t __cdecl _wcslwr_s_l ( wchar_t ( & _String ) [ _Size ], _locale_t _Locale ) throw ( ) { return _wcslwr_s_l ( _String, _Size, _Locale ); }
#line 358 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) __wchar_t *__cdecl _wcslwr_l(__wchar_t * _String, _locale_t _Locale); } 
#line 359 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _wcsupr_s(__wchar_t * _Str, size_t _Size); } 
#line 360 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
template < size_t _Size > inline errno_t __cdecl _wcsupr_s ( wchar_t ( & _String ) [ _Size ] ) throw ( ) { return _wcsupr_s ( _String, _Size ); }
#line 361 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) __wchar_t *__cdecl _wcsupr(__wchar_t * _String); } 
#line 362 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _wcsupr_s_l(__wchar_t * _Str, size_t _Size, _locale_t _Locale); } 
#line 363 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
template < size_t _Size > inline errno_t __cdecl _wcsupr_s_l ( wchar_t ( & _String ) [ _Size ], _locale_t _Locale ) throw ( ) { return _wcsupr_s_l ( _String, _Size, _Locale ); }
#line 364 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) __wchar_t *__cdecl _wcsupr_l(__wchar_t * _String, _locale_t _Locale); } 
#line 365 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) size_t __cdecl wcsxfrm(__wchar_t * _Dst, const __wchar_t * _Src, size_t _MaxCount); } 
#line 366 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) size_t __cdecl _wcsxfrm_l(__wchar_t * _Dst, const __wchar_t * _Src, size_t _MaxCount, _locale_t _Locale); } 
#line 367 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) int __cdecl wcscoll(const __wchar_t * _Str1, const __wchar_t * _Str2); } 
#line 368 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) int __cdecl _wcscoll_l(const __wchar_t * _Str1, const __wchar_t * _Str2, _locale_t _Locale); } 
#line 369 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) int __cdecl _wcsicoll(const __wchar_t * _Str1, const __wchar_t * _Str2); } 
#line 370 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) int __cdecl _wcsicoll_l(const __wchar_t * _Str1, const __wchar_t * _Str2, _locale_t _Locale); } 
#line 371 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) int __cdecl _wcsncoll(const __wchar_t * _Str1, const __wchar_t * _Str2, size_t _MaxCount); } 
#line 372 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) int __cdecl _wcsncoll_l(const __wchar_t * _Str1, const __wchar_t * _Str2, size_t _MaxCount, _locale_t _Locale); } 
#line 373 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) int __cdecl _wcsnicoll(const __wchar_t * _Str1, const __wchar_t * _Str2, size_t _MaxCount); } 
#line 374 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) int __cdecl _wcsnicoll_l(const __wchar_t * _Str1, const __wchar_t * _Str2, size_t _MaxCount, _locale_t _Locale); } 
#line 382 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
inline __wchar_t *__cdecl wcschr(__wchar_t *_Str, __wchar_t _Ch) 
#line 383 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
{ return (__wchar_t *)wcschr((const __wchar_t *)_Str, _Ch); } 
#line 384 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
inline __wchar_t *__cdecl wcspbrk(__wchar_t *_Str, const __wchar_t *_Control) 
#line 385 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
{ return (__wchar_t *)wcspbrk((const __wchar_t *)_Str, _Control); } 
#line 386 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
inline __wchar_t *__cdecl wcsrchr(__wchar_t *_Str, __wchar_t _Ch) 
#line 387 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
{ return (__wchar_t *)wcsrchr((const __wchar_t *)_Str, _Ch); } 
#line 390 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
inline __wchar_t *__cdecl wcsstr(__wchar_t *_Str, const __wchar_t *_SubStr) 
#line 391 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
{ return (__wchar_t *)wcsstr((const __wchar_t *)_Str, _SubStr); } 
#line 403 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) __wchar_t *__cdecl wcsdup(const __wchar_t * _Str); } 
#line 413 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) int __cdecl wcsicmp(const __wchar_t * _Str1, const __wchar_t * _Str2); } 
#line 414 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) int __cdecl wcsnicmp(const __wchar_t * _Str1, const __wchar_t * _Str2, size_t _MaxCount); } 
#line 415 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) __wchar_t *__cdecl wcsnset(__wchar_t * _Str, __wchar_t _Val, size_t _MaxCount); } 
#line 416 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) __wchar_t *__cdecl wcsrev(__wchar_t * _Str); } 
#line 417 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) __wchar_t *__cdecl wcsset(__wchar_t * _Str, __wchar_t _Val); } 
#line 418 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) __wchar_t *__cdecl wcslwr(__wchar_t * _Str); } 
#line 419 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) __wchar_t *__cdecl wcsupr(__wchar_t * _Str); } 
#line 420 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) int __cdecl wcsicoll(const __wchar_t * _Str1, const __wchar_t * _Str2); } 
#line 32 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.h"
#pragma pack ( push, 8 )
#line 89 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.h"
extern "C" { typedef long clock_t; }
#line 113 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.h"
extern "C" { struct tm { 
#line 114 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.h"
int tm_sec; 
#line 115 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.h"
int tm_min; 
#line 116 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.h"
int tm_hour; 
#line 117 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.h"
int tm_mday; 
#line 118 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.h"
int tm_mon; 
#line 119 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.h"
int tm_year; 
#line 120 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.h"
int tm_wday; 
#line 121 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.h"
int tm_yday; 
#line 122 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.h"
int tm_isdst; 
#line 123 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.h"
}; }
#line 147 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.h"
extern "C" { __declspec(dllimport) int *__cdecl __daylight(); } 
#line 151 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.h"
extern "C" { __declspec(dllimport) long *__cdecl __dstbias(); } 
#line 155 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.h"
extern "C" { __declspec(dllimport) long *__cdecl __timezone(); } 
#line 159 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.h"
extern "C" { __declspec(dllimport) char **__cdecl __tzname(); } 
#line 162 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _get_daylight(int * _Daylight); } 
#line 163 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _get_dstbias(long * _Daylight_savings_bias); } 
#line 164 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _get_timezone(long * _Timezone); } 
#line 165 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _get_tzname(size_t * _ReturnValue, char * _Buffer, size_t _SizeInBytes, int _Index); } 
#line 174 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.h"
extern "C" { __declspec(dllimport) char *__cdecl asctime(const tm * _Tm); } 
#line 176 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.h"
extern "C" { __declspec(dllimport) errno_t __cdecl asctime_s(char * _Buf, size_t _SizeInBytes, const tm * _Tm); } 
#line 178 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.h"
template < size_t _Size > inline errno_t __cdecl asctime_s ( char ( & _Buffer ) [ _Size ], const struct tm * _Time ) throw ( ) { return asctime_s ( _Buffer, _Size, _Time ); }
#line 180 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.h"
extern "C" { __declspec(dllimport) char *__cdecl _ctime32(const __time32_t * _Time); } 
#line 181 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _ctime32_s(char * _Buf, size_t _SizeInBytes, const __time32_t * _Time); } 
#line 182 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.h"
template < size_t _Size > inline errno_t __cdecl _ctime32_s ( char ( & _Buffer ) [ _Size ], const __time32_t * _Time ) throw ( ) { return _ctime32_s ( _Buffer, _Size, _Time ); }
#line 184 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.h"
extern "C" { __declspec(dllimport) clock_t __cdecl clock(); } 
#line 185 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.h"
extern "C" { __declspec(dllimport) double __cdecl _difftime32(__time32_t _Time1, __time32_t _Time2); } 
#line 187 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.h"
extern "C" { __declspec(dllimport) tm *__cdecl _gmtime32(const __time32_t * _Time); } 
#line 188 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _gmtime32_s(tm * _Tm, const __time32_t * _Time); } 
#line 190 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.h"
extern "C" { __declspec(dllimport) tm *__cdecl _localtime32(const __time32_t * _Time); } 
#line 191 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _localtime32_s(tm * _Tm, const __time32_t * _Time); } 
#line 193 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.h"
extern "C" { __declspec(dllimport) size_t __cdecl strftime(char * _Buf, size_t _SizeInBytes, const char * _Format, const tm * _Tm); } 
#line 194 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.h"
extern "C" { __declspec(dllimport) size_t __cdecl _strftime_l(char * _Buf, size_t _Max_size, const char * _Format, const tm * _Tm, _locale_t _Locale); } 
#line 196 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _strdate_s(char * _Buf, size_t _SizeInBytes); } 
#line 197 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.h"
template < size_t _Size > inline errno_t __cdecl _strdate_s ( char ( & _Buffer ) [ _Size ] ) throw ( ) { return _strdate_s ( _Buffer, _Size ); }
#line 198 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.h"
extern "C" { __declspec(dllimport) char *__cdecl _strdate(char * _Buffer); } 
#line 200 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _strtime_s(char * _Buf, size_t _SizeInBytes); } 
#line 201 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.h"
template < size_t _Size > inline errno_t __cdecl _strtime_s ( char ( & _Buffer ) [ _Size ] ) throw ( ) { return _strtime_s ( _Buffer, _Size ); }
#line 202 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.h"
extern "C" { __declspec(dllimport) char *__cdecl _strtime(char * _Buffer); } 
#line 204 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.h"
extern "C" { __declspec(dllimport) __time32_t __cdecl _time32(__time32_t * _Time); } 
#line 205 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.h"
extern "C" { __declspec(dllimport) __time32_t __cdecl _mktime32(tm * _Tm); } 
#line 206 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.h"
extern "C" { __declspec(dllimport) __time32_t __cdecl _mkgmtime32(tm * _Tm); } 
#line 210 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.h"
extern "C" { __declspec(dllimport) void __cdecl _tzset(); } 
#line 214 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.h"
extern "C" { __declspec(dllimport) double __cdecl _difftime64(__time64_t _Time1, __time64_t _Time2); } 
#line 215 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.h"
extern "C" { __declspec(dllimport) char *__cdecl _ctime64(const __time64_t * _Time); } 
#line 216 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _ctime64_s(char * _Buf, size_t _SizeInBytes, const __time64_t * _Time); } 
#line 217 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.h"
template < size_t _Size > inline errno_t __cdecl _ctime64_s ( char ( & _Buffer ) [ _Size ], const __time64_t * _Time ) throw ( ) { return _ctime64_s ( _Buffer, _Size, _Time ); }
#line 219 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.h"
extern "C" { __declspec(dllimport) tm *__cdecl _gmtime64(const __time64_t * _Time); } 
#line 220 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _gmtime64_s(tm * _Tm, const __time64_t * _Time); } 
#line 222 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.h"
extern "C" { __declspec(dllimport) tm *__cdecl _localtime64(const __time64_t * _Time); } 
#line 223 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _localtime64_s(tm * _Tm, const __time64_t * _Time); } 
#line 225 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.h"
extern "C" { __declspec(dllimport) __time64_t __cdecl _mktime64(tm * _Tm); } 
#line 226 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.h"
extern "C" { __declspec(dllimport) __time64_t __cdecl _mkgmtime64(tm * _Tm); } 
#line 227 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.h"
extern "C" { __declspec(dllimport) __time64_t __cdecl _time64(__time64_t * _Time); } 
#line 231 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.h"
extern "C" { __declspec(deprecated("This function or variable has been superceded by newer library or operating system functionality. Consider using GetLocalTime in" "stead. See online help for details.")) unsigned __cdecl _getsystime(tm * _Tm); } 
#line 232 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.h"
extern "C" { __declspec(deprecated("This function or variable has been superceded by newer library or operating system functionality. Consider using SetLocalTime in" "stead. See online help for details.")) unsigned __cdecl _setsystime(tm * _Tm, unsigned _MilliSec); } 
#line 245 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.h"
extern "C" { __declspec(dllimport) __wchar_t *__cdecl _wasctime(const tm * _Tm); } 
#line 246 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _wasctime_s(__wchar_t * _Buf, size_t _SizeInWords, const tm * _Tm); } 
#line 247 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.h"
template < size_t _Size > inline errno_t __cdecl _wasctime_s ( wchar_t ( & _Buffer ) [ _Size ], const struct tm * _Time ) throw ( ) { return _wasctime_s ( _Buffer, _Size, _Time ); }
#line 249 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.h"
extern "C" { __declspec(dllimport) __wchar_t *__cdecl _wctime32(const __time32_t * _Time); } 
#line 250 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _wctime32_s(__wchar_t * _Buf, size_t _SizeInWords, const __time32_t * _Time); } 
#line 251 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.h"
template < size_t _Size > inline errno_t __cdecl _wctime32_s ( wchar_t ( & _Buffer ) [ _Size ], const __time32_t * _Time ) throw ( ) { return _wctime32_s ( _Buffer, _Size, _Time ); }
#line 253 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.h"
extern "C" { __declspec(dllimport) size_t __cdecl wcsftime(__wchar_t * _Buf, size_t _SizeInWords, const __wchar_t * _Format, const tm * _Tm); } 
#line 254 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.h"
extern "C" { __declspec(dllimport) size_t __cdecl _wcsftime_l(__wchar_t * _Buf, size_t _SizeInWords, const __wchar_t * _Format, const tm * _Tm, _locale_t _Locale); } 
#line 256 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _wstrdate_s(__wchar_t * _Buf, size_t _SizeInWords); } 
#line 257 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.h"
template < size_t _Size > inline errno_t __cdecl _wstrdate_s ( wchar_t ( & _Buffer ) [ _Size ] ) throw ( ) { return _wstrdate_s ( _Buffer, _Size ); }
#line 258 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.h"
extern "C" { __declspec(dllimport) __wchar_t *__cdecl _wstrdate(__wchar_t * _Buffer); } 
#line 260 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _wstrtime_s(__wchar_t * _Buf, size_t _SizeInWords); } 
#line 261 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.h"
template < size_t _Size > inline errno_t __cdecl _wstrtime_s ( wchar_t ( & _Buffer ) [ _Size ] ) throw ( ) { return _wstrtime_s ( _Buffer, _Size ); }
#line 262 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.h"
extern "C" { __declspec(dllimport) __wchar_t *__cdecl _wstrtime(__wchar_t * _Buffer); } 
#line 264 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.h"
extern "C" { __declspec(dllimport) __wchar_t *__cdecl _wctime64(const __time64_t * _Time); } 
#line 265 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _wctime64_s(__wchar_t * _Buf, size_t _SizeInWords, const __time64_t * _Time); } 
#line 266 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.h"
template < size_t _Size > inline errno_t __cdecl _wctime64_s ( wchar_t ( & _Buffer ) [ _Size ], const __time64_t * _Time ) throw ( ) { return _wctime64_s ( _Buffer, _Size, _Time ); }
#line 27 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\wtime.inl"
#pragma warning(push)
#pragma warning(disable:4996)
#line 44 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\wtime.inl"
extern "C" { static __inline __wchar_t *__cdecl _wctime(const time_t *_Time) 
#line 45 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\wtime.inl"
{ 
#pragma warning( push )
#pragma warning( disable : 4996 )
return _wctime64(_Time); 
#pragma warning( pop )
} } 
#line 52 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\wtime.inl"
extern "C" { static __inline errno_t __cdecl _wctime_s(__wchar_t *_Buffer, size_t _SizeInWords, const time_t *_Time) 
#line 53 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\wtime.inl"
{ 
#line 54 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\wtime.inl"
return _wctime64_s(_Buffer, _SizeInWords, _Time); 
#line 55 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\wtime.inl"
} } 
#line 58 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\wtime.inl"
#pragma warning(pop)
#line 82 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.inl"
extern "C" { static __inline double __cdecl difftime(time_t _Time1, time_t _Time2) 
#line 83 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.inl"
{ 
#line 84 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.inl"
return _difftime64(_Time1, _Time2); 
#line 85 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.inl"
} } 
#line 86 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.inl"
extern "C" { static __inline char *__cdecl ctime(const time_t *_Time) 
#line 87 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.inl"
{ 
#pragma warning( push )
#pragma warning( disable : 4996 )
return _ctime64(_Time); 
#pragma warning( pop )
} } 
#line 94 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.inl"
extern "C" { static __inline errno_t __cdecl ctime_s(char *_Buffer, size_t _SizeInBytes, const time_t *_Time) 
#line 95 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.inl"
{ 
#line 96 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.inl"
return _ctime64_s(_Buffer, _SizeInBytes, _Time); 
#line 97 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.inl"
} } 
#line 99 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.inl"
extern "C" { static __inline tm *__cdecl gmtime(const time_t *_Time) 
#line 100 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.inl"
{ 
#pragma warning( push )
#pragma warning( disable : 4996 )
return _gmtime64(_Time); 
#pragma warning( pop )
} } 
#line 107 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.inl"
extern "C" { static __inline errno_t __cdecl gmtime_s(tm *_Tm, const time_t *_Time) 
#line 108 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.inl"
{ 
#line 109 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.inl"
return _gmtime64_s(_Tm, _Time); 
#line 110 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.inl"
} } 
#line 112 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.inl"
extern "C" { static __inline tm *__cdecl localtime(const time_t *_Time) 
#line 113 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.inl"
{ 
#pragma warning( push )
#pragma warning( disable : 4996 )
return _localtime64(_Time); 
#pragma warning( pop )
} } 
#line 119 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.inl"
extern "C" { static __inline errno_t __cdecl localtime_s(tm *_Tm, const time_t *_Time) 
#line 120 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.inl"
{ 
#line 121 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.inl"
return _localtime64_s(_Tm, _Time); 
#line 122 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.inl"
} } 
#line 123 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.inl"
extern "C" { static __inline time_t __cdecl mktime(tm *_Tm) 
#line 124 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.inl"
{ 
#line 125 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.inl"
return _mktime64(_Tm); 
#line 126 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.inl"
} } 
#line 127 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.inl"
extern "C" { static __inline time_t __cdecl _mkgmtime(tm *_Tm) 
#line 128 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.inl"
{ 
#line 129 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.inl"
return _mkgmtime64(_Tm); 
#line 130 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.inl"
} } 
#line 131 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.inl"
extern "C" { static __inline time_t __cdecl time(time_t *_Time) 
#line 132 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.inl"
{ 
#line 133 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.inl"
return _time64(_Time); 
#line 134 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.inl"
} } 
#line 291 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.h"
extern "C" __declspec(dllimport) int daylight; 
#line 292 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.h"
extern "C" __declspec(dllimport) long timezone; 
#line 293 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.h"
extern "C" __declspec(dllimport) char *tzname[2]; 
#line 297 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.h"
extern "C" { __declspec(dllimport) void __cdecl tzset(); } 
#line 307 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.h"
#pragma pack ( pop )
#line 71 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\common_functions.h"
extern "C" { __declspec(dllimport) extern clock_t __cdecl clock(); } 
#line 72 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\common_functions.h"
extern "C" { extern void *__cdecl memset(void *, int, size_t); } 
#line 73 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\common_functions.h"
extern "C" { extern void *__cdecl memcpy(void *, const void *, size_t); } 
#line 154 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" { extern int __cdecl abs(int); } 
#line 155 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" { extern long __cdecl labs(long); } 
#line 156 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" { extern __int64 llabs(__int64); } 
#line 206 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" { extern double __cdecl fabs(double x); } 
#line 247 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" { extern __inline float fabsf(float x); } 
#line 251 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern inline int min(int, int); 
#line 253 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern inline unsigned umin(unsigned, unsigned); 
#line 254 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern inline __int64 llmin(__int64, __int64); 
#line 255 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern inline unsigned __int64 ullmin(unsigned __int64, unsigned __int64); 
#line 278 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern float __cdecl fminf(float x, float y); } 
#line 298 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" __declspec(dllimport) double __cdecl fmin(double x, double y); 
#line 303 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern inline int max(int, int); 
#line 305 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern inline unsigned umax(unsigned, unsigned); 
#line 306 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern inline __int64 llmax(__int64, __int64); 
#line 307 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern inline unsigned __int64 ullmax(unsigned __int64, unsigned __int64); 
#line 330 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern float __cdecl fmaxf(float x, float y); } 
#line 350 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" __declspec(dllimport) double __cdecl fmax(double, double); 
#line 392 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" double __cdecl sin(double x); 
#line 425 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" double __cdecl cos(double x); 
#line 444 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" { extern void sincos(double x, double * sptr, double * cptr); } 
#line 460 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" { extern void sincosf(float x, float * sptr, float * cptr); } 
#line 505 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" double __cdecl tan(double x); 
#line 574 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" double __cdecl sqrt(double x); 
#line 646 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" { extern double rsqrt(double x); } 
#line 716 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" { extern float rsqrtf(float x); } 
#line 774 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" __declspec(dllimport) double __cdecl log2(double x); 
#line 799 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" __declspec(dllimport) double __cdecl exp2(double x); 
#line 824 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern float __cdecl exp2f(float x); } 
#line 849 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" { extern double exp10(double x); } 
#line 872 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" { extern float exp10f(float x); } 
#line 920 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" __declspec(dllimport) double __cdecl expm1(double x); 
#line 965 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern float __cdecl expm1f(float x); } 
#line 1020 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern float __cdecl log2f(float x); } 
#line 1072 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" double __cdecl log10(double x); 
#line 1143 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" double __cdecl log(double x); 
#line 1239 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" __declspec(dllimport) double __cdecl log1p(double x); 
#line 1336 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern float __cdecl log1pf(float x); } 
#line 1409 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" __declspec(dllimport) double __cdecl floor(double x); 
#line 1448 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" double __cdecl exp(double x); 
#line 1479 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" double __cdecl cosh(double x); 
#line 1509 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" double __cdecl sinh(double x); 
#line 1539 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" double __cdecl tanh(double x); 
#line 1576 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" __declspec(dllimport) double __cdecl acosh(double x); 
#line 1614 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern float __cdecl acoshf(float x); } 
#line 1630 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" __declspec(dllimport) double __cdecl asinh(double x); 
#line 1646 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern float __cdecl asinhf(float x); } 
#line 1700 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" __declspec(dllimport) double __cdecl atanh(double x); 
#line 1754 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern float __cdecl atanhf(float x); } 
#line 1811 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" __declspec(dllimport) double __cdecl ldexp(double x, int exp); 
#line 1867 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" { extern __inline float ldexpf(float x, int exp); } 
#line 1921 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" __declspec(dllimport) double __cdecl logb(double x); 
#line 1976 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern float __cdecl logbf(float x); } 
#line 2006 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" __declspec(dllimport) int __cdecl ilogb(double x); 
#line 2036 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern int __cdecl ilogbf(float x); } 
#line 2112 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" __declspec(dllimport) double __cdecl scalbn(double x, int n); 
#line 2188 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern float __cdecl scalbnf(float x, int n); } 
#line 2264 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" __declspec(dllimport) double __cdecl scalbln(double x, long n); 
#line 2340 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern float __cdecl scalblnf(float x, long n); } 
#line 2416 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" __declspec(dllimport) double __cdecl frexp(double x, int * nptr); 
#line 2491 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" { extern __inline float frexpf(float x, int * nptr); } 
#line 2507 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" __declspec(dllimport) double __cdecl round(double x); 
#line 2524 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern float __cdecl roundf(float x); } 
#line 2542 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" __declspec(dllimport) long __cdecl lround(double x); 
#line 2560 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern long __cdecl lroundf(float x); } 
#line 2578 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" __declspec(dllimport) __int64 __cdecl llround(double x); 
#line 2596 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern __int64 __cdecl llroundf(float x); } 
#line 2611 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" __declspec(dllimport) double __cdecl rint(double x); 
#line 2626 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern float __cdecl rintf(float x); } 
#line 2642 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" __declspec(dllimport) long __cdecl lrint(double x); 
#line 2658 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern long __cdecl lrintf(float x); } 
#line 2674 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" __declspec(dllimport) __int64 __cdecl llrint(double x); 
#line 2690 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern __int64 __cdecl llrintf(float x); } 
#line 2743 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" __declspec(dllimport) double __cdecl nearbyint(double x); 
#line 2796 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern float __cdecl nearbyintf(float x); } 
#line 2856 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" __declspec(dllimport) double __cdecl ceil(double x); 
#line 2870 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" __declspec(dllimport) double __cdecl trunc(double x); 
#line 2885 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern float __cdecl truncf(float x); } 
#line 2911 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" __declspec(dllimport) double __cdecl fdim(double x, double y); 
#line 2937 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern float __cdecl fdimf(float x, float y); } 
#line 2971 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" double __cdecl atan2(double y, double x); 
#line 3002 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" double __cdecl atan(double x); 
#line 3025 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" double __cdecl acos(double x); 
#line 3057 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" double __cdecl asin(double x); 
#line 3097 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" { static __inline double __cdecl hypot(double x, double y); } 
#line 3151 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" { extern double rhypot(double x, double y); } 
#line 3195 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" { static __inline float __cdecl hypotf(float x, float y); } 
#line 3249 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" { extern float rhypotf(float x, float y); } 
#line 3296 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern double __cdecl norm3d(double a, double b, double c); } 
#line 3347 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" { extern double rnorm3d(double a, double b, double c); } 
#line 3396 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern double __cdecl norm4d(double a, double b, double c, double d); } 
#line 3452 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" { extern double rnorm4d(double a, double b, double c, double d); } 
#line 3497 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" { extern double norm(int dim, const double * t); } 
#line 3548 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" { extern double rnorm(int dim, const double * t); } 
#line 3600 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" { extern float rnormf(int dim, const float * a); } 
#line 3644 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" { extern float normf(int dim, const float * a); } 
#line 3689 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" { extern float norm3df(float a, float b, float c); } 
#line 3740 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" { extern float rnorm3df(float a, float b, float c); } 
#line 3789 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" { extern float norm4df(float a, float b, float c, float d); } 
#line 3845 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" { extern float rnorm4df(float a, float b, float c, float d); } 
#line 3931 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" __declspec(dllimport) double __cdecl cbrt(double x); 
#line 4017 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern float __cdecl cbrtf(float x); } 
#line 4070 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" { extern double rcbrt(double x); } 
#line 4120 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" { extern float rcbrtf(float x); } 
#line 4180 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" { extern double sinpi(double x); } 
#line 4240 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" { extern float sinpif(float x); } 
#line 4292 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" { extern double cospi(double x); } 
#line 4344 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" { extern float cospif(float x); } 
#line 4374 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" { extern void sincospi(double x, double * sptr, double * cptr); } 
#line 4404 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" { extern void sincospif(float x, float * sptr, float * cptr); } 
#line 4716 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" double __cdecl pow(double x, double y); 
#line 4772 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern double __cdecl modf(double x, double * iptr); } 
#line 4831 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" double __cdecl fmod(double x, double y); 
#line 4919 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" __declspec(dllimport) double __cdecl remainder(double x, double y); 
#line 5009 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern float __cdecl remainderf(float x, float y); } 
#line 5063 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern double __cdecl remquo(double x, double y, int * quo); } 
#line 5117 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern float __cdecl remquof(float x, float y, int * quo); } 
#line 5156 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern double __cdecl j0(double x); } 
#line 5198 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" { extern float j0f(float x); } 
#line 5259 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern double __cdecl j1(double x); } 
#line 5320 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" { extern float j1f(float x); } 
#line 5363 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern double __cdecl jn(int n, double x); } 
#line 5406 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" { extern float jnf(int n, float x); } 
#line 5458 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern double __cdecl y0(double x); } 
#line 5510 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" { extern float y0f(float x); } 
#line 5562 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern double __cdecl y1(double x); } 
#line 5614 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" { extern float y1f(float x); } 
#line 5667 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern double __cdecl yn(int n, double x); } 
#line 5720 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" { extern float ynf(int n, float x); } 
#line 5747 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern double __cdecl cyl_bessel_i0(double x); } 
#line 5773 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" { extern float cyl_bessel_i0f(float x); } 
#line 5800 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern double __cdecl cyl_bessel_i1(double x); } 
#line 5826 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" { extern float cyl_bessel_i1f(float x); } 
#line 5911 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" __declspec(dllimport) double __cdecl erf(double x); 
#line 5993 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern float __cdecl erff(float x); } 
#line 6055 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" { extern double erfinv(double y); } 
#line 6112 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" { extern float erfinvf(float y); } 
#line 6153 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" __declspec(dllimport) double __cdecl erfc(double x); 
#line 6191 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern float __cdecl erfcf(float x); } 
#line 6319 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" __declspec(dllimport) double __cdecl lgamma(double x); 
#line 6380 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" { extern double erfcinv(double y); } 
#line 6436 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" { extern float erfcinvf(float y); } 
#line 6494 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" { extern double normcdfinv(double y); } 
#line 6552 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" { extern float normcdfinvf(float y); } 
#line 6595 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" { extern double normcdf(double y); } 
#line 6638 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" { extern float normcdff(float y); } 
#line 6713 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" { extern double erfcx(double x); } 
#line 6788 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" { extern float erfcxf(float x); } 
#line 6924 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern float __cdecl lgammaf(float x); } 
#line 7033 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" __declspec(dllimport) double __cdecl tgamma(double x); 
#line 7142 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern float __cdecl tgammaf(float x); } 
#line 7155 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" __declspec(dllimport) double __cdecl copysign(double x, double y); 
#line 7168 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern float __cdecl copysignf(float x, float y); } 
#line 7205 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" __declspec(dllimport) double __cdecl nextafter(double x, double y); 
#line 7242 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern float __cdecl nextafterf(float x, float y); } 
#line 7258 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern double __cdecl nan(const char * tagp); } 
#line 7274 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern float __cdecl nanf(const char * tagp); } 
#line 7279 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" { extern int __isinff(float); } 
#line 7280 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" { extern int __isnanf(float); } 
#line 7290 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" { extern int __finite(double); } 
#line 7291 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" { extern int __finitef(float); } 
#line 7292 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" { extern int __signbit(double); } 
#line 7293 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" { extern int __isnan(double); } 
#line 7294 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" { extern int __isinf(double); } 
#line 7297 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" { extern int __signbitf(float); } 
#line 7458 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern double __cdecl fma(double x, double y, double z); } 
#line 7616 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern float __cdecl fmaf(float x, float y, float z); } 
#line 7625 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" { extern int __signbitl(long double); } 
#line 7631 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" { extern int __finitel(long double); } 
#line 7632 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" { extern int __isinfl(long double); } 
#line 7633 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" { extern int __isnanl(long double); } 
#line 7683 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" { extern __inline float acosf(float x); } 
#line 7723 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" { extern __inline float asinf(float x); } 
#line 7763 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" { extern __inline float atanf(float x); } 
#line 7796 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" { extern __inline float atan2f(float y, float x); } 
#line 7820 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" { extern __inline float cosf(float x); } 
#line 7862 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" { extern __inline float sinf(float x); } 
#line 7904 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" { extern __inline float tanf(float x); } 
#line 7928 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" { extern __inline float coshf(float x); } 
#line 7969 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" { extern __inline float sinhf(float x); } 
#line 7999 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" { extern __inline float tanhf(float x); } 
#line 8050 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" { extern __inline float logf(float x); } 
#line 8100 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" { extern __inline float expf(float x); } 
#line 8151 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" { extern __inline float log10f(float x); } 
#line 8206 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" { extern __inline float modff(float x, float * iptr); } 
#line 8514 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" { extern __inline float powf(float x, float y); } 
#line 8583 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" { extern __inline float sqrtf(float x); } 
#line 8642 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" { extern __inline float ceilf(float x); } 
#line 8714 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" { extern __inline float floorf(float x); } 
#line 8773 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" { extern __inline float fmodf(float x, float y); } 
#line 24 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
#pragma pack ( push, 8 )
#line 37 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { struct _exception { 
#line 38 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
int type; 
#line 39 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
char *name; 
#line 40 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
double arg1; 
#line 41 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
double arg2; 
#line 42 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
double retval; 
#line 43 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
}; }
#line 54 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { struct _complex { 
#line 55 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
double x, y; 
#line 56 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
}; }
#line 67 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { typedef float float_t; }
#line 68 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { typedef double double_t; }
#line 90 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" __declspec(dllimport) double _HUGE; 
#line 184 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { void __cdecl _fperrraise(int _Except); } 
#line 186 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) short __cdecl _dclass(double _X); } 
#line 187 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) short __cdecl _ldclass(long double _X); } 
#line 188 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) short __cdecl _fdclass(float _X); } 
#line 190 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) int __cdecl _dsign(double _X); } 
#line 191 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) int __cdecl _ldsign(long double _X); } 
#line 192 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) int __cdecl _fdsign(float _X); } 
#line 194 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) int __cdecl _dpcomp(double _X, double _Y); } 
#line 195 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) int __cdecl _ldpcomp(long double _X, long double _Y); } 
#line 196 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) int __cdecl _fdpcomp(float _X, float _Y); } 
#line 198 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) short __cdecl _dtest(double * _Px); } 
#line 199 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) short __cdecl _ldtest(long double * _Px); } 
#line 200 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) short __cdecl _fdtest(float * _Px); } 
#line 202 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) short __cdecl _d_int(double * _Px, short _Xexp); } 
#line 203 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) short __cdecl _ld_int(long double * _Px, short _Xexp); } 
#line 204 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) short __cdecl _fd_int(float * _Px, short _Xexp); } 
#line 206 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) short __cdecl _dscale(double * _Px, long _Lexp); } 
#line 207 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) short __cdecl _ldscale(long double * _Px, long _Lexp); } 
#line 208 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) short __cdecl _fdscale(float * _Px, long _Lexp); } 
#line 210 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) short __cdecl _dunscale(short * _Pex, double * _Px); } 
#line 211 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) short __cdecl _ldunscale(short * _Pex, long double * _Px); } 
#line 212 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) short __cdecl _fdunscale(short * _Pex, float * _Px); } 
#line 214 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) short __cdecl _dexp(double * _Px, double _Y, long _Eoff); } 
#line 215 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) short __cdecl _ldexp(long double * _Px, long double _Y, long _Eoff); } 
#line 216 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) short __cdecl _fdexp(float * _Px, float _Y, long _Eoff); } 
#line 218 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) short __cdecl _dnorm(unsigned short * _Ps); } 
#line 219 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) short __cdecl _fdnorm(unsigned short * _Ps); } 
#line 221 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { double __cdecl _dpoly(double _X, const double * _Tab, int _N); } 
#line 222 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { long double __cdecl _ldpoly(long double _X, const long double * _Tab, int _N); } 
#line 223 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { float __cdecl _fdpoly(float _X, const float * _Tab, int _N); } 
#line 225 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) double __cdecl _dlog(double _X, int _Baseflag); } 
#line 226 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) long double __cdecl _ldlog(long double _X, int _Baseflag); } 
#line 227 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) float __cdecl _fdlog(float _X, int _Baseflag); } 
#line 229 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) double __cdecl _dsin(double _X, unsigned _Qoff); } 
#line 230 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) long double __cdecl _ldsin(long double _X, unsigned _Qoff); } 
#line 231 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) float __cdecl _fdsin(float _X, unsigned _Qoff); } 
#line 238 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { typedef 
#line 235 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
union { 
#line 236 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
unsigned short _Sh[8]; 
#line 237 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
double _Val; 
#line 238 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
} _double_val; }
#line 245 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { typedef 
#line 242 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
union { 
#line 243 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
unsigned short _Sh[8]; 
#line 244 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
float _Val; 
#line 245 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
} _float_val; }
#line 252 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { typedef 
#line 249 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
union { 
#line 250 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
unsigned short _Sh[8]; 
#line 251 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
long double _Val; 
#line 252 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
} _ldouble_val; }
#line 260 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { typedef 
#line 255 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
union { 
#line 256 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
unsigned short _Word[8]; 
#line 257 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
float _Float; 
#line 258 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
double _Double; 
#line 259 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
long double _Long_double; 
#line 260 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
} _float_const; }
#line 262 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" const _float_const _Denorm_C, _Inf_C, _Nan_C, _Snan_C, _Hugeval_C; 
#line 263 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" const _float_const _FDenorm_C, _FInf_C, _FNan_C, _FSnan_C; 
#line 264 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" const _float_const _LDenorm_C, _LInf_C, _LNan_C, _LSnan_C; 
#line 266 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" const _float_const _Eps_C, _Rteps_C; 
#line 267 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" const _float_const _FEps_C, _FRteps_C; 
#line 268 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" const _float_const _LEps_C, _LRteps_C; 
#line 270 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" const double _Zero_C, _Xbig_C; 
#line 271 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" const float _FZero_C, _FXbig_C; 
#line 272 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" const long double _LZero_C, _LXbig_C; 
#line 304 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
__declspec(nothrow) inline int fpclassify(float _X) 
#line 305 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ 
#line 306 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
return _fdtest(&_X); 
#line 307 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
} 
#line 309 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
__declspec(nothrow) inline int fpclassify(double _X) 
#line 310 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ 
#line 311 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
return _dtest(&_X); 
#line 312 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
} 
#line 314 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
__declspec(nothrow) inline int fpclassify(long double _X) 
#line 315 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ 
#line 316 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
return _ldtest(&_X); 
#line 317 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
} 
#line 319 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
__declspec(nothrow) inline bool signbit(float _X) 
#line 320 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ 
#line 321 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
return _fdsign(_X) != 0; 
#line 322 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
} 
#line 324 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
__declspec(nothrow) inline bool signbit(double _X) 
#line 325 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ 
#line 326 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
return _dsign(_X) != 0; 
#line 327 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
} 
#line 329 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
__declspec(nothrow) inline bool signbit(long double _X) 
#line 330 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ 
#line 331 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
return _ldsign(_X) != 0; 
#line 332 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
} 
#line 334 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
__declspec(nothrow) inline int _fpcomp(float _X, float _Y) 
#line 335 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ 
#line 336 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
return _fdpcomp(_X, _Y); 
#line 337 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
} 
#line 339 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
__declspec(nothrow) inline int _fpcomp(double _X, double _Y) 
#line 340 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ 
#line 341 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
return _dpcomp(_X, _Y); 
#line 342 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
} 
#line 344 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
__declspec(nothrow) inline int _fpcomp(long double _X, long double _Y) 
#line 345 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ 
#line 346 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
return _ldpcomp(_X, _Y); 
#line 347 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
} 
#line 349 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
template< class _Trc, class _Tre> struct _Combined_type { 
#line 351 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
typedef float _Type; 
#line 352 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
}; 
#line 354 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
template<> struct _Combined_type< float, double>  { 
#line 356 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
typedef double _Type; 
#line 357 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
}; 
#line 359 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
template<> struct _Combined_type< float, long double>  { 
#line 361 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
typedef long double _Type; 
#line 362 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
}; 
#line 364 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
template< class _Ty, class _T2> struct _Real_widened { 
#line 366 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
typedef long double _Type; 
#line 367 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
}; 
#line 369 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
template<> struct _Real_widened< float, float>  { 
#line 371 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
typedef float _Type; 
#line 372 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
}; 
#line 374 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
template<> struct _Real_widened< float, double>  { 
#line 376 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
typedef double _Type; 
#line 377 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
}; 
#line 379 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
template<> struct _Real_widened< double, float>  { 
#line 381 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
typedef double _Type; 
#line 382 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
}; 
#line 384 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
template<> struct _Real_widened< double, double>  { 
#line 386 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
typedef double _Type; 
#line 387 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
}; 
#line 389 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
template< class _Ty> struct _Real_type { 
#line 391 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
typedef double _Type; 
#line 392 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
}; 
#line 394 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
template<> struct _Real_type< float>  { 
#line 396 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
typedef float _Type; 
#line 397 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
}; 
#line 399 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
template<> struct _Real_type< long double>  { 
#line 401 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
typedef long double _Type; 
#line 402 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
}; 
#line 404 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
template < class _T1, class _T2 > inline __declspec ( nothrow ) int _fpcomp ( _T1 _X, _T2 _Y )
{
    typedef typename _Combined_type < float,
        typename _Real_widened <
        typename _Real_type < _T1 > :: _Type,
        typename _Real_type < _T2 > :: _Type > :: _Type > :: _Type _Tw;
    return ( _fpcomp ( ( _Tw ) _X, ( _Tw ) _Y ) );
}
#line 413 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
template < class _Ty > inline __declspec ( nothrow ) bool isfinite ( _Ty _X )
{
    return ( fpclassify ( _X ) <= 0 );
}
#line 418 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
template < class _Ty > inline __declspec ( nothrow ) bool isinf ( _Ty _X )
{
    return ( fpclassify ( _X ) == 1 );
}
#line 423 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
template < class _Ty > inline __declspec ( nothrow ) bool isnan ( _Ty _X )
{
    return ( fpclassify ( _X ) == 2 );
}
#line 428 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
template < class _Ty > inline __declspec ( nothrow ) bool isnormal ( _Ty _X )
{
    return ( fpclassify ( _X ) == ( - 1 ) );
}
#line 433 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
template < class _Ty1, class _Ty2 > inline __declspec ( nothrow ) bool isgreater ( _Ty1 _X, _Ty2 _Y )
{
    return ( ( _fpcomp ( _X, _Y ) & 4 ) != 0 );
}
#line 438 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
template < class _Ty1, class _Ty2 > inline __declspec ( nothrow ) bool isgreaterequal ( _Ty1 _X, _Ty2 _Y )
{
    return ( ( _fpcomp ( _X, _Y ) & ( 2 | 4 ) ) != 0 );
}
#line 443 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
template < class _Ty1, class _Ty2 > inline __declspec ( nothrow ) bool isless ( _Ty1 _X, _Ty2 _Y )
{
    return ( ( _fpcomp ( _X, _Y ) & 1 ) != 0 );
}
#line 448 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
template < class _Ty1, class _Ty2 > inline __declspec ( nothrow ) bool islessequal ( _Ty1 _X, _Ty2 _Y )
{
    return ( ( _fpcomp ( _X, _Y ) & ( 1 | 2 ) ) != 0 );
}
#line 453 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
template < class _Ty1, class _Ty2 > inline __declspec ( nothrow ) bool islessgreater ( _Ty1 _X, _Ty2 _Y )
{
    return ( ( _fpcomp ( _X, _Y ) & ( 1 | 4 ) ) != 0 );
}
#line 458 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
template < class _Ty1, class _Ty2 > inline __declspec ( nothrow ) bool isunordered ( _Ty1 _X, _Ty2 _Y )
{
    return ( _fpcomp ( _X, _Y ) == 0 );
}
#line 470 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { int __cdecl abs(int _X); } 
#line 471 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { long __cdecl labs(long _X); } 
#line 472 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __int64 __cdecl llabs(__int64 _X); } 
#line 474 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" double __cdecl acos(double _X); 
#line 475 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" __declspec(dllimport) double __cdecl acosh(double _X); 
#line 476 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" double __cdecl asin(double _X); 
#line 477 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" __declspec(dllimport) double __cdecl asinh(double _X); 
#line 478 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" double __cdecl atan(double _X); 
#line 479 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" __declspec(dllimport) double __cdecl atanh(double _X); 
#line 480 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" double __cdecl atan2(double _Y, double _X); 
#line 482 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" __declspec(dllimport) double __cdecl cbrt(double _X); 
#line 483 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" __declspec(dllimport) double __cdecl copysign(double _X, double _Y); 
#line 484 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" double __cdecl cos(double _X); 
#line 485 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" double __cdecl cosh(double _X); 
#line 486 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" __declspec(dllimport) double __cdecl erf(double _X); 
#line 487 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" __declspec(dllimport) double __cdecl erfc(double _X); 
#line 488 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" double __cdecl exp(double _X); 
#line 489 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" __declspec(dllimport) double __cdecl exp2(double _X); 
#line 490 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" __declspec(dllimport) double __cdecl expm1(double _X); 
#line 491 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { double __cdecl fabs(double _X); } 
#line 492 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" __declspec(dllimport) double __cdecl fdim(double _X, double _Y); 
#line 493 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) double __cdecl fma(double _X, double _Y, double _Z); } 
#line 494 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" __declspec(dllimport) double __cdecl fmax(double _X, double _Y); 
#line 495 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" __declspec(dllimport) double __cdecl fmin(double _X, double _Y); 
#line 496 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" double __cdecl fmod(double _X, double _Y); 
#line 497 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" __declspec(dllimport) int __cdecl ilogb(double _X); 
#line 498 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" __declspec(dllimport) double __cdecl lgamma(double _X); 
#line 499 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" __declspec(dllimport) __int64 __cdecl llrint(double _X); 
#line 500 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" __declspec(dllimport) __int64 __cdecl llround(double _X); 
#line 501 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" double __cdecl log(double _X); 
#line 502 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" double __cdecl log10(double _X); 
#line 503 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" __declspec(dllimport) double __cdecl log1p(double _X); 
#line 504 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" __declspec(dllimport) double __cdecl log2(double _X); 
#line 505 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" __declspec(dllimport) double __cdecl logb(double _X); 
#line 506 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" __declspec(dllimport) long __cdecl lrint(double _X); 
#line 507 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" __declspec(dllimport) long __cdecl lround(double _X); 
#line 508 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) double __cdecl nan(const char *); } 
#line 509 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" __declspec(dllimport) double __cdecl nearbyint(double _X); 
#line 510 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" __declspec(dllimport) double __cdecl nextafter(double _X, double _Y); 
#line 511 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" __declspec(dllimport) double __cdecl nexttoward(double _X, long double _Y); 
#line 512 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" double __cdecl pow(double _X, double _Y); 
#line 513 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" __declspec(dllimport) double __cdecl remainder(double _X, double _Y); 
#line 514 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) double __cdecl remquo(double _X, double _Y, int * _Z); } 
#line 515 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" __declspec(dllimport) double __cdecl rint(double _X); 
#line 516 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" __declspec(dllimport) double __cdecl round(double _X); 
#line 517 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" __declspec(dllimport) double __cdecl scalbln(double _X, long _Y); 
#line 518 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" __declspec(dllimport) double __cdecl scalbn(double _X, int _Y); 
#line 519 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" double __cdecl sin(double _X); 
#line 520 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" double __cdecl sinh(double _X); 
#line 521 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" double __cdecl sqrt(double _X); 
#line 522 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" double __cdecl tan(double _X); 
#line 523 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" double __cdecl tanh(double _X); 
#line 524 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" __declspec(dllimport) double __cdecl tgamma(double _X); 
#line 525 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" __declspec(dllimport) double __cdecl trunc(double _X); 
#line 527 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) double __cdecl atof(const char * _String); } 
#line 528 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) double __cdecl _atof_l(const char * _String, _locale_t _Locale); } 
#line 530 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) double __cdecl _cabs(_complex _Complex_value); } 
#line 531 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" __declspec(dllimport) double __cdecl ceil(double _X); 
#line 533 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) double __cdecl _chgsign(double _X); } 
#line 534 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) double __cdecl _copysign(double _Number, double _Sign); } 
#line 536 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" __declspec(dllimport) double __cdecl floor(double _X); 
#line 537 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" __declspec(dllimport) double __cdecl frexp(double _X, int * _Y); 
#line 538 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) double __cdecl _hypot(double _X, double _Y); } 
#line 539 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) double __cdecl _j0(double _X); } 
#line 540 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) double __cdecl _j1(double _X); } 
#line 541 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) double __cdecl _jn(int _X, double _Y); } 
#line 542 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" __declspec(dllimport) double __cdecl ldexp(double _X, int _Y); 
#line 547 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { int __cdecl _matherr(_exception * _Except); } 
#line 550 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) double __cdecl modf(double _X, double * _Y); } 
#line 551 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) double __cdecl _y0(double _X); } 
#line 552 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) double __cdecl _y1(double _X); } 
#line 553 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) double __cdecl _yn(int _X, double _Y); } 
#line 555 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __inline double __cdecl hypot(double _X, double _Y) 
#line 556 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ 
#line 557 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
return _hypot(_X, _Y); 
#line 558 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
} } 
#line 561 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) float __cdecl acoshf(float _X); } 
#line 562 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) float __cdecl asinhf(float _X); } 
#line 563 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) float __cdecl atanhf(float _X); } 
#line 564 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) float __cdecl cbrtf(float _X); } 
#line 565 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) float __cdecl _chgsignf(float _X); } 
#line 566 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) float __cdecl copysignf(float _X, float _Y); } 
#line 567 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) float __cdecl _copysignf(float _Number, float _Sign); } 
#line 568 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) float __cdecl erff(float _X); } 
#line 569 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) float __cdecl erfcf(float _X); } 
#line 570 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) float __cdecl expm1f(float _X); } 
#line 571 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) float __cdecl exp2f(float _X); } 
#line 572 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) float __cdecl fdimf(float _X, float _Y); } 
#line 573 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) float __cdecl fmaf(float _X, float _Y, float _Z); } 
#line 574 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) float __cdecl fmaxf(float _X, float _Y); } 
#line 575 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) float __cdecl fminf(float _X, float _Y); } 
#line 576 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) float __cdecl _hypotf(float _X, float _Y); } 
#line 577 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) int __cdecl ilogbf(float _X); } 
#line 578 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) float __cdecl lgammaf(float _X); } 
#line 579 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) __int64 __cdecl llrintf(float _X); } 
#line 580 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) __int64 __cdecl llroundf(float _X); } 
#line 581 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) float __cdecl log1pf(float _X); } 
#line 582 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) float __cdecl log2f(float _X); } 
#line 583 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) float __cdecl logbf(float _X); } 
#line 584 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) long __cdecl lrintf(float _X); } 
#line 585 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) long __cdecl lroundf(float _X); } 
#line 586 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) float __cdecl nanf(const char *); } 
#line 587 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) float __cdecl nearbyintf(float _X); } 
#line 588 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) float __cdecl nextafterf(float _X, float _Y); } 
#line 589 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) float __cdecl nexttowardf(float _X, long double _Y); } 
#line 590 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) float __cdecl remainderf(float _X, float _Y); } 
#line 591 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) float __cdecl remquof(float _X, float _Y, int * _Z); } 
#line 592 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) float __cdecl rintf(float _X); } 
#line 593 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) float __cdecl roundf(float _X); } 
#line 594 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) float __cdecl scalblnf(float _X, long _Y); } 
#line 595 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) float __cdecl scalbnf(float _X, int _Y); } 
#line 596 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) float __cdecl tgammaf(float _X); } 
#line 597 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) float __cdecl truncf(float _X); } 
#line 601 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) int __cdecl _set_SSE2_enable(int _Flag); } 
#line 637 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __inline float __cdecl acosf(float _X) 
#line 638 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ 
#line 639 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
return (float)acos(_X); 
#line 640 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
} } 
#line 642 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __inline float __cdecl asinf(float _X) 
#line 643 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ 
#line 644 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
return (float)asin(_X); 
#line 645 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
} } 
#line 647 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __inline float __cdecl atan2f(float _Y, float _X) 
#line 648 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ 
#line 649 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
return (float)atan2(_Y, _X); 
#line 650 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
} } 
#line 652 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __inline float __cdecl atanf(float _X) 
#line 653 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ 
#line 654 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
return (float)atan(_X); 
#line 655 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
} } 
#line 657 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __inline float __cdecl ceilf(float _X) 
#line 658 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ 
#line 659 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
return (float)ceil(_X); 
#line 660 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
} } 
#line 662 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __inline float __cdecl cosf(float _X) 
#line 663 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ 
#line 664 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
return (float)cos(_X); 
#line 665 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
} } 
#line 667 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __inline float __cdecl coshf(float _X) 
#line 668 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ 
#line 669 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
return (float)cosh(_X); 
#line 670 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
} } 
#line 672 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __inline float __cdecl expf(float _X) 
#line 673 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ 
#line 674 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
return (float)exp(_X); 
#line 675 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
} } 
#line 685 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __inline float __cdecl fabsf(float _X) 
#line 686 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ 
#line 687 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
return (float)fabs(_X); 
#line 688 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
} } 
#line 699 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __inline float __cdecl floorf(float _X) 
#line 700 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ 
#line 701 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
return (float)floor(_X); 
#line 702 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
} } 
#line 704 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __inline float __cdecl fmodf(float _X, float _Y) 
#line 705 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ 
#line 706 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
return (float)fmod(_X, _Y); 
#line 707 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
} } 
#line 711 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __inline float __cdecl frexpf(float _X, int *_Y) 
#line 712 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ 
#line 713 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
return (float)frexp(_X, _Y); 
#line 714 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
} } 
#line 716 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __inline float __cdecl hypotf(float _X, float _Y) 
#line 717 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ 
#line 718 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
return _hypotf(_X, _Y); 
#line 719 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
} } 
#line 721 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __inline float __cdecl ldexpf(float _X, int _Y) 
#line 722 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ 
#line 723 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
return (float)ldexp(_X, _Y); 
#line 724 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
} } 
#line 740 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __inline float __cdecl log10f(float _X) 
#line 741 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ 
#line 742 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
return (float)log10(_X); 
#line 743 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
} } 
#line 745 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __inline float __cdecl logf(float _X) 
#line 746 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ 
#line 747 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
return (float)log(_X); 
#line 748 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
} } 
#line 750 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __inline float __cdecl modff(float _X, float *_Y) 
#line 751 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ 
#line 752 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
double _F, _I; 
#line 753 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
_F = modf(_X, &_I); 
#line 754 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
(*_Y) = ((float)_I); 
#line 755 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
return (float)_F; 
#line 756 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
} } 
#line 758 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __inline float __cdecl powf(float _X, float _Y) 
#line 759 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ 
#line 760 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
return (float)pow(_X, _Y); 
#line 761 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
} } 
#line 763 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __inline float __cdecl sinf(float _X) 
#line 764 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ 
#line 765 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
return (float)sin(_X); 
#line 766 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
} } 
#line 768 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __inline float __cdecl sinhf(float _X) 
#line 769 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ 
#line 770 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
return (float)sinh(_X); 
#line 771 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
} } 
#line 773 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __inline float __cdecl sqrtf(float _X) 
#line 774 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ 
#line 775 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
return (float)sqrt(_X); 
#line 776 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
} } 
#line 778 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __inline float __cdecl tanf(float _X) 
#line 779 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ 
#line 780 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
return (float)tan(_X); 
#line 781 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
} } 
#line 783 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __inline float __cdecl tanhf(float _X) 
#line 784 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ 
#line 785 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
return (float)tanh(_X); 
#line 786 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
} } 
#line 790 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) long double __cdecl acoshl(long double _X); } 
#line 792 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __inline long double __cdecl acosl(long double _X) 
#line 793 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ 
#line 794 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
return acos((double)_X); 
#line 795 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
} } 
#line 797 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) long double __cdecl asinhl(long double _X); } 
#line 799 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __inline long double __cdecl asinl(long double _X) 
#line 800 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ 
#line 801 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
return asin((double)_X); 
#line 802 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
} } 
#line 804 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __inline long double __cdecl atan2l(long double _Y, long double _X) 
#line 805 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ 
#line 806 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
return atan2((double)_Y, (double)_X); 
#line 807 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
} } 
#line 809 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) long double __cdecl atanhl(long double _X); } 
#line 811 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __inline long double __cdecl atanl(long double _X) 
#line 812 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ 
#line 813 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
return atan((double)_X); 
#line 814 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
} } 
#line 816 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) long double __cdecl cbrtl(long double _X); } 
#line 818 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __inline long double __cdecl ceill(long double _X) 
#line 819 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ 
#line 820 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
return ceil((double)_X); 
#line 821 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
} } 
#line 823 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __inline long double __cdecl _chgsignl(long double _X) 
#line 824 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ 
#line 825 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
return _chgsign((double)_X); 
#line 826 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
} } 
#line 828 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) long double __cdecl copysignl(long double _X, long double _Y); } 
#line 830 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __inline long double __cdecl _copysignl(long double _X, long double _Y) 
#line 831 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ 
#line 832 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
return _copysign((double)_X, (double)_Y); 
#line 833 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
} } 
#line 835 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __inline long double __cdecl coshl(long double _X) 
#line 836 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ 
#line 837 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
return cosh((double)_X); 
#line 838 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
} } 
#line 840 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __inline long double __cdecl cosl(long double _X) 
#line 841 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ 
#line 842 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
return cos((double)_X); 
#line 843 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
} } 
#line 845 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) long double __cdecl erfl(long double _X); } 
#line 846 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) long double __cdecl erfcl(long double _X); } 
#line 848 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __inline long double __cdecl expl(long double _X) 
#line 849 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ 
#line 850 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
return exp((double)_X); 
#line 851 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
} } 
#line 853 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) long double __cdecl exp2l(long double _X); } 
#line 854 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) long double __cdecl expm1l(long double _X); } 
#line 856 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __inline long double __cdecl fabsl(long double _X) 
#line 857 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ 
#line 858 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
return fabs((double)_X); 
#line 859 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
} } 
#line 861 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) long double __cdecl fdiml(long double _X, long double _Y); } 
#line 863 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __inline long double __cdecl floorl(long double _X) 
#line 864 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ 
#line 865 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
return floor((double)_X); 
#line 866 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
} } 
#line 868 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) long double __cdecl fmal(long double _X, long double _Y, long double _Z); } 
#line 869 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) long double __cdecl fmaxl(long double _X, long double _Y); } 
#line 870 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) long double __cdecl fminl(long double _X, long double _Y); } 
#line 872 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __inline long double __cdecl fmodl(long double _X, long double _Y) 
#line 873 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ 
#line 874 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
return fmod((double)_X, (double)_Y); 
#line 875 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
} } 
#line 877 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __inline long double __cdecl frexpl(long double _X, int *_Y) 
#line 878 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ 
#line 879 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
return frexp((double)_X, _Y); 
#line 880 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
} } 
#line 882 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) int __cdecl ilogbl(long double _X); } 
#line 884 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __inline long double __cdecl _hypotl(long double _X, long double _Y) 
#line 885 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ 
#line 886 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
return _hypot((double)_X, (double)_Y); 
#line 887 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
} } 
#line 889 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __inline long double __cdecl hypotl(long double _X, long double _Y) 
#line 890 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ 
#line 891 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
return _hypot((double)_X, (double)_Y); 
#line 892 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
} } 
#line 894 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __inline long double __cdecl ldexpl(long double _X, int _Y) 
#line 895 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ 
#line 896 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
return ldexp((double)_X, _Y); 
#line 897 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
} } 
#line 899 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) long double __cdecl lgammal(long double _X); } 
#line 900 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) __int64 __cdecl llrintl(long double _X); } 
#line 901 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) __int64 __cdecl llroundl(long double _X); } 
#line 903 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __inline long double __cdecl logl(long double _X) 
#line 904 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ 
#line 905 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
return log((double)_X); 
#line 906 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
} } 
#line 908 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __inline long double __cdecl log10l(long double _X) 
#line 909 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ 
#line 910 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
return log10((double)_X); 
#line 911 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
} } 
#line 913 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) long double __cdecl log1pl(long double _X); } 
#line 914 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) long double __cdecl log2l(long double _X); } 
#line 915 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) long double __cdecl logbl(long double _X); } 
#line 916 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) long __cdecl lrintl(long double _X); } 
#line 917 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) long __cdecl lroundl(long double _X); } 
#line 919 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __inline long double __cdecl modfl(long double _X, long double *_Y) 
#line 920 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ 
#line 921 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
double _F, _I; 
#line 922 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
_F = modf((double)_X, &_I); 
#line 923 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
(*_Y) = _I; 
#line 924 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
return _F; 
#line 925 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
} } 
#line 926 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) long double __cdecl nanl(const char *); } 
#line 927 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) long double __cdecl nearbyintl(long double _X); } 
#line 928 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) long double __cdecl nextafterl(long double _X, long double _Y); } 
#line 929 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) long double __cdecl nexttowardl(long double _X, long double _Y); } 
#line 931 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __inline long double __cdecl powl(long double _X, long double _Y) 
#line 932 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ 
#line 933 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
return pow((double)_X, (double)_Y); 
#line 934 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
} } 
#line 936 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) long double __cdecl remainderl(long double _X, long double _Y); } 
#line 937 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) long double __cdecl remquol(long double _X, long double _Y, int * _Z); } 
#line 938 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) long double __cdecl rintl(long double _X); } 
#line 939 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) long double __cdecl roundl(long double _X); } 
#line 940 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) long double __cdecl scalblnl(long double _X, long _Y); } 
#line 941 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) long double __cdecl scalbnl(long double _X, int _Y); } 
#line 943 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __inline long double __cdecl sinhl(long double _X) 
#line 944 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ 
#line 945 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
return sinh((double)_X); 
#line 946 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
} } 
#line 948 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __inline long double __cdecl sinl(long double _X) 
#line 949 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ 
#line 950 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
return sin((double)_X); 
#line 951 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
} } 
#line 953 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __inline long double __cdecl sqrtl(long double _X) 
#line 954 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ 
#line 955 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
return sqrt((double)_X); 
#line 956 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
} } 
#line 958 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __inline long double __cdecl tanhl(long double _X) 
#line 959 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ 
#line 960 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
return tanh((double)_X); 
#line 961 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
} } 
#line 963 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __inline long double __cdecl tanl(long double _X) 
#line 964 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ 
#line 965 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
return tan((double)_X); 
#line 966 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
} } 
#line 968 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) long double __cdecl tgammal(long double _X); } 
#line 969 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) long double __cdecl truncl(long double _X); } 
#line 992 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" __declspec(dllimport) double HUGE; 
#line 997 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) double __cdecl j0(double _X); } 
#line 998 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) double __cdecl j1(double _X); } 
#line 999 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) double __cdecl jn(int _X, double _Y); } 
#line 1000 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) double __cdecl y0(double _X); } 
#line 1001 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) double __cdecl y1(double _X); } 
#line 1002 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) double __cdecl yn(int _X, double _Y); } 
#line 1012 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
template < class _Ty > inline
        _Ty _Pow_int ( _Ty _X, int _Y ) throw ( )
        { unsigned int _N;
        if ( _Y >= 0 )
                _N = ( unsigned int ) _Y;
        else
                _N = ( unsigned int ) ( - _Y );
        for ( _Ty _Z = _Ty ( 1 );; _X *= _X )
                { if ( ( _N & 1 ) != 0 )
                        _Z *= _X;
                if ( ( _N >>= 1 ) == 0 )
                        return ( _Y < 0 ? _Ty ( 1 ) / _Z : _Z ); } }
#line 1025 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline double __cdecl abs(double _X) throw() 
#line 1026 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return fabs(_X); } 
#line 1027 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline double __cdecl pow(double _X, int _Y) throw() 
#line 1028 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return _Pow_int(_X, _Y); } 
#line 1029 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline float __cdecl abs(float _X) throw() 
#line 1030 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return fabsf(_X); } 
#line 1031 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline float __cdecl acos(float _X) throw() 
#line 1032 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return acosf(_X); } 
#line 1033 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline float __cdecl acosh(float _X) throw() 
#line 1034 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return acoshf(_X); } 
#line 1035 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline float __cdecl asin(float _X) throw() 
#line 1036 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return asinf(_X); } 
#line 1037 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline float __cdecl asinh(float _X) throw() 
#line 1038 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return asinhf(_X); } 
#line 1039 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline float __cdecl atan(float _X) throw() 
#line 1040 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return atanf(_X); } 
#line 1041 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline float __cdecl atanh(float _X) throw() 
#line 1042 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return atanhf(_X); } 
#line 1043 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline float __cdecl atan2(float _Y, float _X) throw() 
#line 1044 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return atan2f(_Y, _X); } 
#line 1045 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline float __cdecl cbrt(float _X) throw() 
#line 1046 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return cbrtf(_X); } 
#line 1047 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline float __cdecl ceil(float _X) throw() 
#line 1048 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return ceilf(_X); } 
#line 1049 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline float __cdecl copysign(float _X, float _Y) throw() 
#line 1050 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return copysignf(_X, _Y); } 
#line 1051 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline float __cdecl cos(float _X) throw() 
#line 1052 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return cosf(_X); } 
#line 1053 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline float __cdecl cosh(float _X) throw() 
#line 1054 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return coshf(_X); } 
#line 1055 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline float __cdecl erf(float _X) throw() 
#line 1056 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return erff(_X); } 
#line 1057 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline float __cdecl erfc(float _X) throw() 
#line 1058 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return erfcf(_X); } 
#line 1059 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline float __cdecl exp(float _X) throw() 
#line 1060 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return expf(_X); } 
#line 1061 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline float __cdecl exp2(float _X) throw() 
#line 1062 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return exp2f(_X); } 
#line 1063 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline float __cdecl expm1(float _X) throw() 
#line 1064 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return expm1f(_X); } 
#line 1065 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline float __cdecl fabs(float _X) throw() 
#line 1066 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return fabsf(_X); } 
#line 1067 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline float __cdecl fdim(float _X, float _Y) throw() 
#line 1068 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return fdimf(_X, _Y); } 
#line 1069 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline float __cdecl floor(float _X) throw() 
#line 1070 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return floorf(_X); } 
#line 1071 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline float __cdecl fma(float _X, float _Y, float _Z) throw() 
#line 1072 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return fmaf(_X, _Y, _Z); } 
#line 1073 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline float __cdecl fmax(float _X, float _Y) throw() 
#line 1074 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return fmaxf(_X, _Y); } 
#line 1075 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline float __cdecl fmin(float _X, float _Y) throw() 
#line 1076 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return fminf(_X, _Y); } 
#line 1077 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline float __cdecl fmod(float _X, float _Y) throw() 
#line 1078 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return fmodf(_X, _Y); } 
#line 1079 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline float __cdecl frexp(float _X, int *_Y) throw() 
#line 1080 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return frexpf(_X, _Y); } 
#line 1081 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline float __cdecl hypot(float _X, float _Y) throw() 
#line 1082 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return hypotf(_X, _Y); } 
#line 1083 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline int __cdecl ilogb(float _X) throw() 
#line 1084 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return ilogbf(_X); } 
#line 1085 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline float __cdecl ldexp(float _X, int _Y) throw() 
#line 1086 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return ldexpf(_X, _Y); } 
#line 1087 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline float __cdecl lgamma(float _X) throw() 
#line 1088 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return lgammaf(_X); } 
#line 1089 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline __int64 __cdecl llrint(float _X) throw() 
#line 1090 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return llrintf(_X); } 
#line 1091 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline __int64 __cdecl llround(float _X) throw() 
#line 1092 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return llroundf(_X); } 
#line 1093 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline float __cdecl log(float _X) throw() 
#line 1094 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return logf(_X); } 
#line 1095 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline float __cdecl log10(float _X) throw() 
#line 1096 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return log10f(_X); } 
#line 1097 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline float __cdecl log1p(float _X) throw() 
#line 1098 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return log1pf(_X); } 
#line 1099 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline float __cdecl log2(float _X) throw() 
#line 1100 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return log2f(_X); } 
#line 1101 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline float __cdecl logb(float _X) throw() 
#line 1102 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return logbf(_X); } 
#line 1103 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline long __cdecl lrint(float _X) throw() 
#line 1104 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return lrintf(_X); } 
#line 1105 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline long __cdecl lround(float _X) throw() 
#line 1106 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return lroundf(_X); } 
#line 1107 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline float __cdecl modf(float _X, float *_Y) throw() 
#line 1108 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return modff(_X, _Y); } 
#line 1109 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline float __cdecl nearbyint(float _X) throw() 
#line 1110 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return nearbyintf(_X); } 
#line 1111 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline float __cdecl nextafter(float _X, float _Y) throw() 
#line 1112 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return nextafterf(_X, _Y); } 
#line 1113 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline float __cdecl nexttoward(float _X, long double _Y) throw() 
#line 1114 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return nexttowardf(_X, _Y); } 
#line 1115 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline float __cdecl pow(float _X, float _Y) throw() 
#line 1116 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return powf(_X, _Y); } 
#line 1117 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline float __cdecl pow(float _X, int _Y) throw() 
#line 1118 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return _Pow_int(_X, _Y); } 
#line 1119 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline float __cdecl remainder(float _X, float _Y) throw() 
#line 1120 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return remainderf(_X, _Y); } 
#line 1121 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline float __cdecl remquo(float _X, float _Y, int *_Z) throw() 
#line 1122 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return remquof(_X, _Y, _Z); } 
#line 1123 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline float __cdecl rint(float _X) throw() 
#line 1124 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return rintf(_X); } 
#line 1125 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline float __cdecl round(float _X) throw() 
#line 1126 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return roundf(_X); } 
#line 1127 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline float __cdecl scalbln(float _X, long _Y) throw() 
#line 1128 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return scalblnf(_X, _Y); } 
#line 1129 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline float __cdecl scalbn(float _X, int _Y) throw() 
#line 1130 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return scalbnf(_X, _Y); } 
#line 1131 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline float __cdecl sin(float _X) throw() 
#line 1132 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return sinf(_X); } 
#line 1133 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline float __cdecl sinh(float _X) throw() 
#line 1134 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return sinhf(_X); } 
#line 1135 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline float __cdecl sqrt(float _X) throw() 
#line 1136 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return sqrtf(_X); } 
#line 1137 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline float __cdecl tan(float _X) throw() 
#line 1138 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return tanf(_X); } 
#line 1139 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline float __cdecl tanh(float _X) throw() 
#line 1140 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return tanhf(_X); } 
#line 1141 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline float __cdecl tgamma(float _X) throw() 
#line 1142 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return tgammaf(_X); } 
#line 1143 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline float __cdecl trunc(float _X) throw() 
#line 1144 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return truncf(_X); } 
#line 1145 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline long double __cdecl abs(long double _X) throw() 
#line 1146 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return fabsl(_X); } 
#line 1147 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline long double __cdecl acos(long double _X) throw() 
#line 1148 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return acosl(_X); } 
#line 1149 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline long double __cdecl acosh(long double _X) throw() 
#line 1150 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return acoshl(_X); } 
#line 1151 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline long double __cdecl asin(long double _X) throw() 
#line 1152 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return asinl(_X); } 
#line 1153 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline long double __cdecl asinh(long double _X) throw() 
#line 1154 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return asinhl(_X); } 
#line 1155 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline long double __cdecl atan(long double _X) throw() 
#line 1156 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return atanl(_X); } 
#line 1157 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline long double __cdecl atanh(long double _X) throw() 
#line 1158 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return atanhl(_X); } 
#line 1159 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline long double __cdecl atan2(long double _Y, long double _X) throw() 
#line 1160 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return atan2l(_Y, _X); } 
#line 1161 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline long double __cdecl cbrt(long double _X) throw() 
#line 1162 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return cbrtl(_X); } 
#line 1163 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline long double __cdecl ceil(long double _X) throw() 
#line 1164 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return ceill(_X); } 
#line 1165 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline long double __cdecl copysign(long double _X, long double _Y) throw() 
#line 1166 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return copysignl(_X, _Y); } 
#line 1167 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline long double __cdecl cos(long double _X) throw() 
#line 1168 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return cosl(_X); } 
#line 1169 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline long double __cdecl cosh(long double _X) throw() 
#line 1170 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return coshl(_X); } 
#line 1171 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline long double __cdecl erf(long double _X) throw() 
#line 1172 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return erfl(_X); } 
#line 1173 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline long double __cdecl erfc(long double _X) throw() 
#line 1174 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return erfcl(_X); } 
#line 1175 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline long double __cdecl exp(long double _X) throw() 
#line 1176 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return expl(_X); } 
#line 1177 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline long double __cdecl exp2(long double _X) throw() 
#line 1178 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return exp2l(_X); } 
#line 1179 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline long double __cdecl expm1(long double _X) throw() 
#line 1180 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return expm1l(_X); } 
#line 1181 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline long double __cdecl fabs(long double _X) throw() 
#line 1182 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return fabsl(_X); } 
#line 1183 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline long double __cdecl fdim(long double _X, long double _Y) throw() 
#line 1184 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return fdiml(_X, _Y); } 
#line 1185 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline long double __cdecl floor(long double _X) throw() 
#line 1186 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return floorl(_X); } 
#line 1187 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline long double __cdecl fma(long double _X, long double _Y, long double _Z) throw() 
#line 1188 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return fmal(_X, _Y, _Z); } 
#line 1189 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline long double __cdecl fmax(long double _X, long double _Y) throw() 
#line 1190 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return fmaxl(_X, _Y); } 
#line 1191 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline long double __cdecl fmin(long double _X, long double _Y) throw() 
#line 1192 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return fminl(_X, _Y); } 
#line 1193 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline long double __cdecl fmod(long double _X, long double _Y) throw() 
#line 1194 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return fmodl(_X, _Y); } 
#line 1195 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline long double __cdecl frexp(long double _X, int *_Y) throw() 
#line 1196 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return frexpl(_X, _Y); } 
#line 1197 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline long double __cdecl hypot(long double _X, long double _Y) throw() 
#line 1198 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return hypotl(_X, _Y); } 
#line 1199 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline int __cdecl ilogb(long double _X) throw() 
#line 1200 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return ilogbl(_X); } 
#line 1201 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline long double __cdecl ldexp(long double _X, int _Y) throw() 
#line 1202 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return ldexpl(_X, _Y); } 
#line 1203 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline long double __cdecl lgamma(long double _X) throw() 
#line 1204 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return lgammal(_X); } 
#line 1205 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline __int64 __cdecl llrint(long double _X) throw() 
#line 1206 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return llrintl(_X); } 
#line 1207 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline __int64 __cdecl llround(long double _X) throw() 
#line 1208 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return llroundl(_X); } 
#line 1209 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline long double __cdecl log(long double _X) throw() 
#line 1210 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return logl(_X); } 
#line 1211 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline long double __cdecl log10(long double _X) throw() 
#line 1212 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return log10l(_X); } 
#line 1213 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline long double __cdecl log1p(long double _X) throw() 
#line 1214 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return log1pl(_X); } 
#line 1215 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline long double __cdecl log2(long double _X) throw() 
#line 1216 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return log2l(_X); } 
#line 1217 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline long double __cdecl logb(long double _X) throw() 
#line 1218 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return logbl(_X); } 
#line 1219 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline long __cdecl lrint(long double _X) throw() 
#line 1220 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return lrintl(_X); } 
#line 1221 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline long __cdecl lround(long double _X) throw() 
#line 1222 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return lroundl(_X); } 
#line 1223 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline long double __cdecl modf(long double _X, long double *_Y) throw() 
#line 1224 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return modfl(_X, _Y); } 
#line 1225 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline long double __cdecl nearbyint(long double _X) throw() 
#line 1226 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return nearbyintl(_X); } 
#line 1227 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline long double __cdecl nextafter(long double _X, long double _Y) throw() 
#line 1228 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return nextafterl(_X, _Y); } 
#line 1229 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline long double __cdecl nexttoward(long double _X, long double _Y) throw() 
#line 1230 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return nexttowardl(_X, _Y); } 
#line 1231 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline long double __cdecl pow(long double _X, long double _Y) throw() 
#line 1232 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return powl(_X, _Y); } 
#line 1233 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline long double __cdecl pow(long double _X, int _Y) throw() 
#line 1234 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return _Pow_int(_X, _Y); } 
#line 1235 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline long double __cdecl remainder(long double _X, long double _Y) throw() 
#line 1236 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return remainderl(_X, _Y); } 
#line 1237 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline long double __cdecl remquo(long double _X, long double _Y, int *_Z) throw() 
#line 1238 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return remquol(_X, _Y, _Z); } 
#line 1239 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline long double __cdecl rint(long double _X) throw() 
#line 1240 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return rintl(_X); } 
#line 1241 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline long double __cdecl round(long double _X) throw() 
#line 1242 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return roundl(_X); } 
#line 1243 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline long double __cdecl scalbln(long double _X, long _Y) throw() 
#line 1244 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return scalblnl(_X, _Y); } 
#line 1245 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline long double __cdecl scalbn(long double _X, int _Y) throw() 
#line 1246 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return scalbnl(_X, _Y); } 
#line 1247 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline long double __cdecl sin(long double _X) throw() 
#line 1248 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return sinl(_X); } 
#line 1249 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline long double __cdecl sinh(long double _X) throw() 
#line 1250 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return sinhl(_X); } 
#line 1251 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline long double __cdecl sqrt(long double _X) throw() 
#line 1252 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return sqrtl(_X); } 
#line 1253 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline long double __cdecl tan(long double _X) throw() 
#line 1254 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return tanl(_X); } 
#line 1255 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline long double __cdecl tanh(long double _X) throw() 
#line 1256 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return tanhl(_X); } 
#line 1257 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline long double __cdecl tgamma(long double _X) throw() 
#line 1258 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return tgammal(_X); } 
#line 1259 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline long double __cdecl trunc(long double _X) throw() 
#line 1260 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return truncl(_X); } 
#line 1265 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
#pragma pack ( pop )
#line 28 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
#pragma pack ( push, 8 )
#line 52 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { typedef int (__cdecl *_onexit_t)(void); }
#line 78 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { typedef 
#line 75 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
struct _div_t { 
#line 76 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
int quot; 
#line 77 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
int rem; 
#line 78 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
} div_t; }
#line 83 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { typedef 
#line 80 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
struct _ldiv_t { 
#line 81 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
long quot; 
#line 82 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
long rem; 
#line 83 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
} ldiv_t; }
#line 88 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { typedef 
#line 85 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
struct _lldiv_t { 
#line 86 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
__int64 quot; 
#line 87 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
__int64 rem; 
#line 88 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
} lldiv_t; }
#line 102 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
#pragma pack ( 4 )
#line 105 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { typedef 
#line 103 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
struct { 
#line 104 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
unsigned char ld[10]; 
#line 105 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
} _LDOUBLE; }
#pragma pack ( )
#line 124 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { typedef 
#line 122 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
struct { 
#line 123 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
double x; 
#line 124 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
} _CRT_DOUBLE; }
#line 128 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { typedef 
#line 126 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
struct { 
#line 127 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
float f; 
#line 128 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
} _CRT_FLOAT; }
#line 139 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { typedef 
#line 134 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
struct { 
#line 138 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
long double x; 
#line 139 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
} _LONGDOUBLE; }
#line 143 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
#pragma pack ( 4 )
#line 146 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { typedef 
#line 144 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
struct { 
#line 145 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
unsigned char ld12[12]; 
#line 146 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
} _LDBL12; }
#pragma pack ( )
#line 170 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" __declspec(dllimport) int __mb_cur_max; 
#line 175 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) int __cdecl ___mb_cur_max_func(); } 
#line 176 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) int __cdecl ___mb_cur_max_l_func(_locale_t); } 
#line 215 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { typedef void (__cdecl *_purecall_handler)(void); }
#line 218 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) _purecall_handler __cdecl _set_purecall_handler(_purecall_handler _Handler); } 
#line 219 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) _purecall_handler __cdecl _get_purecall_handler(); } 
#line 235 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { typedef void (__cdecl *_invalid_parameter_handler)(const __wchar_t *, const __wchar_t *, const __wchar_t *, unsigned, uintptr_t); }
#line 238 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) _invalid_parameter_handler __cdecl _set_invalid_parameter_handler(_invalid_parameter_handler _Handler); } 
#line 239 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) _invalid_parameter_handler __cdecl _get_invalid_parameter_handler(); } 
#line 252 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) unsigned long *__cdecl __doserrno(); } 
#line 255 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { errno_t __cdecl _set_doserrno(unsigned long _Value); } 
#line 256 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { errno_t __cdecl _get_doserrno(unsigned long * _Value); } 
#line 259 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) char **__cdecl __sys_errlist(); } 
#line 262 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) int *__cdecl __sys_nerr(); } 
#line 268 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) int *__cdecl __p___argc(); } 
#line 269 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) char ***__cdecl __p___argv(); } 
#line 270 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) __wchar_t ***__cdecl __p___wargv(); } 
#line 271 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) char ***__cdecl __p__environ(); } 
#line 272 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) __wchar_t ***__cdecl __p__wenviron(); } 
#line 275 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) char **__cdecl __p__pgmptr(); } 
#line 276 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) __wchar_t **__cdecl __p__wpgmptr(); } 
#line 288 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" __declspec(dllimport) int __argc; 
#line 289 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" __declspec(dllimport) char **__argv; 
#line 290 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" __declspec(dllimport) __wchar_t **__wargv; 
#line 306 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" __declspec(dllimport) char **_environ; 
#line 307 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" __declspec(dllimport) __wchar_t **_wenviron; 
#line 311 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" __declspec(dllimport) char *_pgmptr; 
#line 312 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" __declspec(dllimport) __wchar_t *_wpgmptr; 
#line 339 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { errno_t __cdecl _get_pgmptr(char ** _Value); } 
#line 340 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { errno_t __cdecl _get_wpgmptr(__wchar_t ** _Value); } 
#line 346 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" __declspec(dllimport) int _fmode; 
#line 353 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _set_fmode(int _Mode); } 
#line 354 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _get_fmode(int * _PMode); } 
#line 363 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
template< class _CountofType, size_t _SizeOfArray> char (*__countof_helper(_CountofType (& _Array)[_SizeOfArray]))[_SizeOfArray]; 
#line 376 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) __declspec(noreturn) void __cdecl exit(int _Code); } 
#line 378 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) __declspec(noreturn) void __cdecl _exit(int _Code); } 
#line 379 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) __declspec(noreturn) void __cdecl abort(); } 
#line 382 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) unsigned __cdecl _set_abort_behavior(unsigned _Flags, unsigned _Mask); } 
#line 384 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { int __cdecl abs(int _X); } 
#line 385 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { long __cdecl labs(long _X); } 
#line 386 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __int64 __cdecl llabs(__int64 _X); } 
#line 388 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __int64 __cdecl _abs64(__int64); } 
#line 426 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { int __cdecl atexit(void (__cdecl *)(void)); } 
#line 428 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) double __cdecl atof(const char * _String); } 
#line 429 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) double __cdecl _atof_l(const char * _String, _locale_t _Locale); } 
#line 430 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) int __cdecl atoi(const char * _Str); } 
#line 431 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) int __cdecl _atoi_l(const char * _Str, _locale_t _Locale); } 
#line 432 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) long __cdecl atol(const char * _Str); } 
#line 433 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) long __cdecl _atol_l(const char * _Str, _locale_t _Locale); } 
#line 434 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) __int64 __cdecl atoll(const char * _Str); } 
#line 435 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) __int64 __cdecl _atoll_l(const char * _Str, _locale_t _Locale); } 
#line 439 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) void *__cdecl bsearch_s(const void * _Key, const void * _Base, rsize_t _NumOfElements, rsize_t _SizeOfElements, int (__cdecl * _PtFuncCompare)(void *, const void *, const void *), void * _Context); } 
#line 443 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) void *__cdecl bsearch(const void * _Key, const void * _Base, size_t _NumOfElements, size_t _SizeOfElements, int (__cdecl * _PtFuncCompare)(const void *, const void *)); } 
#line 448 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) void __cdecl qsort_s(void * _Base, rsize_t _NumOfElements, rsize_t _SizeOfElements, int (__cdecl * _PtFuncCompare)(void *, const void *, const void *), void * _Context); } 
#line 452 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) void __cdecl qsort(void * _Base, size_t _NumOfElements, size_t _SizeOfElements, int (__cdecl * _PtFuncCompare)(const void *, const void *)); } 
#line 456 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { unsigned short __cdecl _byteswap_ushort(unsigned short _Short); } 
#line 457 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { unsigned long __cdecl _byteswap_ulong(unsigned long _Long); } 
#line 458 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { unsigned __int64 __cdecl _byteswap_uint64(unsigned __int64 _Int64); } 
#line 459 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) div_t __cdecl div(int _Numerator, int _Denominator); } 
#line 462 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) char *__cdecl getenv(const char * _VarName); } 
#line 464 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) errno_t __cdecl getenv_s(size_t * _ReturnSize, char * _DstBuf, rsize_t _DstSize, const char * _VarName); } 
#line 466 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
template < size_t _Size > inline errno_t __cdecl getenv_s ( size_t * _ReturnSize, char ( & _Dest ) [ _Size ], const char * _VarName ) throw ( ) { return getenv_s ( _ReturnSize, _Dest, _Size, _VarName ); }
#line 472 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _dupenv_s(char ** _PBuffer, size_t * _PBufferSizeInBytes, const char * _VarName); } 
#line 479 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _itoa_s(int _Value, char * _DstBuf, size_t _Size, int _Radix); } 
#line 480 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
template < size_t _Size > inline errno_t __cdecl _itoa_s ( int _Value, char ( & _Dest ) [ _Size ], int _Radix ) throw ( ) { return _itoa_s ( _Value, _Dest, _Size, _Radix ); }
#line 481 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) char *__cdecl _itoa(int _Value, char * _Dest, int _Radix); } 
#line 482 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _i64toa_s(__int64 _Val, char * _DstBuf, size_t _Size, int _Radix); } 
#line 483 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) char *__cdecl _i64toa(__int64 _Val, char * _DstBuf, int _Radix); } 
#line 484 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _ui64toa_s(unsigned __int64 _Val, char * _DstBuf, size_t _Size, int _Radix); } 
#line 485 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) char *__cdecl _ui64toa(unsigned __int64 _Val, char * _DstBuf, int _Radix); } 
#line 486 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) __int64 __cdecl _atoi64(const char * _String); } 
#line 487 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) __int64 __cdecl _atoi64_l(const char * _String, _locale_t _Locale); } 
#line 488 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) __int64 __cdecl _strtoi64(const char * _String, char ** _EndPtr, int _Radix); } 
#line 489 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) __int64 __cdecl _strtoi64_l(const char * _String, char ** _EndPtr, int _Radix, _locale_t _Locale); } 
#line 490 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) unsigned __int64 __cdecl _strtoui64(const char * _String, char ** _EndPtr, int _Radix); } 
#line 491 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) unsigned __int64 __cdecl _strtoui64_l(const char * _String, char ** _EndPtr, int _Radix, _locale_t _Locale); } 
#line 492 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) ldiv_t __cdecl ldiv(long _Numerator, long _Denominator); } 
#line 493 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) lldiv_t __cdecl lldiv(__int64 _Numerator, __int64 _Denominator); } 
#line 497 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
inline long abs(long _X) throw() 
#line 498 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
{ 
#line 499 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
return labs(_X); 
#line 500 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
} 
#line 501 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
inline __int64 abs(__int64 _X) throw() 
#line 502 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
{ 
#line 503 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
return llabs(_X); 
#line 504 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
} 
#line 505 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
inline ldiv_t div(long _A1, long _A2) throw() 
#line 506 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
{ 
#line 507 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
return ldiv(_A1, _A2); 
#line 508 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
} 
#line 509 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
inline lldiv_t div(__int64 _A1, __int64 _A2) throw() 
#line 510 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
{ 
#line 511 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
return lldiv(_A1, _A2); 
#line 512 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
} 
#line 515 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _ltoa_s(long _Val, char * _DstBuf, size_t _Size, int _Radix); } 
#line 516 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
template < size_t _Size > inline errno_t __cdecl _ltoa_s ( long _Value, char ( & _Dest ) [ _Size ], int _Radix ) throw ( ) { return _ltoa_s ( _Value, _Dest, _Size, _Radix ); }
#line 517 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) char *__cdecl _ltoa(long _Value, char * _Dest, int _Radix); } 
#line 518 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) int __cdecl mblen(const char * _Ch, size_t _MaxCount); } 
#line 519 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) int __cdecl _mblen_l(const char * _Ch, size_t _MaxCount, _locale_t _Locale); } 
#line 520 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) size_t __cdecl _mbstrlen(const char * _Str); } 
#line 521 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) size_t __cdecl _mbstrlen_l(const char * _Str, _locale_t _Locale); } 
#line 522 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) size_t __cdecl _mbstrnlen(const char * _Str, size_t _MaxCount); } 
#line 523 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) size_t __cdecl _mbstrnlen_l(const char * _Str, size_t _MaxCount, _locale_t _Locale); } 
#line 524 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) int __cdecl mbtowc(__wchar_t * _DstCh, const char * _SrcCh, size_t _SrcSizeInBytes); } 
#line 525 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) int __cdecl _mbtowc_l(__wchar_t * _DstCh, const char * _SrcCh, size_t _SrcSizeInBytes, _locale_t _Locale); } 
#line 526 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) errno_t __cdecl mbstowcs_s(size_t * _PtNumOfCharConverted, __wchar_t * _DstBuf, size_t _SizeInWords, const char * _SrcBuf, size_t _MaxCount); } 
#line 527 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
template < size_t _Size > inline errno_t __cdecl mbstowcs_s ( size_t * _PtNumOfCharConverted, wchar_t ( & _Dest ) [ _Size ], const char * _Source, size_t _MaxCount ) throw ( ) { return mbstowcs_s ( _PtNumOfCharConverted, _Dest, _Size, _Source, _MaxCount ); }
#line 528 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) size_t __cdecl mbstowcs(__wchar_t * _Dest, const char * _Source, size_t _MaxCount); } 
#line 530 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _mbstowcs_s_l(size_t * _PtNumOfCharConverted, __wchar_t * _DstBuf, size_t _SizeInWords, const char * _SrcBuf, size_t _MaxCount, _locale_t _Locale); } 
#line 531 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
template < size_t _Size > inline errno_t __cdecl _mbstowcs_s_l ( size_t * _PtNumOfCharConverted, wchar_t ( & _Dest ) [ _Size ], const char * _Source, size_t _MaxCount, _locale_t _Locale ) throw ( ) { return _mbstowcs_s_l ( _PtNumOfCharConverted, _Dest, _Size, _Source, _MaxCount, _Locale ); }
#line 532 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) size_t __cdecl _mbstowcs_l(__wchar_t * _Dest, const char * _Source, size_t _MaxCount, _locale_t _Locale); } 
#line 534 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) int __cdecl rand(); } 
#line 539 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) int __cdecl _set_error_mode(int _Mode); } 
#line 541 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) void __cdecl srand(unsigned _Seed); } 
#line 542 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) double __cdecl strtod(const char * _Str, char ** _EndPtr); } 
#line 543 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) double __cdecl _strtod_l(const char * _Str, char ** _EndPtr, _locale_t _Locale); } 
#line 544 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) long __cdecl strtol(const char * _Str, char ** _EndPtr, int _Radix); } 
#line 545 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) long __cdecl _strtol_l(const char * _Str, char ** _EndPtr, int _Radix, _locale_t _Locale); } 
#line 546 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) __int64 __cdecl strtoll(const char * _Str, char ** _EndPtr, int _Radix); } 
#line 547 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) __int64 __cdecl _strtoll_l(const char * _Str, char ** _EndPtr, int _Radix, _locale_t _Locale); } 
#line 548 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) unsigned long __cdecl strtoul(const char * _Str, char ** _EndPtr, int _Radix); } 
#line 549 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) unsigned long __cdecl _strtoul_l(const char * _Str, char ** _EndPtr, int _Radix, _locale_t _Locale); } 
#line 550 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) unsigned __int64 __cdecl strtoull(const char * _Str, char ** _EndPtr, int _Radix); } 
#line 551 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) unsigned __int64 __cdecl _strtoull_l(const char * _Str, char ** _EndPtr, int _Radix, _locale_t _Locale); } 
#line 552 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) long double __cdecl strtold(const char * _Str, char ** _EndPtr); } 
#line 553 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) long double __cdecl _strtold_l(const char * _Str, char ** _EndPtr, _locale_t _Locale); } 
#line 554 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) float __cdecl strtof(const char * _Str, char ** _EndPtr); } 
#line 555 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) float __cdecl _strtof_l(const char * _Str, char ** _EndPtr, _locale_t _Locale); } 
#line 560 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) int __cdecl system(const char * _Command); } 
#line 564 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _ultoa_s(unsigned long _Val, char * _DstBuf, size_t _Size, int _Radix); } 
#line 565 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
template < size_t _Size > inline errno_t __cdecl _ultoa_s ( unsigned long _Value, char ( & _Dest ) [ _Size ], int _Radix ) throw ( ) { return _ultoa_s ( _Value, _Dest, _Size, _Radix ); }
#line 566 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) char *__cdecl _ultoa(unsigned long _Value, char * _Dest, int _Radix); } 
#line 567 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) int __cdecl wctomb(char * _MbCh, __wchar_t _WCh); } 
#line 568 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) int __cdecl _wctomb_l(char * _MbCh, __wchar_t _WCh, _locale_t _Locale); } 
#line 570 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) errno_t __cdecl wctomb_s(int * _SizeConverted, char * _MbCh, rsize_t _SizeInBytes, __wchar_t _WCh); } 
#line 572 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _wctomb_s_l(int * _SizeConverted, char * _MbCh, size_t _SizeInBytes, __wchar_t _WCh, _locale_t _Locale); } 
#line 573 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) errno_t __cdecl wcstombs_s(size_t * _PtNumOfCharConverted, char * _Dst, size_t _DstSizeInBytes, const __wchar_t * _Src, size_t _MaxCountInBytes); } 
#line 574 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
template < size_t _Size > inline errno_t __cdecl wcstombs_s ( size_t * _PtNumOfCharConverted, char ( & _Dest ) [ _Size ], const wchar_t * _Source, size_t _MaxCount ) throw ( ) { return wcstombs_s ( _PtNumOfCharConverted, _Dest, _Size, _Source, _MaxCount ); }
#line 575 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) size_t __cdecl wcstombs(char * _Dest, const __wchar_t * _Source, size_t _MaxCount); } 
#line 576 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _wcstombs_s_l(size_t * _PtNumOfCharConverted, char * _Dst, size_t _DstSizeInBytes, const __wchar_t * _Src, size_t _MaxCountInBytes, _locale_t _Locale); } 
#line 577 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
template < size_t _Size > inline errno_t __cdecl _wcstombs_s_l ( size_t * _PtNumOfCharConverted, char ( & _Dest ) [ _Size ], const wchar_t * _Source, size_t _MaxCount, _locale_t _Locale ) throw ( ) { return _wcstombs_s_l ( _PtNumOfCharConverted, _Dest, _Size, _Source, _MaxCount, _Locale ); }
#line 578 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) size_t __cdecl _wcstombs_l(char * _Dest, const __wchar_t * _Source, size_t _MaxCount, _locale_t _Locale); } 
#line 640 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) __declspec(noalias) __declspec(restrict) void *__cdecl calloc(size_t _Count, size_t _Size); } 
#line 641 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) __declspec(noalias) void __cdecl free(void * _Memory); } 
#line 642 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) __declspec(noalias) __declspec(restrict) void *__cdecl malloc(size_t _Size); } 
#line 644 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) __declspec(noalias) __declspec(restrict) void *__cdecl realloc(void * _Memory, size_t _NewSize); } 
#line 646 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) __declspec(noalias) __declspec(restrict) void *__cdecl _recalloc(void * _Memory, size_t _Count, size_t _Size); } 
#line 647 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) __declspec(noalias) void __cdecl _aligned_free(void * _Memory); } 
#line 648 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) __declspec(noalias) __declspec(restrict) void *__cdecl _aligned_malloc(size_t _Size, size_t _Alignment); } 
#line 649 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) __declspec(noalias) __declspec(restrict) void *__cdecl _aligned_offset_malloc(size_t _Size, size_t _Alignment, size_t _Offset); } 
#line 651 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) __declspec(noalias) __declspec(restrict) void *__cdecl _aligned_realloc(void * _Memory, size_t _NewSize, size_t _Alignment); } 
#line 653 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) __declspec(noalias) __declspec(restrict) void *__cdecl _aligned_recalloc(void * _Memory, size_t _Count, size_t _Size, size_t _Alignment); } 
#line 655 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) __declspec(noalias) __declspec(restrict) void *__cdecl _aligned_offset_realloc(void * _Memory, size_t _NewSize, size_t _Alignment, size_t _Offset); } 
#line 657 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) __declspec(noalias) __declspec(restrict) void *__cdecl _aligned_offset_recalloc(void * _Memory, size_t _Count, size_t _Size, size_t _Alignment, size_t _Offset); } 
#line 658 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) size_t __cdecl _aligned_msize(void * _Memory, size_t _Alignment, size_t _Offset); } 
#line 685 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _itow_s(int _Val, __wchar_t * _DstBuf, size_t _SizeInWords, int _Radix); } 
#line 686 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
template < size_t _Size > inline errno_t __cdecl _itow_s ( int _Value, wchar_t ( & _Dest ) [ _Size ], int _Radix ) throw ( ) { return _itow_s ( _Value, _Dest, _Size, _Radix ); }
#line 687 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) __wchar_t *__cdecl _itow(int _Value, __wchar_t * _Dest, int _Radix); } 
#line 688 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _ltow_s(long _Val, __wchar_t * _DstBuf, size_t _SizeInWords, int _Radix); } 
#line 689 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
template < size_t _Size > inline errno_t __cdecl _ltow_s ( long _Value, wchar_t ( & _Dest ) [ _Size ], int _Radix ) throw ( ) { return _ltow_s ( _Value, _Dest, _Size, _Radix ); }
#line 690 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) __wchar_t *__cdecl _ltow(long _Value, __wchar_t * _Dest, int _Radix); } 
#line 691 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _ultow_s(unsigned long _Val, __wchar_t * _DstBuf, size_t _SizeInWords, int _Radix); } 
#line 692 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
template < size_t _Size > inline errno_t __cdecl _ultow_s ( unsigned long _Value, wchar_t ( & _Dest ) [ _Size ], int _Radix ) throw ( ) { return _ultow_s ( _Value, _Dest, _Size, _Radix ); }
#line 693 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) __wchar_t *__cdecl _ultow(unsigned long _Value, __wchar_t * _Dest, int _Radix); } 
#line 694 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) double __cdecl wcstod(const __wchar_t * _Str, __wchar_t ** _EndPtr); } 
#line 695 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) double __cdecl _wcstod_l(const __wchar_t * _Str, __wchar_t ** _EndPtr, _locale_t _Locale); } 
#line 696 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) long __cdecl wcstol(const __wchar_t * _Str, __wchar_t ** _EndPtr, int _Radix); } 
#line 697 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) long __cdecl _wcstol_l(const __wchar_t * _Str, __wchar_t ** _EndPtr, int _Radix, _locale_t _Locale); } 
#line 698 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) __int64 __cdecl wcstoll(const __wchar_t * _Str, __wchar_t ** _EndPtr, int _Radix); } 
#line 699 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) __int64 __cdecl _wcstoll_l(const __wchar_t * _Str, __wchar_t ** _EndPtr, int _Radix, _locale_t _Locale); } 
#line 700 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) unsigned long __cdecl wcstoul(const __wchar_t * _Str, __wchar_t ** _EndPtr, int _Radix); } 
#line 701 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) unsigned long __cdecl _wcstoul_l(const __wchar_t * _Str, __wchar_t ** _EndPtr, int _Radix, _locale_t _Locale); } 
#line 702 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) unsigned __int64 __cdecl wcstoull(const __wchar_t * _Str, __wchar_t ** _EndPtr, int _Radix); } 
#line 703 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) unsigned __int64 __cdecl _wcstoull_l(const __wchar_t * _Str, __wchar_t ** _EndPtr, int _Radix, _locale_t _Locale); } 
#line 704 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) long double __cdecl wcstold(const __wchar_t * _Str, __wchar_t ** _EndPtr); } 
#line 705 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) long double __cdecl _wcstold_l(const __wchar_t * _Str, __wchar_t ** _EndPtr, _locale_t _Locale); } 
#line 706 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) float __cdecl wcstof(const __wchar_t * _Str, __wchar_t ** _EndPtr); } 
#line 707 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) float __cdecl _wcstof_l(const __wchar_t * _Str, __wchar_t ** _EndPtr, _locale_t _Locale); } 
#line 711 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) __wchar_t *__cdecl _wgetenv(const __wchar_t * _VarName); } 
#line 712 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _wgetenv_s(size_t * _ReturnSize, __wchar_t * _DstBuf, size_t _DstSizeInWords, const __wchar_t * _VarName); } 
#line 713 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
template < size_t _Size > inline errno_t __cdecl _wgetenv_s ( size_t * _ReturnSize, wchar_t ( & _Dest ) [ _Size ], const wchar_t * _VarName ) throw ( ) { return _wgetenv_s ( _ReturnSize, _Dest, _Size, _VarName ); }
#line 720 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _wdupenv_s(__wchar_t ** _Buffer, size_t * _BufferSizeInWords, const __wchar_t * _VarName); } 
#line 728 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) int __cdecl _wsystem(const __wchar_t * _Command); } 
#line 733 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) double __cdecl _wtof(const __wchar_t * _Str); } 
#line 734 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) double __cdecl _wtof_l(const __wchar_t * _Str, _locale_t _Locale); } 
#line 735 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) int __cdecl _wtoi(const __wchar_t * _Str); } 
#line 736 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) int __cdecl _wtoi_l(const __wchar_t * _Str, _locale_t _Locale); } 
#line 737 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) long __cdecl _wtol(const __wchar_t * _Str); } 
#line 738 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) long __cdecl _wtol_l(const __wchar_t * _Str, _locale_t _Locale); } 
#line 739 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) __int64 __cdecl _wtoll(const __wchar_t * _Str); } 
#line 740 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) __int64 __cdecl _wtoll_l(const __wchar_t * _Str, _locale_t _Locale); } 
#line 742 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _i64tow_s(__int64 _Val, __wchar_t * _DstBuf, size_t _SizeInWords, int _Radix); } 
#line 743 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) __wchar_t *__cdecl _i64tow(__int64 _Val, __wchar_t * _DstBuf, int _Radix); } 
#line 744 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _ui64tow_s(unsigned __int64 _Val, __wchar_t * _DstBuf, size_t _SizeInWords, int _Radix); } 
#line 745 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) __wchar_t *__cdecl _ui64tow(unsigned __int64 _Val, __wchar_t * _DstBuf, int _Radix); } 
#line 746 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) __int64 __cdecl _wtoi64(const __wchar_t * _Str); } 
#line 747 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) __int64 __cdecl _wtoi64_l(const __wchar_t * _Str, _locale_t _Locale); } 
#line 748 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) __int64 __cdecl _wcstoi64(const __wchar_t * _Str, __wchar_t ** _EndPtr, int _Radix); } 
#line 749 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) __int64 __cdecl _wcstoi64_l(const __wchar_t * _Str, __wchar_t ** _EndPtr, int _Radix, _locale_t _Locale); } 
#line 750 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) unsigned __int64 __cdecl _wcstoui64(const __wchar_t * _Str, __wchar_t ** _EndPtr, int _Radix); } 
#line 751 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) unsigned __int64 __cdecl _wcstoui64_l(const __wchar_t * _Str, __wchar_t ** _EndPtr, int _Radix, _locale_t _Locale); } 
#line 770 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) char *__cdecl _fullpath(char * _FullPath, const char * _Path, size_t _SizeInBytes); } 
#line 778 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _ecvt_s(char * _DstBuf, size_t _Size, double _Val, int _NumOfDights, int * _PtDec, int * _PtSign); } 
#line 779 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
template < size_t _Size > inline errno_t __cdecl _ecvt_s ( char ( & _Dest ) [ _Size ], double _Value, int _NumOfDigits, int * _PtDec, int * _PtSign ) throw ( ) { return _ecvt_s ( _Dest, _Size, _Value, _NumOfDigits, _PtDec, _PtSign ); }
#line 780 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) char *__cdecl _ecvt(double _Val, int _NumOfDigits, int * _PtDec, int * _PtSign); } 
#line 781 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _fcvt_s(char * _DstBuf, size_t _Size, double _Val, int _NumOfDec, int * _PtDec, int * _PtSign); } 
#line 782 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
template < size_t _Size > inline errno_t __cdecl _fcvt_s ( char ( & _Dest ) [ _Size ], double _Value, int _NumOfDigits, int * _PtDec, int * _PtSign ) throw ( ) { return _fcvt_s ( _Dest, _Size, _Value, _NumOfDigits, _PtDec, _PtSign ); }
#line 783 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) char *__cdecl _fcvt(double _Val, int _NumOfDec, int * _PtDec, int * _PtSign); } 
#line 784 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _gcvt_s(char * _DstBuf, size_t _Size, double _Val, int _NumOfDigits); } 
#line 785 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
template < size_t _Size > inline errno_t __cdecl _gcvt_s ( char ( & _Dest ) [ _Size ], double _Value, int _NumOfDigits ) throw ( ) { return _gcvt_s ( _Dest, _Size, _Value, _NumOfDigits ); }
#line 786 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) char *__cdecl _gcvt(double _Val, int _NumOfDigits, char * _DstBuf); } 
#line 788 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) int __cdecl _atodbl(_CRT_DOUBLE * _Result, char * _Str); } 
#line 789 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) int __cdecl _atoldbl(_LDOUBLE * _Result, char * _Str); } 
#line 790 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) int __cdecl _atoflt(_CRT_FLOAT * _Result, const char * _Str); } 
#line 791 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) int __cdecl _atodbl_l(_CRT_DOUBLE * _Result, char * _Str, _locale_t _Locale); } 
#line 792 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) int __cdecl _atoldbl_l(_LDOUBLE * _Result, char * _Str, _locale_t _Locale); } 
#line 793 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) int __cdecl _atoflt_l(_CRT_FLOAT * _Result, const char * _Str, _locale_t _Locale); } 
#line 794 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { unsigned long __cdecl _lrotl(unsigned long _Val, int _Shift); } 
#line 795 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { unsigned long __cdecl _lrotr(unsigned long _Val, int _Shift); } 
#line 796 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _makepath_s(char * _PathResult, size_t _SizeInWords, const char * _Drive, const char * _Dir, const char * _Filename, const char * _Ext); } 
#line 798 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
template < size_t _Size > inline errno_t __cdecl _makepath_s ( char ( & _Path ) [ _Size ], const char * _Drive, const char * _Dir, const char * _Filename, const char * _Ext ) throw ( ) { return _makepath_s ( _Path, _Size, _Drive, _Dir, _Filename, _Ext ); }
#line 799 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) void __cdecl _makepath(char * _Path, const char * _Drive, const char * _Dir, const char * _Filename, const char * _Ext); } 
#line 826 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { _onexit_t __cdecl _onexit(_onexit_t _Func); } 
#line 831 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) void __cdecl perror(const char * _ErrMsg); } 
#line 834 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
#pragma warning (push)
#pragma warning (disable:6540)
#line 838 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) int __cdecl _putenv(const char * _EnvString); } 
#line 839 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _putenv_s(const char * _Name, const char * _Value); } 
#line 842 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { unsigned __cdecl _rotl(unsigned _Val, int _Shift); } 
#line 843 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { unsigned __int64 __cdecl _rotl64(unsigned __int64 _Val, int _Shift); } 
#line 844 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { unsigned __cdecl _rotr(unsigned _Val, int _Shift); } 
#line 845 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { unsigned __int64 __cdecl _rotr64(unsigned __int64 _Val, int _Shift); } 
#pragma warning (pop)
#line 849 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _searchenv_s(const char * _Filename, const char * _EnvVar, char * _ResultPath, size_t _SizeInBytes); } 
#line 850 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
template < size_t _Size > inline errno_t __cdecl _searchenv_s ( const char * _Filename, const char * _EnvVar, char ( & _ResultPath ) [ _Size ] ) throw ( ) { return _searchenv_s ( _Filename, _EnvVar, _ResultPath, _Size ); }
#line 851 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) void __cdecl _searchenv(const char * _Filename, const char * _EnvVar, char * _ResultPath); } 
#line 854 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) void __cdecl _splitpath(const char * _FullPath, char * _Drive, char * _Dir, char * _Filename, char * _Ext); } 
#line 855 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _splitpath_s(const char * _FullPath, char * _Drive, size_t _DriveSize, char * _Dir, size_t _DirSize, char * _Filename, size_t _FilenameSize, char * _Ext, size_t _ExtSize); } 
#line 860 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
template < size_t _DriveSize, size_t _DirSize, size_t _NameSize, size_t _ExtSize > inline errno_t __cdecl _splitpath_s ( const char * _Dest, char ( & _Drive ) [ _DriveSize ], char ( & _Dir ) [ _DirSize ], char ( & _Name ) [ _NameSize ], char ( & _Ext ) [ _ExtSize ] ) throw ( ) { return _splitpath_s ( _Dest, _Drive, _DriveSize, _Dir, _DirSize, _Name, _NameSize, _Ext, _ExtSize ); }
#line 862 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) void __cdecl _swab(char * _Buf1, char * _Buf2, int _SizeInBytes); } 
#line 873 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) __wchar_t *__cdecl _wfullpath(__wchar_t * _FullPath, const __wchar_t * _Path, size_t _SizeInWords); } 
#line 879 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _wmakepath_s(__wchar_t * _PathResult, size_t _SIZE, const __wchar_t * _Drive, const __wchar_t * _Dir, const __wchar_t * _Filename, const __wchar_t * _Ext); } 
#line 881 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
template < size_t _Size > inline errno_t __cdecl _wmakepath_s ( wchar_t ( & _ResultPath ) [ _Size ], const wchar_t * _Drive, const wchar_t * _Dir, const wchar_t * _Filename, const wchar_t * _Ext ) throw ( ) { return _wmakepath_s ( _ResultPath, _Size, _Drive, _Dir, _Filename, _Ext ); }
#line 882 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) void __cdecl _wmakepath(__wchar_t * _ResultPath, const __wchar_t * _Drive, const __wchar_t * _Dir, const __wchar_t * _Filename, const __wchar_t * _Ext); } 
#line 885 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) void __cdecl _wperror(const __wchar_t * _ErrMsg); } 
#line 889 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) int __cdecl _wputenv(const __wchar_t * _EnvString); } 
#line 890 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _wputenv_s(const __wchar_t * _Name, const __wchar_t * _Value); } 
#line 891 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _wsearchenv_s(const __wchar_t * _Filename, const __wchar_t * _EnvVar, __wchar_t * _ResultPath, size_t _SizeInWords); } 
#line 892 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
template < size_t _Size > inline errno_t __cdecl _wsearchenv_s ( const wchar_t * _Filename, const wchar_t * _EnvVar, wchar_t ( & _ResultPath ) [ _Size ] ) throw ( ) { return _wsearchenv_s ( _Filename, _EnvVar, _ResultPath, _Size ); }
#line 893 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) void __cdecl _wsearchenv(const __wchar_t * _Filename, const __wchar_t * _EnvVar, __wchar_t * _ResultPath); } 
#line 896 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) void __cdecl _wsplitpath(const __wchar_t * _FullPath, __wchar_t * _Drive, __wchar_t * _Dir, __wchar_t * _Filename, __wchar_t * _Ext); } 
#line 897 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _wsplitpath_s(const __wchar_t * _FullPath, __wchar_t * _Drive, size_t _DriveSize, __wchar_t * _Dir, size_t _DirSize, __wchar_t * _Filename, size_t _FilenameSize, __wchar_t * _Ext, size_t _ExtSize); } 
#line 902 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
template < size_t _DriveSize, size_t _DirSize, size_t _NameSize, size_t _ExtSize > inline errno_t __cdecl _wsplitpath_s ( const wchar_t * _Path, wchar_t ( & _Drive ) [ _DriveSize ], wchar_t ( & _Dir ) [ _DirSize ], wchar_t ( & _Name ) [ _NameSize ], wchar_t ( & _Ext ) [ _ExtSize ] ) throw ( ) { return _wsplitpath_s ( _Path, _Drive, _DriveSize, _Dir, _DirSize, _Name, _NameSize, _Ext, _ExtSize ); }
#line 909 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(deprecated("This function or variable has been superceded by newer library or operating system functionality. Consider using SetErrorMode in" "stead. See online help for details.")) __declspec(dllimport) void __cdecl _seterrormode(int _Mode); } 
#line 910 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(deprecated("This function or variable has been superceded by newer library or operating system functionality. Consider using Beep instead. S" "ee online help for details.")) __declspec(dllimport) void __cdecl _beep(unsigned _Frequency, unsigned _Duration); } 
#line 911 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(deprecated("This function or variable has been superceded by newer library or operating system functionality. Consider using Sleep instead. " "See online help for details.")) __declspec(dllimport) void __cdecl _sleep(unsigned long _Duration); } 
#line 932 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
#pragma warning(push)
#pragma warning(disable: 4141)
extern "C" { __declspec(dllimport) char *__cdecl ecvt(double _Val, int _NumOfDigits, int * _PtDec, int * _PtSign); } 
#line 935 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) char *__cdecl fcvt(double _Val, int _NumOfDec, int * _PtDec, int * _PtSign); } 
#line 936 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) char *__cdecl gcvt(double _Val, int _NumOfDigits, char * _DstBuf); } 
#line 937 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) char *__cdecl itoa(int _Val, char * _DstBuf, int _Radix); } 
#line 938 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) char *__cdecl ltoa(long _Val, char * _DstBuf, int _Radix); } 
#line 941 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) int __cdecl putenv(const char * _EnvString); } 
#line 944 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) void __cdecl swab(char * _Buf1, char * _Buf2, int _SizeInBytes); } 
#line 945 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) char *__cdecl ultoa(unsigned long _Val, char * _Dstbuf, int _Radix); } 
#pragma warning(pop)
extern "C" { _onexit_t __cdecl onexit(_onexit_t _Func); } 
#line 205 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\yvals.h"
#pragma detect_mismatch("_MSC_VER", "1800")
#line 209 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\yvals.h"
#pragma detect_mismatch("_ITERATOR_DEBUG_LEVEL", "2")
#line 220 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\yvals.h"
#pragma detect_mismatch("RuntimeLibrary", "MDd_DynamicDebug")
#line 57 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\use_ansi.h"
#pragma comment(lib, "msvcprtd")
#line 957 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
#pragma pack ( pop )
#line 10 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\yvals.h"
#pragma pack ( push, 8 )
#line 568 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\yvals.h"
namespace std { 
#line 569 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\yvals.h"
typedef bool _Bool; 
#line 570 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\yvals.h"
}
#line 586 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\yvals.h"
typedef __int64 _Longlong; 
#line 587 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\yvals.h"
typedef unsigned __int64 _ULonglong; 
#line 605 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\yvals.h"
typedef unsigned short char16_t; 
#line 606 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\yvals.h"
typedef unsigned char32_t; 
#line 619 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\yvals.h"
namespace std { 
#line 620 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\yvals.h"
enum _Uninitialized { 
#line 622 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\yvals.h"
_Noinit
#line 623 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\yvals.h"
}; 
#line 627 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\yvals.h"
#pragma warning(push)
#pragma warning(disable:4412)
class __declspec(dllimport) _Lockit { 
#line 652 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\yvals.h"
public: __thiscall _Lockit(); 
#line 653 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\yvals.h"
explicit __thiscall _Lockit(int); 
#line 654 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\yvals.h"
__thiscall ~_Lockit() throw(); 
#line 657 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\yvals.h"
static void __cdecl _Lockit_ctor(int); 
#line 658 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\yvals.h"
static void __cdecl _Lockit_dtor(int); 
#line 661 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\yvals.h"
private: static void __cdecl _Lockit_ctor(_Lockit *); 
#line 662 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\yvals.h"
static void __cdecl _Lockit_ctor(_Lockit *, int); 
#line 663 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\yvals.h"
static void __cdecl _Lockit_dtor(_Lockit *); 
#line 666 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\yvals.h"
public: _Lockit(const _Lockit &) = delete;
#line 667 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\yvals.h"
_Lockit &operator=(const _Lockit &) = delete;
#line 670 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\yvals.h"
private: int _Locktype; 
#line 685 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\yvals.h"
}; 
#line 772 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\yvals.h"
class __declspec(dllimport) _Init_locks { 
#line 788 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\yvals.h"
public: __thiscall _Init_locks(); 
#line 789 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\yvals.h"
__thiscall ~_Init_locks() throw(); 
#line 793 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\yvals.h"
private: static void __cdecl _Init_locks_ctor(_Init_locks *); 
#line 794 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\yvals.h"
static void __cdecl _Init_locks_dtor(_Init_locks *); 
#line 805 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\yvals.h"
}; 
#line 807 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\yvals.h"
#pragma warning(pop)
}
#line 817 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\yvals.h"
__declspec(dllimport) void __cdecl _Atexit(void (__cdecl *)(void)); 
#line 819 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\yvals.h"
typedef int _Mbstatet; 
#line 820 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\yvals.h"
typedef unsigned long _Uint32t; 
#line 9 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
#pragma warning(push,3)
#line 829 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\yvals.h"
#pragma pack ( pop )
#line 8 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
#pragma pack ( push, 8 )
#line 13 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
namespace std { 
#line 15 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
template< class _T1, class 
#line 16 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
_Ret> struct unary_function; 
#line 20 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
template< class _T1, class 
#line 21 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
_T2, class 
#line 22 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
_Ret> struct binary_function; 
#line 26 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
struct _Nil { 
#line 28 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
}; 
#line 29 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
static _Nil _Nil_obj; 
#line 32 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
template < class _Ty,
 _Ty _Val >
 struct integral_constant
 {
 static const _Ty value = _Val;

 typedef _Ty value_type;
 typedef integral_constant < _Ty, _Val > type;

 operator value_type ( ) const
  {
  return ( value );
  }
 };
#line 47 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
typedef integral_constant< bool, true>  true_type; 
#line 48 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
typedef integral_constant< bool, false>  false_type; 
#line 51 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
template< bool > 
#line 52 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
struct _Cat_base : public false_type { 
#line 55 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
}; 
#line 58 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
template<> struct _Cat_base< true>  : public true_type { 
#line 61 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
}; 
#line 64 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
template< bool _Test, class 
#line 65 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
_Ty = void> 
#line 66 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
struct enable_if { 
#line 68 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
}; 
#line 70 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
template< class _Ty> 
#line 71 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
struct enable_if< true, _Ty>  { 
#line 73 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
typedef _Ty type; 
#line 74 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
}; 
#line 77 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
template< bool _Test, class 
#line 78 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
_Ty1, class 
#line 79 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
_Ty2> 
#line 80 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
struct conditional { 
#line 82 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
typedef _Ty2 type; 
#line 83 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
}; 
#line 85 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
template< class _Ty1, class 
#line 86 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
_Ty2> 
#line 87 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
struct conditional< true, _Ty1, _Ty2>  { 
#line 89 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
typedef _Ty1 type; 
#line 90 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
}; 
#line 93 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
template< class _Ty1, class _Ty2> 
#line 94 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
struct is_same : public false_type { 
#line 97 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
}; 
#line 99 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
template< class _Ty1> 
#line 100 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
struct is_same< _Ty1, _Ty1>  : public true_type { 
#line 103 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
}; 
#line 106 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
template< class _Ty> 
#line 107 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
struct remove_const { 
#line 109 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
typedef _Ty type; 
#line 110 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
}; 
#line 112 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
template< class _Ty> 
#line 113 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
struct remove_const< const _Ty>  { 
#line 115 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
typedef _Ty type; 
#line 116 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
}; 
#line 118 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
template< class _Ty> 
#line 119 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
struct remove_const< const _Ty []>  { 
#line 121 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
typedef _Ty type[]; 
#line 122 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
}; 
#line 124 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
template< class _Ty, unsigned _Nx> 
#line 125 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
struct remove_const< const _Ty [_Nx]>  { 
#line 127 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
typedef _Ty type[_Nx]; 
#line 128 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
}; 
#line 131 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
template< class _Ty> 
#line 132 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
struct remove_volatile { 
#line 134 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
typedef _Ty type; 
#line 135 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
}; 
#line 137 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
template< class _Ty> 
#line 138 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
struct remove_volatile< volatile _Ty>  { 
#line 140 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
typedef _Ty type; 
#line 141 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
}; 
#line 143 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
template< class _Ty> 
#line 144 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
struct remove_volatile< volatile _Ty []>  { 
#line 146 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
typedef _Ty type[]; 
#line 147 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
}; 
#line 149 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
template< class _Ty, unsigned _Nx> 
#line 150 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
struct remove_volatile< volatile _Ty [_Nx]>  { 
#line 152 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
typedef _Ty type[_Nx]; 
#line 153 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
}; 
#line 156 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
template< class _Ty> 
#line 157 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
struct remove_cv { 
#line 160 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
typedef typename remove_const< typename remove_volatile< _Ty> ::type> ::type type; 
#line 161 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
}; 
#line 164 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
template< class _Ty> 
#line 165 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
struct _Is_integral : public false_type { 
#line 168 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
}; 
#line 171 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
template<> struct _Is_integral< bool>  : public true_type { 
#line 174 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
}; 
#line 177 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
template<> struct _Is_integral< char>  : public true_type { 
#line 180 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
}; 
#line 183 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
template<> struct _Is_integral< unsigned char>  : public true_type { 
#line 186 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
}; 
#line 189 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
template<> struct _Is_integral< signed char>  : public true_type { 
#line 192 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
}; 
#line 196 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
template<> struct _Is_integral< __wchar_t>  : public true_type { 
#line 199 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
}; 
#line 203 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
template<> struct _Is_integral< unsigned short>  : public true_type { 
#line 206 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
}; 
#line 209 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
template<> struct _Is_integral< signed short>  : public true_type { 
#line 212 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
}; 
#line 215 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
template<> struct _Is_integral< unsigned>  : public true_type { 
#line 218 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
}; 
#line 221 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
template<> struct _Is_integral< signed int>  : public true_type { 
#line 224 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
}; 
#line 227 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
template<> struct _Is_integral< unsigned long>  : public true_type { 
#line 230 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
}; 
#line 233 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
template<> struct _Is_integral< signed long>  : public true_type { 
#line 236 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
}; 
#line 254 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
template<> struct _Is_integral< __int64>  : public true_type { 
#line 257 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
}; 
#line 260 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
template<> struct _Is_integral< unsigned __int64>  : public true_type { 
#line 263 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
}; 
#line 267 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
template< class _Ty> 
#line 268 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
struct is_integral : public _Is_integral< typename remove_cv< _Ty> ::type>  { 
#line 271 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
}; 
#line 274 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
template< class _Ty> 
#line 275 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
struct _Is_floating_point : public false_type { 
#line 278 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
}; 
#line 281 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
template<> struct _Is_floating_point< float>  : public true_type { 
#line 284 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
}; 
#line 287 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
template<> struct _Is_floating_point< double>  : public true_type { 
#line 290 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
}; 
#line 293 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
template<> struct _Is_floating_point< long double>  : public true_type { 
#line 296 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
}; 
#line 299 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
template< class _Ty> 
#line 300 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
struct is_floating_point : public _Is_floating_point< typename remove_cv< _Ty> ::type>  { 
#line 303 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
}; 
#line 305 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
template< class _Ty> 
#line 306 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
struct _Is_numeric : public _Cat_base< is_integral< _Ty> ::value || is_floating_point< _Ty> ::value>  { 
#line 310 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
}; 
#line 313 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
template< class _Ty> 
#line 314 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
struct remove_reference { 
#line 316 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
typedef _Ty type; 
#line 317 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
}; 
#line 319 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
template< class _Ty> 
#line 320 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
struct remove_reference< _Ty &>  { 
#line 322 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
typedef _Ty type; 
#line 323 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
}; 
#line 325 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
template< class _Ty> 
#line 326 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
struct remove_reference< _Ty &&>  { 
#line 328 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
typedef _Ty type; 
#line 329 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
}; 
#line 332 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
template< class _Tgt, class 
#line 333 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
_Src> 
#line 334 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
struct _Copy_cv { 
#line 336 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
typedef typename remove_reference< _Tgt> ::type _Tgtx; 
#line 337 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
typedef _Tgtx &type; 
#line 338 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
}; 
#line 340 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
template< class _Tgt, class 
#line 341 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
_Src> 
#line 342 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
struct _Copy_cv< _Tgt, const _Src>  { 
#line 344 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
typedef typename remove_reference< _Tgt> ::type _Tgtx; 
#line 345 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
typedef const _Tgtx &type; 
#line 346 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
}; 
#line 348 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
template< class _Tgt, class 
#line 349 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
_Src> 
#line 350 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
struct _Copy_cv< _Tgt, volatile _Src>  { 
#line 352 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
typedef typename remove_reference< _Tgt> ::type _Tgtx; 
#line 353 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
typedef volatile _Tgtx &type; 
#line 354 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
}; 
#line 356 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
template< class _Tgt, class 
#line 357 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
_Src> 
#line 358 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
struct _Copy_cv< _Tgt, const volatile _Src>  { 
#line 360 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
typedef typename remove_reference< _Tgt> ::type _Tgtx; 
#line 361 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
typedef const volatile _Tgtx &type; 
#line 362 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
}; 
#line 364 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
template< class _Tgt, class 
#line 365 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
_Src> 
#line 366 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
struct _Copy_cv< _Tgt, _Src &>  { 
#line 368 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
typedef typename std::_Copy_cv< _Tgt, _Src> ::type type; 
#line 369 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
}; 
#line 372 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
struct _Wrap_int { 
#line 374 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
_Wrap_int(int) 
#line 375 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
{ 
#line 376 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
} 
#line 377 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
}; 
#line 379 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
template< class _Ty> 
#line 380 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
struct _Identity { 
#line 382 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
typedef _Ty type; 
#line 383 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
}; 
#line 419 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
template< class _Ty> 
#line 420 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
struct _Has_result_type { 
#line 421 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
template< class _Uty> static auto _Fn(int, _Identity< typename _Uty::result_type>  * = 0, _Identity< typename _Uty::result_type>  * = 0, _Identity< typename _Uty::result_type>  * = 0)->true_type; template< class _Uty> static auto _Fn(_Wrap_int)->false_type; typedef decltype((_Fn< _Ty> (0))) type; }; 
#line 422 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
}
#line 424 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
#pragma warning(pop)
#line 11 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
#pragma warning(push,3)
#line 425 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
#pragma pack ( pop )
#line 10 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
#pragma pack ( push, 8 )
#line 15 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
namespace std { 
#line 16 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
template< class _Ty> 
#line 17 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
struct _Promote_to_float { 
#line 20 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
typedef typename conditional< is_integral< _Ty> ::value, double, _Ty> ::type type; 
#line 21 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
}; 
#line 23 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
template< class _Ty1, class 
#line 24 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
_Ty2> 
#line 25 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
struct _Common_float_type { 
#line 27 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
typedef typename _Promote_to_float< _Ty1> ::type _Ty1f; 
#line 28 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
typedef typename _Promote_to_float< _Ty2> ::type _Ty2f; 
#line 33 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
typedef typename conditional< is_same< typename _Promote_to_float< _Ty1> ::type, long double> ::value || is_same< typename _Promote_to_float< _Ty2> ::type, long double> ::value, long double, typename conditional< is_same< typename _Promote_to_float< _Ty1> ::type, double> ::value || is_same< typename _Promote_to_float< _Ty2> ::type, double> ::value, double, float> ::type> ::type type; 
#line 34 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
}; 
#line 35 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
}
#line 75 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
extern "C" double __cdecl pow(double, double); 
#line 76 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
inline float __cdecl pow(float, float) throw(); 
#line 77 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
inline long double __cdecl pow(long double, long double) throw(); 
#line 79 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
template < class _Ty1,
 class _Ty2 > inline
 typename :: std :: enable_if < :: std :: _Is_numeric < _Ty1 > :: value
  && :: std :: _Is_numeric < _Ty2 > :: value,
  typename :: std :: _Common_float_type < _Ty1, _Ty2 > :: type > :: type
 pow ( const _Ty1 _Left, const _Ty2 _Right )
 {
 typedef typename :: std :: _Common_float_type < _Ty1, _Ty2 > :: type type;
 return ( :: pow ( type ( _Left ), type ( _Right ) ) );
 }
#line 91 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
extern "C" double __cdecl acos(double); template < class _Ty > inline typename :: std :: enable_if < :: std :: is_integral < _Ty > :: value, double > :: type acos ( _Ty _Left ) { return ( :: acos ( ( double ) _Left ) ); }
#line 92 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
extern "C" double __cdecl asin(double); template < class _Ty > inline typename :: std :: enable_if < :: std :: is_integral < _Ty > :: value, double > :: type asin ( _Ty _Left ) { return ( :: asin ( ( double ) _Left ) ); }
#line 93 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
extern "C" double __cdecl atan(double); template < class _Ty > inline typename :: std :: enable_if < :: std :: is_integral < _Ty > :: value, double > :: type atan ( _Ty _Left ) { return ( :: atan ( ( double ) _Left ) ); }
#line 94 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
extern "C" double __cdecl atan2(double, double); template < class _Ty1, class _Ty2 > inline typename :: std :: enable_if < :: std :: _Is_numeric < _Ty1 > :: value && :: std :: _Is_numeric < _Ty2 > :: value, typename :: std :: _Common_float_type < _Ty1, _Ty2 > :: type > :: type atan2 ( _Ty1 _Left, _Ty2 _Right ) { typedef typename :: std :: _Common_float_type < _Ty1, _Ty2 > :: type type; return ( :: atan2 ( ( type ) _Left, ( type ) _Right ) ); }
#line 95 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
extern "C" __declspec(dllimport) double __cdecl ceil(double); template < class _Ty > inline typename :: std :: enable_if < :: std :: is_integral < _Ty > :: value, double > :: type ceil ( _Ty _Left ) { return ( :: ceil ( ( double ) _Left ) ); }
#line 96 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
extern "C" double __cdecl cos(double); template < class _Ty > inline typename :: std :: enable_if < :: std :: is_integral < _Ty > :: value, double > :: type cos ( _Ty _Left ) { return ( :: cos ( ( double ) _Left ) ); }
#line 97 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
extern "C" double __cdecl cosh(double); template < class _Ty > inline typename :: std :: enable_if < :: std :: is_integral < _Ty > :: value, double > :: type cosh ( _Ty _Left ) { return ( :: cosh ( ( double ) _Left ) ); }
#line 98 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
extern "C" double __cdecl exp(double); template < class _Ty > inline typename :: std :: enable_if < :: std :: is_integral < _Ty > :: value, double > :: type exp ( _Ty _Left ) { return ( :: exp ( ( double ) _Left ) ); }
#line 100 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
extern "C" __declspec(dllimport) double __cdecl floor(double); template < class _Ty > inline typename :: std :: enable_if < :: std :: is_integral < _Ty > :: value, double > :: type floor ( _Ty _Left ) { return ( :: floor ( ( double ) _Left ) ); }
#line 101 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
extern "C" double __cdecl fmod(double, double); template < class _Ty1, class _Ty2 > inline typename :: std :: enable_if < :: std :: _Is_numeric < _Ty1 > :: value && :: std :: _Is_numeric < _Ty2 > :: value, typename :: std :: _Common_float_type < _Ty1, _Ty2 > :: type > :: type fmod ( _Ty1 _Left, _Ty2 _Right ) { typedef typename :: std :: _Common_float_type < _Ty1, _Ty2 > :: type type; return ( :: fmod ( ( type ) _Left, ( type ) _Right ) ); }
#line 102 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
extern "C" __declspec(dllimport) double __cdecl frexp(double, int *); template < class _Ty > inline typename :: std :: enable_if < :: std :: is_integral < _Ty > :: value, double > :: type frexp ( _Ty _Left, int * _Arg2 ) { return ( :: frexp ( ( double ) _Left, _Arg2 ) ); }
#line 103 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
extern "C" __declspec(dllimport) double __cdecl ldexp(double, int); template < class _Ty > inline typename :: std :: enable_if < :: std :: is_integral < _Ty > :: value, double > :: type ldexp ( _Ty _Left, int _Arg2 ) { return ( :: ldexp ( ( double ) _Left, _Arg2 ) ); }
#line 104 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
extern "C" double __cdecl log(double); template < class _Ty > inline typename :: std :: enable_if < :: std :: is_integral < _Ty > :: value, double > :: type log ( _Ty _Left ) { return ( :: log ( ( double ) _Left ) ); }
#line 105 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
extern "C" double __cdecl log10(double); template < class _Ty > inline typename :: std :: enable_if < :: std :: is_integral < _Ty > :: value, double > :: type log10 ( _Ty _Left ) { return ( :: log10 ( ( double ) _Left ) ); }
#line 108 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
extern "C" double __cdecl sin(double); template < class _Ty > inline typename :: std :: enable_if < :: std :: is_integral < _Ty > :: value, double > :: type sin ( _Ty _Left ) { return ( :: sin ( ( double ) _Left ) ); }
#line 109 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
extern "C" double __cdecl sinh(double); template < class _Ty > inline typename :: std :: enable_if < :: std :: is_integral < _Ty > :: value, double > :: type sinh ( _Ty _Left ) { return ( :: sinh ( ( double ) _Left ) ); }
#line 110 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
extern "C" double __cdecl sqrt(double); template < class _Ty > inline typename :: std :: enable_if < :: std :: is_integral < _Ty > :: value, double > :: type sqrt ( _Ty _Left ) { return ( :: sqrt ( ( double ) _Left ) ); }
#line 111 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
extern "C" double __cdecl tan(double); template < class _Ty > inline typename :: std :: enable_if < :: std :: is_integral < _Ty > :: value, double > :: type tan ( _Ty _Left ) { return ( :: tan ( ( double ) _Left ) ); }
#line 112 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
extern "C" double __cdecl tanh(double); template < class _Ty > inline typename :: std :: enable_if < :: std :: is_integral < _Ty > :: value, double > :: type tanh ( _Ty _Left ) { return ( :: tanh ( ( double ) _Left ) ); }
#line 124 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
inline float _Fma(float _Left, float _Middle, float _Right) 
#line 125 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
{ 
#line 126 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
return ::fmaf(_Left, _Middle, _Right); 
#line 127 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
} 
#line 129 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
inline double _Fma(double _Left, double _Middle, double _Right) 
#line 130 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
{ 
#line 131 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
return ::fma(_Left, _Middle, _Right); 
#line 132 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
} 
#line 134 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
inline long double _Fma(long double _Left, long double _Middle, long double _Right) 
#line 135 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
{ 
#line 136 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
return ::fmal(_Left, _Middle, _Right); 
#line 137 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
} 
#line 139 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
template < class _Ty1,
 class _Ty2,
 class _Ty3 > inline
 typename :: std :: _Common_float_type < _Ty1,
  typename :: std :: _Common_float_type < _Ty2, _Ty3 > :: type > :: type
 fma ( _Ty1 _Left, _Ty2 _Middle, _Ty3 _Right )
 {
 typedef typename :: std :: _Common_float_type < _Ty1,
  typename :: std :: _Common_float_type < _Ty2, _Ty3 > :: type > :: type type;
 return ( _Fma ( ( type ) _Left, ( type ) _Middle, ( type ) _Right ) );
 }
#line 152 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
inline float _Remquo(float _Left, float _Right, int *_Pquo) 
#line 153 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
{ 
#line 154 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
return ::remquof(_Left, _Right, _Pquo); 
#line 155 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
} 
#line 157 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
inline double _Remquo(double _Left, double _Right, int *_Pquo) 
#line 158 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
{ 
#line 159 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
return ::remquo(_Left, _Right, _Pquo); 
#line 160 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
} 
#line 162 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
inline long double _Remquo(long double _Left, long double _Right, int *_Pquo) 
#line 163 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
{ 
#line 164 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
return ::remquol(_Left, _Right, _Pquo); 
#line 165 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
} 
#line 167 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
template < class _Ty1,
 class _Ty2 > inline
 typename :: std :: _Common_float_type < _Ty1, _Ty2 > :: type
 remquo ( _Ty1 _Left, _Ty2 _Right, int * _Pquo )
 {
 typedef typename :: std :: _Common_float_type < _Ty1, _Ty2 > :: type type;
 return ( _Remquo ( ( type ) _Left, ( type ) _Right, _Pquo ) );
 }
#line 176 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
extern "C" __declspec(dllimport) double __cdecl acosh(double); template < class _Ty > inline typename :: std :: enable_if < :: std :: is_integral < _Ty > :: value, double > :: type acosh ( _Ty _Left ) { return ( :: acosh ( ( double ) _Left ) ); }
#line 177 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
extern "C" __declspec(dllimport) double __cdecl asinh(double); template < class _Ty > inline typename :: std :: enable_if < :: std :: is_integral < _Ty > :: value, double > :: type asinh ( _Ty _Left ) { return ( :: asinh ( ( double ) _Left ) ); }
#line 178 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
extern "C" __declspec(dllimport) double __cdecl atanh(double); template < class _Ty > inline typename :: std :: enable_if < :: std :: is_integral < _Ty > :: value, double > :: type atanh ( _Ty _Left ) { return ( :: atanh ( ( double ) _Left ) ); }
#line 179 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
extern "C" __declspec(dllimport) double __cdecl cbrt(double); template < class _Ty > inline typename :: std :: enable_if < :: std :: is_integral < _Ty > :: value, double > :: type cbrt ( _Ty _Left ) { return ( :: cbrt ( ( double ) _Left ) ); }
#line 180 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
extern "C" __declspec(dllimport) double __cdecl copysign(double, double); template < class _Ty1, class _Ty2 > inline typename :: std :: enable_if < :: std :: _Is_numeric < _Ty1 > :: value && :: std :: _Is_numeric < _Ty2 > :: value, typename :: std :: _Common_float_type < _Ty1, _Ty2 > :: type > :: type copysign ( _Ty1 _Left, _Ty2 _Right ) { typedef typename :: std :: _Common_float_type < _Ty1, _Ty2 > :: type type; return ( :: copysign ( ( type ) _Left, ( type ) _Right ) ); }
#line 181 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
extern "C" __declspec(dllimport) double __cdecl erf(double); template < class _Ty > inline typename :: std :: enable_if < :: std :: is_integral < _Ty > :: value, double > :: type erf ( _Ty _Left ) { return ( :: erf ( ( double ) _Left ) ); }
#line 182 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
extern "C" __declspec(dllimport) double __cdecl erfc(double); template < class _Ty > inline typename :: std :: enable_if < :: std :: is_integral < _Ty > :: value, double > :: type erfc ( _Ty _Left ) { return ( :: erfc ( ( double ) _Left ) ); }
#line 183 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
extern "C" __declspec(dllimport) double __cdecl expm1(double); template < class _Ty > inline typename :: std :: enable_if < :: std :: is_integral < _Ty > :: value, double > :: type expm1 ( _Ty _Left ) { return ( :: expm1 ( ( double ) _Left ) ); }
#line 184 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
extern "C" __declspec(dllimport) double __cdecl exp2(double); template < class _Ty > inline typename :: std :: enable_if < :: std :: is_integral < _Ty > :: value, double > :: type exp2 ( _Ty _Left ) { return ( :: exp2 ( ( double ) _Left ) ); }
#line 186 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
extern "C" __declspec(dllimport) double __cdecl fdim(double, double); template < class _Ty1, class _Ty2 > inline typename :: std :: enable_if < :: std :: _Is_numeric < _Ty1 > :: value && :: std :: _Is_numeric < _Ty2 > :: value, typename :: std :: _Common_float_type < _Ty1, _Ty2 > :: type > :: type fdim ( _Ty1 _Left, _Ty2 _Right ) { typedef typename :: std :: _Common_float_type < _Ty1, _Ty2 > :: type type; return ( :: fdim ( ( type ) _Left, ( type ) _Right ) ); }
#line 188 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
extern "C" __declspec(dllimport) double __cdecl fmax(double, double); template < class _Ty1, class _Ty2 > inline typename :: std :: enable_if < :: std :: _Is_numeric < _Ty1 > :: value && :: std :: _Is_numeric < _Ty2 > :: value, typename :: std :: _Common_float_type < _Ty1, _Ty2 > :: type > :: type fmax ( _Ty1 _Left, _Ty2 _Right ) { typedef typename :: std :: _Common_float_type < _Ty1, _Ty2 > :: type type; return ( :: fmax ( ( type ) _Left, ( type ) _Right ) ); }
#line 189 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
extern "C" __declspec(dllimport) double __cdecl fmin(double, double); template < class _Ty1, class _Ty2 > inline typename :: std :: enable_if < :: std :: _Is_numeric < _Ty1 > :: value && :: std :: _Is_numeric < _Ty2 > :: value, typename :: std :: _Common_float_type < _Ty1, _Ty2 > :: type > :: type fmin ( _Ty1 _Left, _Ty2 _Right ) { typedef typename :: std :: _Common_float_type < _Ty1, _Ty2 > :: type type; return ( :: fmin ( ( type ) _Left, ( type ) _Right ) ); }
#line 190 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
extern "C" __inline double __cdecl hypot(double, double); template < class _Ty1, class _Ty2 > inline typename :: std :: enable_if < :: std :: _Is_numeric < _Ty1 > :: value && :: std :: _Is_numeric < _Ty2 > :: value, typename :: std :: _Common_float_type < _Ty1, _Ty2 > :: type > :: type hypot ( _Ty1 _Left, _Ty2 _Right ) { typedef typename :: std :: _Common_float_type < _Ty1, _Ty2 > :: type type; return ( :: hypot ( ( type ) _Left, ( type ) _Right ) ); }
#line 191 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
extern "C" __declspec(dllimport) int __cdecl ilogb(double); template < class _Ty > inline typename :: std :: enable_if < :: std :: is_integral < _Ty > :: value, int > :: type ilogb ( _Ty _Left ) { return ( :: ilogb ( ( double ) _Left ) ); }
#line 192 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
extern "C" __declspec(dllimport) double __cdecl lgamma(double); template < class _Ty > inline typename :: std :: enable_if < :: std :: is_integral < _Ty > :: value, double > :: type lgamma ( _Ty _Left ) { return ( :: lgamma ( ( double ) _Left ) ); }
#line 193 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
extern "C" __declspec(dllimport) __int64 __cdecl llrint(double); template < class _Ty > inline typename :: std :: enable_if < :: std :: is_integral < _Ty > :: value, long long > :: type llrint ( _Ty _Left ) { return ( :: llrint ( ( double ) _Left ) ); }
#line 194 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
extern "C" __declspec(dllimport) __int64 __cdecl llround(double); template < class _Ty > inline typename :: std :: enable_if < :: std :: is_integral < _Ty > :: value, long long > :: type llround ( _Ty _Left ) { return ( :: llround ( ( double ) _Left ) ); }
#line 195 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
extern "C" __declspec(dllimport) double __cdecl log1p(double); template < class _Ty > inline typename :: std :: enable_if < :: std :: is_integral < _Ty > :: value, double > :: type log1p ( _Ty _Left ) { return ( :: log1p ( ( double ) _Left ) ); }
#line 196 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
extern "C" __declspec(dllimport) double __cdecl log2(double); template < class _Ty > inline typename :: std :: enable_if < :: std :: is_integral < _Ty > :: value, double > :: type log2 ( _Ty _Left ) { return ( :: log2 ( ( double ) _Left ) ); }
#line 197 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
extern "C" __declspec(dllimport) double __cdecl logb(double); template < class _Ty > inline typename :: std :: enable_if < :: std :: is_integral < _Ty > :: value, double > :: type logb ( _Ty _Left ) { return ( :: logb ( ( double ) _Left ) ); }
#line 198 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
extern "C" __declspec(dllimport) long __cdecl lrint(double); template < class _Ty > inline typename :: std :: enable_if < :: std :: is_integral < _Ty > :: value, long > :: type lrint ( _Ty _Left ) { return ( :: lrint ( ( double ) _Left ) ); }
#line 199 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
extern "C" __declspec(dllimport) long __cdecl lround(double); template < class _Ty > inline typename :: std :: enable_if < :: std :: is_integral < _Ty > :: value, long > :: type lround ( _Ty _Left ) { return ( :: lround ( ( double ) _Left ) ); }
#line 200 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
extern "C" __declspec(dllimport) double __cdecl nearbyint(double); template < class _Ty > inline typename :: std :: enable_if < :: std :: is_integral < _Ty > :: value, double > :: type nearbyint ( _Ty _Left ) { return ( :: nearbyint ( ( double ) _Left ) ); }
#line 201 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
extern "C" __declspec(dllimport) double __cdecl nextafter(double, double); template < class _Ty1, class _Ty2 > inline typename :: std :: enable_if < :: std :: _Is_numeric < _Ty1 > :: value && :: std :: _Is_numeric < _Ty2 > :: value, typename :: std :: _Common_float_type < _Ty1, _Ty2 > :: type > :: type nextafter ( _Ty1 _Left, _Ty2 _Right ) { typedef typename :: std :: _Common_float_type < _Ty1, _Ty2 > :: type type; return ( :: nextafter ( ( type ) _Left, ( type ) _Right ) ); }
#line 202 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
extern "C" __declspec(dllimport) double __cdecl nexttoward(double, long double); template < class _Ty > inline typename :: std :: enable_if < :: std :: is_integral < _Ty > :: value, double > :: type nexttoward ( _Ty _Left, long double _Arg2 ) { return ( :: nexttoward ( ( double ) _Left, _Arg2 ) ); }
#line 203 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
extern "C" __declspec(dllimport) double __cdecl remainder(double, double); template < class _Ty1, class _Ty2 > inline typename :: std :: enable_if < :: std :: _Is_numeric < _Ty1 > :: value && :: std :: _Is_numeric < _Ty2 > :: value, typename :: std :: _Common_float_type < _Ty1, _Ty2 > :: type > :: type remainder ( _Ty1 _Left, _Ty2 _Right ) { typedef typename :: std :: _Common_float_type < _Ty1, _Ty2 > :: type type; return ( :: remainder ( ( type ) _Left, ( type ) _Right ) ); }
#line 205 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
extern "C" __declspec(dllimport) double __cdecl rint(double); template < class _Ty > inline typename :: std :: enable_if < :: std :: is_integral < _Ty > :: value, double > :: type rint ( _Ty _Left ) { return ( :: rint ( ( double ) _Left ) ); }
#line 206 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
extern "C" __declspec(dllimport) double __cdecl round(double); template < class _Ty > inline typename :: std :: enable_if < :: std :: is_integral < _Ty > :: value, double > :: type round ( _Ty _Left ) { return ( :: round ( ( double ) _Left ) ); }
#line 207 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
extern "C" __declspec(dllimport) double __cdecl scalbln(double, long); template < class _Ty > inline typename :: std :: enable_if < :: std :: is_integral < _Ty > :: value, double > :: type scalbln ( _Ty _Left, long _Arg2 ) { return ( :: scalbln ( ( double ) _Left, _Arg2 ) ); }
#line 208 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
extern "C" __declspec(dllimport) double __cdecl scalbn(double, int); template < class _Ty > inline typename :: std :: enable_if < :: std :: is_integral < _Ty > :: value, double > :: type scalbn ( _Ty _Left, int _Arg2 ) { return ( :: scalbn ( ( double ) _Left, _Arg2 ) ); }
#line 209 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
extern "C" __declspec(dllimport) double __cdecl tgamma(double); template < class _Ty > inline typename :: std :: enable_if < :: std :: is_integral < _Ty > :: value, double > :: type tgamma ( _Ty _Left ) { return ( :: tgamma ( ( double ) _Left ) ); }
#line 210 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
extern "C" __declspec(dllimport) double __cdecl trunc(double); template < class _Ty > inline typename :: std :: enable_if < :: std :: is_integral < _Ty > :: value, double > :: type trunc ( _Ty _Left ) { return ( :: trunc ( ( double ) _Left ) ); }
#line 215 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
#pragma warning(pop)
#pragma pack ( pop )
#line 22 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cmath"
namespace std { 
#line 23 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cmath"
using ::abs;using ::acos;using ::asin;
#line 24 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cmath"
using ::atan;using ::atan2;using ::ceil;
#line 25 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cmath"
using ::cos;using ::cosh;using ::exp;
#line 26 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cmath"
using ::fabs;using ::floor;using ::fmod;
#line 27 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cmath"
using ::frexp;using ::ldexp;using ::log;
#line 28 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cmath"
using ::log10;using ::modf;using ::pow;
#line 29 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cmath"
using ::sin;using ::sinh;using ::sqrt;
#line 30 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cmath"
using ::tan;using ::tanh;
#line 32 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cmath"
using ::acosf;using ::asinf;
#line 33 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cmath"
using ::atanf;using ::atan2f;using ::ceilf;
#line 34 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cmath"
using ::cosf;using ::coshf;using ::expf;
#line 35 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cmath"
using ::fabsf;using ::floorf;using ::fmodf;
#line 36 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cmath"
using ::frexpf;using ::ldexpf;using ::logf;
#line 37 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cmath"
using ::log10f;using ::modff;using ::powf;
#line 38 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cmath"
using ::sinf;using ::sinhf;using ::sqrtf;
#line 39 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cmath"
using ::tanf;using ::tanhf;
#line 41 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cmath"
using ::acosl;using ::asinl;
#line 42 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cmath"
using ::atanl;using ::atan2l;using ::ceill;
#line 43 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cmath"
using ::cosl;using ::coshl;using ::expl;
#line 44 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cmath"
using ::fabsl;using ::floorl;using ::fmodl;
#line 45 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cmath"
using ::frexpl;using ::ldexpl;using ::logl;
#line 46 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cmath"
using ::log10l;using ::modfl;using ::powl;
#line 47 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cmath"
using ::sinl;using ::sinhl;using ::sqrtl;
#line 48 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cmath"
using ::tanl;using ::tanhl;
#line 50 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cmath"
using ::float_t;using ::double_t;
#line 52 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cmath"
using ::acosh;using ::asinh;using ::atanh;
#line 53 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cmath"
using ::cbrt;using ::erf;using ::erfc;
#line 54 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cmath"
using ::expm1;using ::exp2;
#line 55 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cmath"
using ::hypot;using ::ilogb;using ::lgamma;
#line 56 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cmath"
using ::log1p;using ::log2;using ::logb;
#line 57 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cmath"
using ::llrint;using ::lrint;using ::nearbyint;
#line 58 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cmath"
using ::rint;using ::llround;using ::lround;
#line 59 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cmath"
using ::fdim;using ::fma;using ::fmax;using ::fmin;
#line 60 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cmath"
using ::round;using ::trunc;
#line 61 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cmath"
using ::remainder;using ::remquo;
#line 62 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cmath"
using ::copysign;using ::nan;using ::nextafter;
#line 63 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cmath"
using ::scalbn;using ::scalbln;
#line 64 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cmath"
using ::nexttoward;using ::tgamma;
#line 66 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cmath"
using ::acoshf;using ::asinhf;using ::atanhf;
#line 67 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cmath"
using ::cbrtf;using ::erff;using ::erfcf;
#line 68 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cmath"
using ::expm1f;using ::exp2f;
#line 69 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cmath"
using ::hypotf;using ::ilogbf;using ::lgammaf;
#line 70 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cmath"
using ::log1pf;using ::log2f;using ::logbf;
#line 71 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cmath"
using ::llrintf;using ::lrintf;using ::nearbyintf;
#line 72 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cmath"
using ::rintf;using ::llroundf;using ::lroundf;
#line 73 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cmath"
using ::fdimf;using ::fmaf;using ::fmaxf;using ::fminf;
#line 74 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cmath"
using ::roundf;using ::truncf;
#line 75 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cmath"
using ::remainderf;using ::remquof;
#line 76 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cmath"
using ::copysignf;using ::nanf;
#line 77 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cmath"
using ::nextafterf;using ::scalbnf;using ::scalblnf;
#line 78 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cmath"
using ::nexttowardf;using ::tgammaf;
#line 80 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cmath"
using ::acoshl;using ::asinhl;using ::atanhl;
#line 81 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cmath"
using ::cbrtl;using ::erfl;using ::erfcl;
#line 82 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cmath"
using ::expm1l;using ::exp2l;
#line 83 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cmath"
using ::hypotl;using ::ilogbl;using ::lgammal;
#line 84 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cmath"
using ::log1pl;using ::log2l;using ::logbl;
#line 85 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cmath"
using ::llrintl;using ::lrintl;using ::nearbyintl;
#line 86 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cmath"
using ::rintl;using ::llroundl;using ::lroundl;
#line 87 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cmath"
using ::fdiml;using ::fmal;using ::fmaxl;using ::fminl;
#line 88 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cmath"
using ::roundl;using ::truncl;
#line 89 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cmath"
using ::remainderl;using ::remquol;
#line 90 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cmath"
using ::copysignl;using ::nanl;
#line 91 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cmath"
using ::nextafterl;using ::scalbnl;using ::scalblnl;
#line 92 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cmath"
using ::nexttowardl;using ::tgammal;
#line 94 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cmath"
using ::fpclassify;using ::signbit;
#line 95 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cmath"
using ::isfinite;using ::isinf;
#line 96 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cmath"
using ::isnan;using ::isnormal;
#line 97 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cmath"
using ::isgreater;using ::isgreaterequal;
#line 98 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cmath"
using ::isless;using ::islessequal;
#line 99 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cmath"
using ::islessgreater;using ::isunordered;
#line 100 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cmath"
}
#line 17 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cstdlib"
namespace std { 
#line 18 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cstdlib"
using ::size_t;using ::div_t;using ::ldiv_t;
#line 19 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cstdlib"
using ::abort;using ::abs;using ::atexit;
#line 20 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cstdlib"
using ::atof;using ::atoi;using ::atol;
#line 21 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cstdlib"
using ::bsearch;using ::calloc;using ::div;
#line 22 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cstdlib"
using ::exit;using ::free;
#line 23 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cstdlib"
using ::labs;using ::ldiv;using ::malloc;
#line 24 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cstdlib"
using ::mblen;using ::mbstowcs;using ::mbtowc;
#line 25 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cstdlib"
using ::qsort;using ::rand;using ::realloc;
#line 26 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cstdlib"
using ::srand;using ::strtod;using ::strtol;
#line 27 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cstdlib"
using ::strtoul;
#line 28 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cstdlib"
using ::wcstombs;using ::wctomb;
#line 30 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cstdlib"
using ::lldiv_t;
#line 33 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cstdlib"
using ::getenv;
#line 34 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cstdlib"
using ::system;
#line 37 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cstdlib"
using ::atoll;using ::llabs;using ::lldiv;
#line 38 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cstdlib"
using ::strtof;using ::strtold;
#line 39 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cstdlib"
using ::strtoll;using ::strtoull;
#line 40 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cstdlib"
}
#line 8968 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern double __cdecl _hypot(double x, double y); } 
#line 8969 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern float __cdecl _hypotf(float x, float y); } 
#line 8979 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern inline bool signbit(long double); 
#line 8980 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern int _ldsign(long double); } 
#line 9023 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern inline bool signbit(double); 
#line 9024 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern int _dsign(double); } 
#line 9068 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern inline bool signbit(float); 
#line 9069 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern int _fdsign(float); } 
#line 9077 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
static __inline bool isinf(long double a); 
#line 9112 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
static __inline bool isinf(double a); 
#line 9150 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
static __inline bool isinf(float a); 
#line 9157 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
static __inline bool isnan(long double a); 
#line 9190 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
static __inline bool isnan(double a); 
#line 9226 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
static __inline bool isnan(float a); 
#line 9233 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
static __inline bool isfinite(long double a); 
#line 9270 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
static __inline bool isfinite(double a); 
#line 9306 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
static __inline bool isfinite(float a); 
#line 9314 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
template< class T> extern inline T _Pow_int(T, int) throw(); 
#line 9315 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern inline __int64 abs(__int64) throw(); 
#line 9386 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern inline long __cdecl abs(long) throw(); 
#line 9390 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern inline float __cdecl abs(float) throw(); 
#line 9391 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern inline double __cdecl abs(double) throw(); 
#line 9392 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern inline float __cdecl fabs(float) throw(); 
#line 9393 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern inline float __cdecl ceil(float) throw(); 
#line 9394 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern inline float __cdecl floor(float) throw(); 
#line 9395 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern inline float __cdecl sqrt(float) throw(); 
#line 9396 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern inline float __cdecl pow(float, float) throw(); 
#line 9412 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern inline float __cdecl pow(float, int) throw(); 
#line 9413 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern inline double __cdecl pow(double, int) throw(); 
#line 9416 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern inline float __cdecl log(float) throw(); 
#line 9417 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern inline float __cdecl log10(float) throw(); 
#line 9418 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern inline float __cdecl fmod(float, float) throw(); 
#line 9419 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern inline float __cdecl modf(float, float *) throw(); 
#line 9420 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern inline float __cdecl exp(float) throw(); 
#line 9421 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern inline float __cdecl frexp(float, int *) throw(); 
#line 9422 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern inline float __cdecl ldexp(float, int) throw(); 
#line 9423 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern inline float __cdecl asin(float) throw(); 
#line 9424 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern inline float __cdecl sin(float) throw(); 
#line 9425 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern inline float __cdecl sinh(float) throw(); 
#line 9426 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern inline float __cdecl acos(float) throw(); 
#line 9427 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern inline float __cdecl cos(float) throw(); 
#line 9428 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern inline float __cdecl cosh(float) throw(); 
#line 9429 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern inline float __cdecl atan(float) throw(); 
#line 9430 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern inline float __cdecl atan2(float, float) throw(); 
#line 9431 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern inline float __cdecl tan(float) throw(); 
#line 9432 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern inline float __cdecl tanh(float) throw(); 
#line 9564 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern inline float __cdecl logb(float) throw(); 
#line 9565 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern inline int __cdecl ilogb(float) throw(); 
#line 9566 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern float __cdecl scalbn(float, float) throw(); 
#line 9567 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern inline float __cdecl scalbln(float, long) throw(); 
#line 9568 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern inline float __cdecl exp2(float) throw(); 
#line 9569 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern inline float __cdecl expm1(float) throw(); 
#line 9570 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern inline float __cdecl log2(float) throw(); 
#line 9571 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern inline float __cdecl log1p(float) throw(); 
#line 9572 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern inline float __cdecl acosh(float) throw(); 
#line 9573 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern inline float __cdecl asinh(float) throw(); 
#line 9574 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern inline float __cdecl atanh(float) throw(); 
#line 9575 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern inline float __cdecl hypot(float, float) throw(); 
#line 9576 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern float __cdecl norm3d(float, float, float) throw(); 
#line 9577 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern float __cdecl norm4d(float, float, float, float) throw(); 
#line 9578 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern inline float __cdecl cbrt(float) throw(); 
#line 9579 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern inline float __cdecl erf(float) throw(); 
#line 9580 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern inline float __cdecl erfc(float) throw(); 
#line 9581 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern inline float __cdecl lgamma(float) throw(); 
#line 9582 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern inline float __cdecl tgamma(float) throw(); 
#line 9583 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern inline float __cdecl copysign(float, float) throw(); 
#line 9584 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern inline float __cdecl nextafter(float, float) throw(); 
#line 9585 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern inline float __cdecl remainder(float, float) throw(); 
#line 9586 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern inline float __cdecl remquo(float, float, int *) throw(); 
#line 9587 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern inline float __cdecl round(float) throw(); 
#line 9588 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern inline long __cdecl lround(float) throw(); 
#line 9589 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern inline __int64 __cdecl llround(float) throw(); 
#line 9590 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern inline float __cdecl trunc(float) throw(); 
#line 9591 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern inline float __cdecl rint(float) throw(); 
#line 9592 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern inline long __cdecl lrint(float) throw(); 
#line 9593 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern inline __int64 __cdecl llrint(float) throw(); 
#line 9594 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern inline float __cdecl nearbyint(float) throw(); 
#line 9595 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern inline float __cdecl fdim(float, float) throw(); 
#line 9596 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern inline float __cdecl fma(float, float, float) throw(); 
#line 9597 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern inline float __cdecl fmax(float, float) throw(); 
#line 9598 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
extern inline float __cdecl fmin(float, float) throw(); 
#line 9601 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
static inline float exp10(float a); 
#line 9603 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
static inline float rsqrt(float a); 
#line 9605 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
static inline float rcbrt(float a); 
#line 9607 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
static inline float sinpi(float a); 
#line 9609 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
static inline float cospi(float a); 
#line 9611 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
static inline void sincospi(float a, float * sptr, float * cptr); 
#line 9613 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
static inline void sincos(float a, float * sptr, float * cptr); 
#line 9615 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
static inline float j0(float a); 
#line 9617 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
static inline float j1(float a); 
#line 9619 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
static inline float jn(int n, float a); 
#line 9621 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
static inline float y0(float a); 
#line 9623 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
static inline float y1(float a); 
#line 9625 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
static inline float yn(int n, float a); 
#line 9627 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
static inline float cyl_bessel_i0(float a); 
#line 9629 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
static inline float cyl_bessel_i1(float a); 
#line 9631 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
static inline float erfinv(float a); 
#line 9633 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
static inline float erfcinv(float a); 
#line 9635 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
static inline float normcdfinv(float a); 
#line 9637 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
static inline float normcdf(float a); 
#line 9639 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
static inline float erfcx(float a); 
#line 9641 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
static inline double copysign(double a, float b); 
#line 9643 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
static inline float copysign(float a, double b); 
#line 9645 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
static inline unsigned min(unsigned a, unsigned b); 
#line 9647 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
static inline unsigned min(int a, unsigned b); 
#line 9649 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
static inline unsigned min(unsigned a, int b); 
#line 9651 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
static inline long min(long a, long b); 
#line 9653 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
static inline unsigned long min(unsigned long a, unsigned long b); 
#line 9655 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
static inline unsigned long min(long a, unsigned long b); 
#line 9657 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
static inline unsigned long min(unsigned long a, long b); 
#line 9659 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
static inline __int64 min(__int64 a, __int64 b); 
#line 9661 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
static inline unsigned __int64 min(unsigned __int64 a, unsigned __int64 b); 
#line 9663 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
static inline unsigned __int64 min(__int64 a, unsigned __int64 b); 
#line 9665 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
static inline unsigned __int64 min(unsigned __int64 a, __int64 b); 
#line 9667 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
static inline float min(float a, float b); 
#line 9669 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
static inline double min(double a, double b); 
#line 9671 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
static inline double min(float a, double b); 
#line 9673 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
static inline double min(double a, float b); 
#line 9675 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
static inline unsigned max(unsigned a, unsigned b); 
#line 9677 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
static inline unsigned max(int a, unsigned b); 
#line 9679 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
static inline unsigned max(unsigned a, int b); 
#line 9681 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
static inline long max(long a, long b); 
#line 9683 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
static inline unsigned long max(unsigned long a, unsigned long b); 
#line 9685 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
static inline unsigned long max(long a, unsigned long b); 
#line 9687 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
static inline unsigned long max(unsigned long a, long b); 
#line 9689 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
static inline __int64 max(__int64 a, __int64 b); 
#line 9691 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
static inline unsigned __int64 max(unsigned __int64 a, unsigned __int64 b); 
#line 9693 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
static inline unsigned __int64 max(__int64 a, unsigned __int64 b); 
#line 9695 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
static inline unsigned __int64 max(unsigned __int64 a, __int64 b); 
#line 9697 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
static inline float max(float a, float b); 
#line 9699 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
static inline double max(double a, double b); 
#line 9701 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
static inline double max(float a, double b); 
#line 9703 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
static inline double max(double a, float b); 
#line 314 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
static __inline bool isinf(long double a) 
#line 315 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
{ 
#line 319 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
return isinf< long double> (a); 
#line 321 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
} 
#line 330 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
static __inline bool isinf(double a) 
#line 331 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
{ 
#line 335 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
return isinf< double> (a); 
#line 337 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
} 
#line 346 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
static __inline bool isinf(float a) 
#line 347 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
{ 
#line 351 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
return isinf< float> (a); 
#line 353 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
} 
#line 362 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
static __inline bool isnan(long double a) 
#line 363 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
{ 
#line 367 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
return isnan< long double> (a); 
#line 369 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
} 
#line 378 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
static __inline bool isnan(double a) 
#line 379 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
{ 
#line 383 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
return isnan< double> (a); 
#line 385 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
} 
#line 394 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
static __inline bool isnan(float a) 
#line 395 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
{ 
#line 399 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
return isnan< float> (a); 
#line 401 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
} 
#line 410 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
static __inline bool isfinite(long double a) 
#line 411 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
{ 
#line 415 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
return isfinite< long double> (a); 
#line 417 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
} 
#line 426 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
static __inline bool isfinite(double a) 
#line 427 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
{ 
#line 431 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
return isfinite< double> (a); 
#line 433 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
} 
#line 442 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
static __inline bool isfinite(float a) 
#line 443 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
{ 
#line 447 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
return isfinite< float> (a); 
#line 449 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
} 
#line 639 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
static inline float exp10(float a) 
#line 640 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
{ 
#line 641 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
return exp10f(a); 
#line 642 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
} 
#line 644 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
static inline float rsqrt(float a) 
#line 645 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
{ 
#line 646 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
return rsqrtf(a); 
#line 647 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
} 
#line 649 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
static inline float rcbrt(float a) 
#line 650 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
{ 
#line 651 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
return rcbrtf(a); 
#line 652 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
} 
#line 654 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
static inline float sinpi(float a) 
#line 655 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
{ 
#line 656 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
return sinpif(a); 
#line 657 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
} 
#line 659 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
static inline float cospi(float a) 
#line 660 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
{ 
#line 661 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
return cospif(a); 
#line 662 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
} 
#line 664 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
static inline void sincospi(float a, float *sptr, float *cptr) 
#line 665 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
{ 
#line 666 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
sincospif(a, sptr, cptr); 
#line 667 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
} 
#line 669 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
static inline void sincos(float a, float *sptr, float *cptr) 
#line 670 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
{ 
#line 671 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
sincosf(a, sptr, cptr); 
#line 672 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
} 
#line 674 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
static inline float j0(float a) 
#line 675 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
{ 
#line 676 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
return j0f(a); 
#line 677 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
} 
#line 679 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
static inline float j1(float a) 
#line 680 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
{ 
#line 681 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
return j1f(a); 
#line 682 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
} 
#line 684 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
static inline float jn(int n, float a) 
#line 685 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
{ 
#line 686 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
return jnf(n, a); 
#line 687 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
} 
#line 689 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
static inline float y0(float a) 
#line 690 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
{ 
#line 691 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
return y0f(a); 
#line 692 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
} 
#line 694 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
static inline float y1(float a) 
#line 695 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
{ 
#line 696 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
return y1f(a); 
#line 697 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
} 
#line 699 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
static inline float yn(int n, float a) 
#line 700 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
{ 
#line 701 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
return ynf(n, a); 
#line 702 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
} 
#line 704 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
static inline float cyl_bessel_i0(float a) 
#line 705 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
{ 
#line 706 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
return cyl_bessel_i0f(a); 
#line 707 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
} 
#line 709 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
static inline float cyl_bessel_i1(float a) 
#line 710 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
{ 
#line 711 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
return cyl_bessel_i1f(a); 
#line 712 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
} 
#line 714 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
static inline float erfinv(float a) 
#line 715 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
{ 
#line 716 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
return erfinvf(a); 
#line 717 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
} 
#line 719 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
static inline float erfcinv(float a) 
#line 720 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
{ 
#line 721 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
return erfcinvf(a); 
#line 722 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
} 
#line 724 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
static inline float normcdfinv(float a) 
#line 725 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
{ 
#line 726 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
return normcdfinvf(a); 
#line 727 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
} 
#line 729 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
static inline float normcdf(float a) 
#line 730 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
{ 
#line 731 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
return normcdff(a); 
#line 732 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
} 
#line 734 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
static inline float erfcx(float a) 
#line 735 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
{ 
#line 736 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
return erfcxf(a); 
#line 737 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
} 
#line 739 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
static inline double copysign(double a, float b) 
#line 740 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
{ 
#line 741 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
return copysign(a, (double)b); 
#line 742 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
} 
#line 744 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
static inline float copysign(float a, double b) 
#line 745 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
{ 
#line 746 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
return copysignf(a, (float)b); 
#line 747 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
} 
#line 749 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
static inline unsigned min(unsigned a, unsigned b) 
#line 750 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
{ 
#line 751 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
return umin(a, b); 
#line 752 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
} 
#line 754 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
static inline unsigned min(int a, unsigned b) 
#line 755 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
{ 
#line 756 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
return umin((unsigned)a, b); 
#line 757 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
} 
#line 759 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
static inline unsigned min(unsigned a, int b) 
#line 760 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
{ 
#line 761 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
return umin(a, (unsigned)b); 
#line 762 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
} 
#line 764 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
static inline long min(long a, long b) 
#line 765 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
{ 
#line 768 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
#pragma warning (disable: 4127)
#line 771 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
if (sizeof(long) == sizeof(int)) { 
#line 773 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
#pragma warning (default: 4127)
#line 775 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
return (long)min((int)a, (int)b); 
#line 776 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
} else { 
#line 777 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
return (long)llmin((__int64)a, (__int64)b); 
#line 778 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
}  
#line 779 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
} 
#line 781 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
static inline unsigned long min(unsigned long a, unsigned long b) 
#line 782 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
{ 
#line 784 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
#pragma warning (disable: 4127)
#line 786 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
if (sizeof(unsigned long) == sizeof(unsigned)) { 
#line 788 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
#pragma warning (default: 4127)
#line 790 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
return (unsigned long)umin((unsigned)a, (unsigned)b); 
#line 791 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
} else { 
#line 792 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
return (unsigned long)ullmin((unsigned __int64)a, (unsigned __int64)b); 
#line 793 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
}  
#line 794 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
} 
#line 796 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
static inline unsigned long min(long a, unsigned long b) 
#line 797 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
{ 
#line 799 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
#pragma warning (disable: 4127)
#line 801 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
if (sizeof(unsigned long) == sizeof(unsigned)) { 
#line 803 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
#pragma warning (default: 4127)
#line 805 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
return (unsigned long)umin((unsigned)a, (unsigned)b); 
#line 806 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
} else { 
#line 807 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
return (unsigned long)ullmin((unsigned __int64)a, (unsigned __int64)b); 
#line 808 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
}  
#line 809 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
} 
#line 811 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
static inline unsigned long min(unsigned long a, long b) 
#line 812 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
{ 
#line 814 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
#pragma warning (disable: 4127)
#line 816 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
if (sizeof(unsigned long) == sizeof(unsigned)) { 
#line 818 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
#pragma warning (default: 4127)
#line 820 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
return (unsigned long)umin((unsigned)a, (unsigned)b); 
#line 821 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
} else { 
#line 822 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
return (unsigned long)ullmin((unsigned __int64)a, (unsigned __int64)b); 
#line 823 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
}  
#line 824 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
} 
#line 826 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
static inline __int64 min(__int64 a, __int64 b) 
#line 827 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
{ 
#line 828 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
return llmin(a, b); 
#line 829 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
} 
#line 831 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
static inline unsigned __int64 min(unsigned __int64 a, unsigned __int64 b) 
#line 832 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
{ 
#line 833 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
return ullmin(a, b); 
#line 834 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
} 
#line 836 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
static inline unsigned __int64 min(__int64 a, unsigned __int64 b) 
#line 837 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
{ 
#line 838 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
return ullmin((unsigned __int64)a, b); 
#line 839 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
} 
#line 841 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
static inline unsigned __int64 min(unsigned __int64 a, __int64 b) 
#line 842 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
{ 
#line 843 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
return ullmin(a, (unsigned __int64)b); 
#line 844 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
} 
#line 846 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
static inline float min(float a, float b) 
#line 847 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
{ 
#line 848 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
return fminf(a, b); 
#line 849 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
} 
#line 851 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
static inline double min(double a, double b) 
#line 852 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
{ 
#line 853 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
return fmin(a, b); 
#line 854 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
} 
#line 856 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
static inline double min(float a, double b) 
#line 857 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
{ 
#line 858 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
return fmin((double)a, b); 
#line 859 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
} 
#line 861 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
static inline double min(double a, float b) 
#line 862 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
{ 
#line 863 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
return fmin(a, (double)b); 
#line 864 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
} 
#line 866 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
static inline unsigned max(unsigned a, unsigned b) 
#line 867 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
{ 
#line 868 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
return umax(a, b); 
#line 869 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
} 
#line 871 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
static inline unsigned max(int a, unsigned b) 
#line 872 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
{ 
#line 873 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
return umax((unsigned)a, b); 
#line 874 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
} 
#line 876 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
static inline unsigned max(unsigned a, int b) 
#line 877 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
{ 
#line 878 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
return umax(a, (unsigned)b); 
#line 879 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
} 
#line 881 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
static inline long max(long a, long b) 
#line 882 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
{ 
#line 885 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
#pragma warning (disable: 4127)
#line 887 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
if (sizeof(long) == sizeof(int)) { 
#line 889 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
#pragma warning (default: 4127)
#line 891 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
return (long)max((int)a, (int)b); 
#line 892 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
} else { 
#line 893 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
return (long)llmax((__int64)a, (__int64)b); 
#line 894 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
}  
#line 895 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
} 
#line 897 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
static inline unsigned long max(unsigned long a, unsigned long b) 
#line 898 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
{ 
#line 900 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
#pragma warning (disable: 4127)
#line 902 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
if (sizeof(unsigned long) == sizeof(unsigned)) { 
#line 904 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
#pragma warning (default: 4127)
#line 906 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
return (unsigned long)umax((unsigned)a, (unsigned)b); 
#line 907 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
} else { 
#line 908 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
return (unsigned long)ullmax((unsigned __int64)a, (unsigned __int64)b); 
#line 909 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
}  
#line 910 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
} 
#line 912 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
static inline unsigned long max(long a, unsigned long b) 
#line 913 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
{ 
#line 915 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
#pragma warning (disable: 4127)
#line 917 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
if (sizeof(unsigned long) == sizeof(unsigned)) { 
#line 919 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
#pragma warning (default: 4127)
#line 921 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
return (unsigned long)umax((unsigned)a, (unsigned)b); 
#line 922 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
} else { 
#line 923 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
return (unsigned long)ullmax((unsigned __int64)a, (unsigned __int64)b); 
#line 924 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
}  
#line 925 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
} 
#line 927 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
static inline unsigned long max(unsigned long a, long b) 
#line 928 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
{ 
#line 930 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
#pragma warning (disable: 4127)
#line 932 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
if (sizeof(unsigned long) == sizeof(unsigned)) { 
#line 934 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
#pragma warning (default: 4127)
#line 936 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
return (unsigned long)umax((unsigned)a, (unsigned)b); 
#line 937 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
} else { 
#line 938 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
return (unsigned long)ullmax((unsigned __int64)a, (unsigned __int64)b); 
#line 939 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
}  
#line 940 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
} 
#line 942 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
static inline __int64 max(__int64 a, __int64 b) 
#line 943 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
{ 
#line 944 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
return llmax(a, b); 
#line 945 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
} 
#line 947 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
static inline unsigned __int64 max(unsigned __int64 a, unsigned __int64 b) 
#line 948 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
{ 
#line 949 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
return ullmax(a, b); 
#line 950 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
} 
#line 952 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
static inline unsigned __int64 max(__int64 a, unsigned __int64 b) 
#line 953 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
{ 
#line 954 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
return ullmax((unsigned __int64)a, b); 
#line 955 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
} 
#line 957 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
static inline unsigned __int64 max(unsigned __int64 a, __int64 b) 
#line 958 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
{ 
#line 959 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
return ullmax(a, (unsigned __int64)b); 
#line 960 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
} 
#line 962 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
static inline float max(float a, float b) 
#line 963 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
{ 
#line 964 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
return fmaxf(a, b); 
#line 965 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
} 
#line 967 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
static inline double max(double a, double b) 
#line 968 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
{ 
#line 969 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
return fmax(a, b); 
#line 970 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
} 
#line 972 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
static inline double max(float a, double b) 
#line 973 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
{ 
#line 974 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
return fmax((double)a, b); 
#line 975 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
} 
#line 977 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
static inline double max(double a, float b) 
#line 978 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
{ 
#line 979 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
return fmax(a, (double)b); 
#line 980 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
} 
#line 986 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
#pragma warning(disable : 4211)
#line 991 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
static inline int min(int a, int b) 
#line 992 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
{ 
#line 993 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
return (a < b) ? a : b; 
#line 994 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
} 
#line 996 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
static inline unsigned umin(unsigned a, unsigned b) 
#line 997 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
{ 
#line 998 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
return (a < b) ? a : b; 
#line 999 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
} 
#line 1001 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
static inline __int64 llmin(__int64 a, __int64 b) 
#line 1002 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
{ 
#line 1003 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
return (a < b) ? a : b; 
#line 1004 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
} 
#line 1006 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
static inline unsigned __int64 ullmin(unsigned __int64 a, unsigned __int64 
#line 1007 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
b) 
#line 1008 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
{ 
#line 1009 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
return (a < b) ? a : b; 
#line 1010 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
} 
#line 1012 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
static inline int max(int a, int b) 
#line 1013 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
{ 
#line 1014 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
return (a > b) ? a : b; 
#line 1015 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
} 
#line 1017 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
static inline unsigned umax(unsigned a, unsigned b) 
#line 1018 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
{ 
#line 1019 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
return (a > b) ? a : b; 
#line 1020 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
} 
#line 1022 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
static inline __int64 llmax(__int64 a, __int64 b) 
#line 1023 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
{ 
#line 1024 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
return (a > b) ? a : b; 
#line 1025 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
} 
#line 1027 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
static inline unsigned __int64 ullmax(unsigned __int64 a, unsigned __int64 
#line 1028 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
b) 
#line 1029 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
{ 
#line 1030 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
return (a > b) ? a : b; 
#line 1031 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
} 
#line 1034 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
#pragma warning(default: 4211)
#line 77 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_surface_types.h"
template< class T, int dim = 1> 
#line 78 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_surface_types.h"
struct surface : public surfaceReference { 
#line 81 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_surface_types.h"
surface() 
#line 82 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_surface_types.h"
{ 
#line 83 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_surface_types.h"
(::surfaceReference::channelDesc) = cudaCreateChannelDesc< T> (); 
#line 84 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_surface_types.h"
} 
#line 86 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_surface_types.h"
surface(::cudaChannelFormatDesc desc) 
#line 87 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_surface_types.h"
{ 
#line 88 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_surface_types.h"
(::surfaceReference::channelDesc) = desc; 
#line 89 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_surface_types.h"
} 
#line 91 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_surface_types.h"
}; 
#line 93 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_surface_types.h"
template< int dim> 
#line 94 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_surface_types.h"
struct surface< void, dim>  : public surfaceReference { 
#line 97 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_surface_types.h"
surface() 
#line 98 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_surface_types.h"
{ 
#line 99 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_surface_types.h"
(::surfaceReference::channelDesc) = cudaCreateChannelDesc< void> (); 
#line 100 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_surface_types.h"
} 
#line 102 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_surface_types.h"
}; 
#line 77 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_texture_types.h"
template< class T, int texType = 1, cudaTextureReadMode mode = cudaReadModeElementType> 
#line 78 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_texture_types.h"
struct texture : public textureReference { 
#line 81 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_texture_types.h"
texture(int norm = 0, ::cudaTextureFilterMode 
#line 82 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_texture_types.h"
fMode = cudaFilterModePoint, ::cudaTextureAddressMode 
#line 83 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_texture_types.h"
aMode = cudaAddressModeClamp) 
#line 84 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_texture_types.h"
{ 
#line 85 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_texture_types.h"
(::textureReference::normalized) = norm; 
#line 86 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_texture_types.h"
(::textureReference::filterMode) = fMode; 
#line 87 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_texture_types.h"
((::textureReference::addressMode)[0]) = aMode; 
#line 88 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_texture_types.h"
((::textureReference::addressMode)[1]) = aMode; 
#line 89 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_texture_types.h"
((::textureReference::addressMode)[2]) = aMode; 
#line 90 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_texture_types.h"
(::textureReference::channelDesc) = cudaCreateChannelDesc< T> (); 
#line 91 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_texture_types.h"
(::textureReference::sRGB) = 0; 
#line 92 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_texture_types.h"
} 
#line 94 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_texture_types.h"
texture(int norm, ::cudaTextureFilterMode 
#line 95 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_texture_types.h"
fMode, ::cudaTextureAddressMode 
#line 96 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_texture_types.h"
aMode, ::cudaChannelFormatDesc 
#line 97 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_texture_types.h"
desc) 
#line 98 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_texture_types.h"
{ 
#line 99 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_texture_types.h"
(::textureReference::normalized) = norm; 
#line 100 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_texture_types.h"
(::textureReference::filterMode) = fMode; 
#line 101 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_texture_types.h"
((::textureReference::addressMode)[0]) = aMode; 
#line 102 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_texture_types.h"
((::textureReference::addressMode)[1]) = aMode; 
#line 103 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_texture_types.h"
((::textureReference::addressMode)[2]) = aMode; 
#line 104 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_texture_types.h"
(::textureReference::channelDesc) = desc; 
#line 105 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_texture_types.h"
(::textureReference::sRGB) = 0; 
#line 106 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_texture_types.h"
} 
#line 108 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\cuda_texture_types.h"
}; 
#line 3230 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_functions.h"
static __inline int mulhi(int a, int b); 
#line 3232 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_functions.h"
static __inline unsigned mulhi(unsigned a, unsigned b); 
#line 3234 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_functions.h"
static __inline unsigned mulhi(int a, unsigned b); 
#line 3236 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_functions.h"
static __inline unsigned mulhi(unsigned a, int b); 
#line 3238 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_functions.h"
static __inline __int64 mul64hi(__int64 a, __int64 b); 
#line 3240 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_functions.h"
static __inline unsigned __int64 mul64hi(unsigned __int64 a, unsigned __int64 b); 
#line 3242 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_functions.h"
static __inline unsigned __int64 mul64hi(__int64 a, unsigned __int64 b); 
#line 3244 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_functions.h"
static __inline unsigned __int64 mul64hi(unsigned __int64 a, __int64 b); 
#line 3246 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_functions.h"
static __inline int float_as_int(float a); 
#line 3248 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_functions.h"
static __inline float int_as_float(int a); 
#line 3250 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_functions.h"
static __inline unsigned float_as_uint(float a); 
#line 3252 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_functions.h"
static __inline float uint_as_float(unsigned a); 
#line 3254 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_functions.h"
static __inline float saturate(float a); 
#line 3256 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_functions.h"
static __inline int mul24(int a, int b); 
#line 3258 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_functions.h"
static __inline unsigned umul24(unsigned a, unsigned b); 
#line 3260 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_functions.h"
static __inline void trap(); 
#line 3263 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_functions.h"
static __inline void brkpt(int c = 0); 
#line 3265 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_functions.h"
static __inline void syncthreads(); 
#line 3267 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_functions.h"
static __inline void prof_trigger(int e); 
#line 3269 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_functions.h"
static __inline void threadfence(bool global = true); 
#line 3271 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_functions.h"
static __inline int float2int(float a, cudaRoundMode mode = cudaRoundZero); 
#line 3273 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_functions.h"
static __inline unsigned float2uint(float a, cudaRoundMode mode = cudaRoundZero); 
#line 3275 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_functions.h"
static __inline float int2float(int a, cudaRoundMode mode = cudaRoundNearest); 
#line 3277 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_functions.h"
static __inline float uint2float(unsigned a, cudaRoundMode mode = cudaRoundNearest); 
#line 83 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_functions.hpp"
static __inline int mulhi(int a, int b) 
#line 84 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_functions.hpp"
{int volatile ___ = 1;(void)a;(void)b;
#line 86 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_functions.hpp"
::exit(___);}







#line 95 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_functions.hpp"
#line 88 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_functions.hpp"
static __inline unsigned mulhi(unsigned a, unsigned b) 
#line 89 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_functions.hpp"
{int volatile ___ = 1;(void)a;(void)b;
#line 91 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_functions.hpp"
::exit(___);}







#line 100 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_functions.hpp"
#line 93 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_functions.hpp"
static __inline unsigned mulhi(int a, unsigned b) 
#line 94 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_functions.hpp"
{int volatile ___ = 1;(void)a;(void)b;
#line 96 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_functions.hpp"
::exit(___);}







#line 105 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_functions.hpp"
#line 98 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_functions.hpp"
static __inline unsigned mulhi(unsigned a, int b) 
#line 99 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_functions.hpp"
{int volatile ___ = 1;(void)a;(void)b;
#line 101 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_functions.hpp"
::exit(___);}







#line 110 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_functions.hpp"
#line 103 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_functions.hpp"
static __inline __int64 mul64hi(__int64 a, __int64 b) 
#line 104 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_functions.hpp"
{int volatile ___ = 1;(void)a;(void)b;
#line 106 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_functions.hpp"
::exit(___);}







#line 115 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_functions.hpp"
#line 108 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_functions.hpp"
static __inline unsigned __int64 mul64hi(unsigned __int64 a, unsigned __int64 b) 
#line 109 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_functions.hpp"
{int volatile ___ = 1;(void)a;(void)b;
#line 111 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_functions.hpp"
::exit(___);}







#line 120 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_functions.hpp"
#line 113 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_functions.hpp"
static __inline unsigned __int64 mul64hi(__int64 a, unsigned __int64 b) 
#line 114 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_functions.hpp"
{int volatile ___ = 1;(void)a;(void)b;
#line 116 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_functions.hpp"
::exit(___);}







#line 125 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_functions.hpp"
#line 118 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_functions.hpp"
static __inline unsigned __int64 mul64hi(unsigned __int64 a, __int64 b) 
#line 119 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_functions.hpp"
{int volatile ___ = 1;(void)a;(void)b;
#line 121 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_functions.hpp"
::exit(___);}







#line 130 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_functions.hpp"
#line 123 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_functions.hpp"
static __inline int float_as_int(float a) 
#line 124 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_functions.hpp"
{int volatile ___ = 1;(void)a;
#line 126 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_functions.hpp"
::exit(___);}







#line 135 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_functions.hpp"
#line 128 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_functions.hpp"
static __inline float int_as_float(int a) 
#line 129 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_functions.hpp"
{int volatile ___ = 1;(void)a;
#line 131 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_functions.hpp"
::exit(___);}







#line 140 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_functions.hpp"
#line 133 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_functions.hpp"
static __inline unsigned float_as_uint(float a) 
#line 134 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_functions.hpp"
{int volatile ___ = 1;(void)a;
#line 136 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_functions.hpp"
::exit(___);}







#line 145 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_functions.hpp"
#line 138 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_functions.hpp"
static __inline float uint_as_float(unsigned a) 
#line 139 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_functions.hpp"
{int volatile ___ = 1;(void)a;
#line 141 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_functions.hpp"
::exit(___);}







#line 150 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_functions.hpp"
#line 142 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_functions.hpp"
static __inline float saturate(float a) 
#line 143 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_functions.hpp"
{int volatile ___ = 1;(void)a;
#line 145 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_functions.hpp"
::exit(___);}







#line 154 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_functions.hpp"
#line 147 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_functions.hpp"
static __inline int mul24(int a, int b) 
#line 148 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_functions.hpp"
{int volatile ___ = 1;(void)a;(void)b;
#line 150 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_functions.hpp"
::exit(___);}







#line 159 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_functions.hpp"
#line 152 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_functions.hpp"
static __inline unsigned umul24(unsigned a, unsigned b) 
#line 153 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_functions.hpp"
{int volatile ___ = 1;(void)a;(void)b;
#line 155 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_functions.hpp"
::exit(___);}







#line 164 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_functions.hpp"
#line 157 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_functions.hpp"
static __inline void trap() 
#line 158 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_functions.hpp"
{int volatile ___ = 1;
#line 160 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_functions.hpp"
::exit(___);}







#line 169 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_functions.hpp"
#line 163 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_functions.hpp"
static __inline void brkpt(int c) 
#line 164 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_functions.hpp"
{int volatile ___ = 1;(void)c;
#line 166 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_functions.hpp"
::exit(___);}







#line 175 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_functions.hpp"
#line 168 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_functions.hpp"
static __inline void syncthreads() 
#line 169 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_functions.hpp"
{int volatile ___ = 1;
#line 171 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_functions.hpp"
::exit(___);}







#line 180 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_functions.hpp"
#line 173 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_functions.hpp"
static __inline void prof_trigger(int e) 
#line 174 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_functions.hpp"
{int volatile ___ = 1;(void)e;
#line 191 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_functions.hpp"
::exit(___);}





































#line 230 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_functions.hpp"
#line 193 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_functions.hpp"
static __inline void threadfence(bool global) 
#line 194 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_functions.hpp"
{int volatile ___ = 1;(void)global;
#line 196 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_functions.hpp"
::exit(___);}







#line 205 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_functions.hpp"
#line 198 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_functions.hpp"
static __inline int float2int(float a, cudaRoundMode mode) 
#line 199 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_functions.hpp"
{int volatile ___ = 1;(void)a;(void)mode;
#line 204 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_functions.hpp"
::exit(___);}







#line 213 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_functions.hpp"
#line 206 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_functions.hpp"
static __inline unsigned float2uint(float a, cudaRoundMode mode) 
#line 207 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_functions.hpp"
{int volatile ___ = 1;(void)a;(void)mode;
#line 212 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_functions.hpp"
::exit(___);}







#line 221 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_functions.hpp"
#line 214 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_functions.hpp"
static __inline float int2float(int a, cudaRoundMode mode) 
#line 215 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_functions.hpp"
{int volatile ___ = 1;(void)a;(void)mode;
#line 220 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_functions.hpp"
::exit(___);}







#line 229 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_functions.hpp"
#line 222 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_functions.hpp"
static __inline float uint2float(unsigned a, cudaRoundMode mode) 
#line 223 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_functions.hpp"
{int volatile ___ = 1;(void)a;(void)mode;
#line 228 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_functions.hpp"
::exit(___);}







#line 237 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_functions.hpp"
#line 105 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_atomic_functions.h"
static __inline int atomicAdd(int * address, int val); 
#line 107 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_atomic_functions.h"
static __inline unsigned atomicAdd(unsigned * address, unsigned val); 
#line 109 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_atomic_functions.h"
static __inline int atomicSub(int * address, int val); 
#line 111 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_atomic_functions.h"
static __inline unsigned atomicSub(unsigned * address, unsigned val); 
#line 113 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_atomic_functions.h"
static __inline int atomicExch(int * address, int val); 
#line 115 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_atomic_functions.h"
static __inline unsigned atomicExch(unsigned * address, unsigned val); 
#line 117 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_atomic_functions.h"
static __inline float atomicExch(float * address, float val); 
#line 119 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_atomic_functions.h"
static __inline int atomicMin(int * address, int val); 
#line 121 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_atomic_functions.h"
static __inline unsigned atomicMin(unsigned * address, unsigned val); 
#line 123 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_atomic_functions.h"
static __inline int atomicMax(int * address, int val); 
#line 125 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_atomic_functions.h"
static __inline unsigned atomicMax(unsigned * address, unsigned val); 
#line 127 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_atomic_functions.h"
static __inline unsigned atomicInc(unsigned * address, unsigned val); 
#line 129 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_atomic_functions.h"
static __inline unsigned atomicDec(unsigned * address, unsigned val); 
#line 131 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_atomic_functions.h"
static __inline int atomicAnd(int * address, int val); 
#line 133 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_atomic_functions.h"
static __inline unsigned atomicAnd(unsigned * address, unsigned val); 
#line 135 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_atomic_functions.h"
static __inline int atomicOr(int * address, int val); 
#line 137 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_atomic_functions.h"
static __inline unsigned atomicOr(unsigned * address, unsigned val); 
#line 139 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_atomic_functions.h"
static __inline int atomicXor(int * address, int val); 
#line 141 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_atomic_functions.h"
static __inline unsigned atomicXor(unsigned * address, unsigned val); 
#line 143 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_atomic_functions.h"
static __inline int atomicCAS(int * address, int compare, int val); 
#line 145 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_atomic_functions.h"
static __inline unsigned atomicCAS(unsigned * address, unsigned compare, unsigned val); 
#line 178 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_atomic_functions.h"
static __inline unsigned __int64 atomicAdd(unsigned __int64 * address, unsigned __int64 val); 
#line 180 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_atomic_functions.h"
static __inline unsigned __int64 atomicExch(unsigned __int64 * address, unsigned __int64 val); 
#line 182 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_atomic_functions.h"
static __inline unsigned __int64 atomicCAS(unsigned __int64 * address, unsigned __int64 compare, unsigned __int64 val); 
#line 184 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_atomic_functions.h"
static __inline bool any(bool cond); 
#line 186 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_atomic_functions.h"
static __inline bool all(bool cond); 
#line 78 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_atomic_functions.hpp"
static __inline int atomicAdd(int *address, int val) 
#line 79 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_atomic_functions.hpp"
{int volatile ___ = 1;(void)address;(void)val;
#line 81 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_atomic_functions.hpp"
::exit(___);}







#line 90 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_atomic_functions.hpp"
#line 83 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_atomic_functions.hpp"
static __inline unsigned atomicAdd(unsigned *address, unsigned val) 
#line 84 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_atomic_functions.hpp"
{int volatile ___ = 1;(void)address;(void)val;
#line 86 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_atomic_functions.hpp"
::exit(___);}







#line 95 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_atomic_functions.hpp"
#line 88 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_atomic_functions.hpp"
static __inline int atomicSub(int *address, int val) 
#line 89 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_atomic_functions.hpp"
{int volatile ___ = 1;(void)address;(void)val;
#line 91 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_atomic_functions.hpp"
::exit(___);}







#line 100 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_atomic_functions.hpp"
#line 93 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_atomic_functions.hpp"
static __inline unsigned atomicSub(unsigned *address, unsigned val) 
#line 94 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_atomic_functions.hpp"
{int volatile ___ = 1;(void)address;(void)val;
#line 96 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_atomic_functions.hpp"
::exit(___);}







#line 105 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_atomic_functions.hpp"
#line 98 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_atomic_functions.hpp"
static __inline int atomicExch(int *address, int val) 
#line 99 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_atomic_functions.hpp"
{int volatile ___ = 1;(void)address;(void)val;
#line 101 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_atomic_functions.hpp"
::exit(___);}







#line 110 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_atomic_functions.hpp"
#line 103 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_atomic_functions.hpp"
static __inline unsigned atomicExch(unsigned *address, unsigned val) 
#line 104 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_atomic_functions.hpp"
{int volatile ___ = 1;(void)address;(void)val;
#line 106 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_atomic_functions.hpp"
::exit(___);}







#line 115 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_atomic_functions.hpp"
#line 108 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_atomic_functions.hpp"
static __inline float atomicExch(float *address, float val) 
#line 109 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_atomic_functions.hpp"
{int volatile ___ = 1;(void)address;(void)val;
#line 111 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_atomic_functions.hpp"
::exit(___);}







#line 120 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_atomic_functions.hpp"
#line 113 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_atomic_functions.hpp"
static __inline int atomicMin(int *address, int val) 
#line 114 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_atomic_functions.hpp"
{int volatile ___ = 1;(void)address;(void)val;
#line 116 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_atomic_functions.hpp"
::exit(___);}







#line 125 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_atomic_functions.hpp"
#line 118 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_atomic_functions.hpp"
static __inline unsigned atomicMin(unsigned *address, unsigned val) 
#line 119 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_atomic_functions.hpp"
{int volatile ___ = 1;(void)address;(void)val;
#line 121 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_atomic_functions.hpp"
::exit(___);}







#line 130 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_atomic_functions.hpp"
#line 123 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_atomic_functions.hpp"
static __inline int atomicMax(int *address, int val) 
#line 124 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_atomic_functions.hpp"
{int volatile ___ = 1;(void)address;(void)val;
#line 126 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_atomic_functions.hpp"
::exit(___);}







#line 135 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_atomic_functions.hpp"
#line 128 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_atomic_functions.hpp"
static __inline unsigned atomicMax(unsigned *address, unsigned val) 
#line 129 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_atomic_functions.hpp"
{int volatile ___ = 1;(void)address;(void)val;
#line 131 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_atomic_functions.hpp"
::exit(___);}







#line 140 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_atomic_functions.hpp"
#line 133 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_atomic_functions.hpp"
static __inline unsigned atomicInc(unsigned *address, unsigned val) 
#line 134 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_atomic_functions.hpp"
{int volatile ___ = 1;(void)address;(void)val;
#line 136 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_atomic_functions.hpp"
::exit(___);}







#line 145 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_atomic_functions.hpp"
#line 138 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_atomic_functions.hpp"
static __inline unsigned atomicDec(unsigned *address, unsigned val) 
#line 139 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_atomic_functions.hpp"
{int volatile ___ = 1;(void)address;(void)val;
#line 141 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_atomic_functions.hpp"
::exit(___);}







#line 150 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_atomic_functions.hpp"
#line 143 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_atomic_functions.hpp"
static __inline int atomicAnd(int *address, int val) 
#line 144 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_atomic_functions.hpp"
{int volatile ___ = 1;(void)address;(void)val;
#line 146 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_atomic_functions.hpp"
::exit(___);}







#line 155 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_atomic_functions.hpp"
#line 148 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_atomic_functions.hpp"
static __inline unsigned atomicAnd(unsigned *address, unsigned val) 
#line 149 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_atomic_functions.hpp"
{int volatile ___ = 1;(void)address;(void)val;
#line 151 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_atomic_functions.hpp"
::exit(___);}







#line 160 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_atomic_functions.hpp"
#line 153 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_atomic_functions.hpp"
static __inline int atomicOr(int *address, int val) 
#line 154 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_atomic_functions.hpp"
{int volatile ___ = 1;(void)address;(void)val;
#line 156 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_atomic_functions.hpp"
::exit(___);}







#line 165 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_atomic_functions.hpp"
#line 158 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_atomic_functions.hpp"
static __inline unsigned atomicOr(unsigned *address, unsigned val) 
#line 159 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_atomic_functions.hpp"
{int volatile ___ = 1;(void)address;(void)val;
#line 161 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_atomic_functions.hpp"
::exit(___);}







#line 170 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_atomic_functions.hpp"
#line 163 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_atomic_functions.hpp"
static __inline int atomicXor(int *address, int val) 
#line 164 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_atomic_functions.hpp"
{int volatile ___ = 1;(void)address;(void)val;
#line 166 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_atomic_functions.hpp"
::exit(___);}







#line 175 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_atomic_functions.hpp"
#line 168 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_atomic_functions.hpp"
static __inline unsigned atomicXor(unsigned *address, unsigned val) 
#line 169 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_atomic_functions.hpp"
{int volatile ___ = 1;(void)address;(void)val;
#line 171 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_atomic_functions.hpp"
::exit(___);}







#line 180 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_atomic_functions.hpp"
#line 173 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_atomic_functions.hpp"
static __inline int atomicCAS(int *address, int compare, int val) 
#line 174 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_atomic_functions.hpp"
{int volatile ___ = 1;(void)address;(void)compare;(void)val;
#line 176 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_atomic_functions.hpp"
::exit(___);}







#line 185 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_atomic_functions.hpp"
#line 178 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_atomic_functions.hpp"
static __inline unsigned atomicCAS(unsigned *address, unsigned compare, unsigned val) 
#line 179 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_atomic_functions.hpp"
{int volatile ___ = 1;(void)address;(void)compare;(void)val;
#line 181 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_atomic_functions.hpp"
::exit(___);}







#line 190 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_atomic_functions.hpp"
#line 201 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_atomic_functions.hpp"
static __inline unsigned __int64 atomicAdd(unsigned __int64 *address, unsigned __int64 val) 
#line 202 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_atomic_functions.hpp"
{int volatile ___ = 1;(void)address;(void)val;
#line 204 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_atomic_functions.hpp"
::exit(___);}







#line 213 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_atomic_functions.hpp"
#line 206 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_atomic_functions.hpp"
static __inline unsigned __int64 atomicExch(unsigned __int64 *address, unsigned __int64 val) 
#line 207 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_atomic_functions.hpp"
{int volatile ___ = 1;(void)address;(void)val;
#line 209 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_atomic_functions.hpp"
::exit(___);}







#line 218 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_atomic_functions.hpp"
#line 211 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_atomic_functions.hpp"
static __inline unsigned __int64 atomicCAS(unsigned __int64 *address, unsigned __int64 compare, unsigned __int64 val) 
#line 212 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_atomic_functions.hpp"
{int volatile ___ = 1;(void)address;(void)compare;(void)val;
#line 214 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_atomic_functions.hpp"
::exit(___);}







#line 223 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_atomic_functions.hpp"
#line 216 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_atomic_functions.hpp"
static __inline bool any(bool cond) 
#line 217 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_atomic_functions.hpp"
{int volatile ___ = 1;(void)cond;
#line 219 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_atomic_functions.hpp"
::exit(___);}







#line 228 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_atomic_functions.hpp"
#line 221 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_atomic_functions.hpp"
static __inline bool all(bool cond) 
#line 222 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_atomic_functions.hpp"
{int volatile ___ = 1;(void)cond;
#line 224 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_atomic_functions.hpp"
::exit(___);}







#line 233 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_atomic_functions.hpp"
#line 1143 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_double_functions.h"
static __inline double fma(double a, double b, double c, cudaRoundMode mode); 
#line 1145 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_double_functions.h"
static __inline double dmul(double a, double b, cudaRoundMode mode = cudaRoundNearest); 
#line 1147 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_double_functions.h"
static __inline double dadd(double a, double b, cudaRoundMode mode = cudaRoundNearest); 
#line 1149 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_double_functions.h"
static __inline double dsub(double a, double b, cudaRoundMode mode = cudaRoundNearest); 
#line 1151 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_double_functions.h"
static __inline int double2int(double a, cudaRoundMode mode = cudaRoundZero); 
#line 1153 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_double_functions.h"
static __inline unsigned double2uint(double a, cudaRoundMode mode = cudaRoundZero); 
#line 1155 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_double_functions.h"
static __inline __int64 double2ll(double a, cudaRoundMode mode = cudaRoundZero); 
#line 1157 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_double_functions.h"
static __inline unsigned __int64 double2ull(double a, cudaRoundMode mode = cudaRoundZero); 
#line 1159 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_double_functions.h"
static __inline double ll2double(__int64 a, cudaRoundMode mode = cudaRoundNearest); 
#line 1161 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_double_functions.h"
static __inline double ull2double(unsigned __int64 a, cudaRoundMode mode = cudaRoundNearest); 
#line 1163 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_double_functions.h"
static __inline double int2double(int a, cudaRoundMode mode = cudaRoundNearest); 
#line 1165 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_double_functions.h"
static __inline double uint2double(unsigned a, cudaRoundMode mode = cudaRoundNearest); 
#line 1167 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_double_functions.h"
static __inline double float2double(float a, cudaRoundMode mode = cudaRoundNearest); 
#line 85 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_double_functions.hpp"
static __inline double fma(double a, double b, double c, cudaRoundMode mode) 
#line 86 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_double_functions.hpp"
{int volatile ___ = 1;(void)a;(void)b;(void)c;(void)mode;
#line 91 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_double_functions.hpp"
::exit(___);}







#line 100 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_double_functions.hpp"
#line 93 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_double_functions.hpp"
static __inline double dmul(double a, double b, cudaRoundMode mode) 
#line 94 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_double_functions.hpp"
{int volatile ___ = 1;(void)a;(void)b;(void)mode;
#line 99 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_double_functions.hpp"
::exit(___);}







#line 108 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_double_functions.hpp"
#line 101 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_double_functions.hpp"
static __inline double dadd(double a, double b, cudaRoundMode mode) 
#line 102 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_double_functions.hpp"
{int volatile ___ = 1;(void)a;(void)b;(void)mode;
#line 107 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_double_functions.hpp"
::exit(___);}







#line 116 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_double_functions.hpp"
#line 109 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_double_functions.hpp"
static __inline double dsub(double a, double b, cudaRoundMode mode) 
#line 110 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_double_functions.hpp"
{int volatile ___ = 1;(void)a;(void)b;(void)mode;
#line 115 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_double_functions.hpp"
::exit(___);}







#line 124 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_double_functions.hpp"
#line 117 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_double_functions.hpp"
static __inline int double2int(double a, cudaRoundMode mode) 
#line 118 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_double_functions.hpp"
{int volatile ___ = 1;(void)a;(void)mode;
#line 123 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_double_functions.hpp"
::exit(___);}







#line 132 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_double_functions.hpp"
#line 125 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_double_functions.hpp"
static __inline unsigned double2uint(double a, cudaRoundMode mode) 
#line 126 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_double_functions.hpp"
{int volatile ___ = 1;(void)a;(void)mode;
#line 131 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_double_functions.hpp"
::exit(___);}







#line 140 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_double_functions.hpp"
#line 133 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_double_functions.hpp"
static __inline __int64 double2ll(double a, cudaRoundMode mode) 
#line 134 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_double_functions.hpp"
{int volatile ___ = 1;(void)a;(void)mode;
#line 139 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_double_functions.hpp"
::exit(___);}







#line 148 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_double_functions.hpp"
#line 141 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_double_functions.hpp"
static __inline unsigned __int64 double2ull(double a, cudaRoundMode mode) 
#line 142 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_double_functions.hpp"
{int volatile ___ = 1;(void)a;(void)mode;
#line 147 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_double_functions.hpp"
::exit(___);}







#line 156 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_double_functions.hpp"
#line 149 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_double_functions.hpp"
static __inline double ll2double(__int64 a, cudaRoundMode mode) 
#line 150 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_double_functions.hpp"
{int volatile ___ = 1;(void)a;(void)mode;
#line 155 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_double_functions.hpp"
::exit(___);}







#line 164 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_double_functions.hpp"
#line 157 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_double_functions.hpp"
static __inline double ull2double(unsigned __int64 a, cudaRoundMode mode) 
#line 158 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_double_functions.hpp"
{int volatile ___ = 1;(void)a;(void)mode;
#line 163 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_double_functions.hpp"
::exit(___);}







#line 172 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_double_functions.hpp"
#line 165 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_double_functions.hpp"
static __inline double int2double(int a, cudaRoundMode mode) 
#line 166 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_double_functions.hpp"
{int volatile ___ = 1;(void)a;(void)mode;
#line 168 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_double_functions.hpp"
::exit(___);}







#line 177 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_double_functions.hpp"
#line 170 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_double_functions.hpp"
static __inline double uint2double(unsigned a, cudaRoundMode mode) 
#line 171 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_double_functions.hpp"
{int volatile ___ = 1;(void)a;(void)mode;
#line 173 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_double_functions.hpp"
::exit(___);}







#line 182 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_double_functions.hpp"
#line 175 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_double_functions.hpp"
static __inline double float2double(float a, cudaRoundMode mode) 
#line 176 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_double_functions.hpp"
{int volatile ___ = 1;(void)a;(void)mode;
#line 178 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_double_functions.hpp"
::exit(___);}







#line 187 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_double_functions.hpp"
#line 85 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_20_atomic_functions.h"
static __inline float atomicAdd(float * address, float val); 
#line 76 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_20_atomic_functions.hpp"
static __inline float atomicAdd(float *address, float val) 
#line 77 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_20_atomic_functions.hpp"
{int volatile ___ = 1;(void)address;(void)val;
#line 79 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_20_atomic_functions.hpp"
::exit(___);}







#line 88 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_20_atomic_functions.hpp"
#line 93 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_32_atomic_functions.h"
static __inline __int64 atomicMin(__int64 * address, __int64 val); 
#line 95 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_32_atomic_functions.h"
static __inline __int64 atomicMax(__int64 * address, __int64 val); 
#line 97 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_32_atomic_functions.h"
static __inline unsigned __int64 atomicMin(unsigned __int64 * address, unsigned __int64 val); 
#line 99 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_32_atomic_functions.h"
static __inline unsigned __int64 atomicMax(unsigned __int64 * address, unsigned __int64 val); 
#line 101 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_32_atomic_functions.h"
static __inline unsigned __int64 atomicAnd(unsigned __int64 * address, unsigned __int64 val); 
#line 103 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_32_atomic_functions.h"
static __inline unsigned __int64 atomicOr(unsigned __int64 * address, unsigned __int64 val); 
#line 105 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_32_atomic_functions.h"
static __inline unsigned __int64 atomicXor(unsigned __int64 * address, unsigned __int64 val); 
#line 78 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_32_atomic_functions.hpp"
static __inline __int64 atomicMin(__int64 *address, __int64 val) 
#line 79 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_32_atomic_functions.hpp"
{int volatile ___ = 1;(void)address;(void)val;
#line 81 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_32_atomic_functions.hpp"
::exit(___);}







#line 90 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_32_atomic_functions.hpp"
#line 83 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_32_atomic_functions.hpp"
static __inline __int64 atomicMax(__int64 *address, __int64 val) 
#line 84 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_32_atomic_functions.hpp"
{int volatile ___ = 1;(void)address;(void)val;
#line 86 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_32_atomic_functions.hpp"
::exit(___);}







#line 95 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_32_atomic_functions.hpp"
#line 88 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_32_atomic_functions.hpp"
static __inline unsigned __int64 atomicMin(unsigned __int64 *address, unsigned __int64 val) 
#line 89 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_32_atomic_functions.hpp"
{int volatile ___ = 1;(void)address;(void)val;
#line 91 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_32_atomic_functions.hpp"
::exit(___);}







#line 100 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_32_atomic_functions.hpp"
#line 93 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_32_atomic_functions.hpp"
static __inline unsigned __int64 atomicMax(unsigned __int64 *address, unsigned __int64 val) 
#line 94 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_32_atomic_functions.hpp"
{int volatile ___ = 1;(void)address;(void)val;
#line 96 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_32_atomic_functions.hpp"
::exit(___);}







#line 105 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_32_atomic_functions.hpp"
#line 98 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_32_atomic_functions.hpp"
static __inline unsigned __int64 atomicAnd(unsigned __int64 *address, unsigned __int64 val) 
#line 99 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_32_atomic_functions.hpp"
{int volatile ___ = 1;(void)address;(void)val;
#line 101 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_32_atomic_functions.hpp"
::exit(___);}







#line 110 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_32_atomic_functions.hpp"
#line 103 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_32_atomic_functions.hpp"
static __inline unsigned __int64 atomicOr(unsigned __int64 *address, unsigned __int64 val) 
#line 104 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_32_atomic_functions.hpp"
{int volatile ___ = 1;(void)address;(void)val;
#line 106 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_32_atomic_functions.hpp"
::exit(___);}







#line 115 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_32_atomic_functions.hpp"
#line 108 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_32_atomic_functions.hpp"
static __inline unsigned __int64 atomicXor(unsigned __int64 *address, unsigned __int64 val) 
#line 109 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_32_atomic_functions.hpp"
{int volatile ___ = 1;(void)address;(void)val;
#line 111 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_32_atomic_functions.hpp"
::exit(___);}







#line 120 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_32_atomic_functions.hpp"
#line 1468 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_20_intrinsics.h"
static __inline unsigned ballot(bool pred); 
#line 1470 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_20_intrinsics.h"
static __inline int syncthreads_count(bool pred); 
#line 1472 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_20_intrinsics.h"
static __inline bool syncthreads_and(bool pred); 
#line 1474 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_20_intrinsics.h"
static __inline bool syncthreads_or(bool pred); 
#line 1479 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_20_intrinsics.h"
static __inline unsigned __isGlobal(const void * ptr); 
#line 77 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_20_intrinsics.hpp"
static __inline unsigned ballot(bool pred) 
#line 78 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_20_intrinsics.hpp"
{int volatile ___ = 1;(void)pred;
#line 80 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_20_intrinsics.hpp"
::exit(___);}







#line 89 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_20_intrinsics.hpp"
#line 82 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_20_intrinsics.hpp"
static __inline int syncthreads_count(bool pred) 
#line 83 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_20_intrinsics.hpp"
{int volatile ___ = 1;(void)pred;
#line 85 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_20_intrinsics.hpp"
::exit(___);}







#line 94 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_20_intrinsics.hpp"
#line 87 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_20_intrinsics.hpp"
static __inline bool syncthreads_and(bool pred) 
#line 88 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_20_intrinsics.hpp"
{int volatile ___ = 1;(void)pred;
#line 90 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_20_intrinsics.hpp"
::exit(___);}







#line 99 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_20_intrinsics.hpp"
#line 92 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_20_intrinsics.hpp"
static __inline bool syncthreads_or(bool pred) 
#line 93 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_20_intrinsics.hpp"
{int volatile ___ = 1;(void)pred;
#line 95 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_20_intrinsics.hpp"
::exit(___);}







#line 104 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_20_intrinsics.hpp"
#line 100 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_20_intrinsics.hpp"
static __inline unsigned __isGlobal(const void *ptr) 
#line 101 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_20_intrinsics.hpp"
{int volatile ___ = 1;(void)ptr;
#line 114 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_20_intrinsics.hpp"
::exit(___);}
















#line 132 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_20_intrinsics.hpp"
#line 91 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_30_intrinsics.h"
static __inline int __shfl(int var, int srcLane, int width = 32); 
#line 93 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_30_intrinsics.h"
static __inline unsigned __shfl(unsigned var, int srcLane, int width = 32); 
#line 95 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_30_intrinsics.h"
static __inline int __shfl_up(int var, unsigned delta, int width = 32); 
#line 96 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_30_intrinsics.h"
static __inline unsigned __shfl_up(unsigned var, unsigned delta, int width = 32); 
#line 98 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_30_intrinsics.h"
static __inline int __shfl_down(int var, unsigned delta, int width = 32); 
#line 100 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_30_intrinsics.h"
static __inline unsigned __shfl_down(unsigned var, unsigned delta, int width = 32); 
#line 102 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_30_intrinsics.h"
static __inline int __shfl_xor(int var, int laneMask, int width = 32); 
#line 104 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_30_intrinsics.h"
static __inline unsigned __shfl_xor(unsigned var, int laneMask, int width = 32); 
#line 106 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_30_intrinsics.h"
static __inline float __shfl(float var, int srcLane, int width = 32); 
#line 108 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_30_intrinsics.h"
static __inline float __shfl_up(float var, unsigned delta, int width = 32); 
#line 110 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_30_intrinsics.h"
static __inline float __shfl_down(float var, unsigned delta, int width = 32); 
#line 112 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_30_intrinsics.h"
static __inline float __shfl_xor(float var, int laneMask, int width = 32); 
#line 115 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_30_intrinsics.h"
static __inline __int64 __shfl(__int64 var, int srcLane, int width = 32); 
#line 117 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_30_intrinsics.h"
static __inline unsigned __int64 __shfl(unsigned __int64 var, int srcLane, int width = 32); 
#line 119 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_30_intrinsics.h"
static __inline __int64 __shfl_up(__int64 var, unsigned delta, int width = 32); 
#line 121 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_30_intrinsics.h"
static __inline unsigned __int64 __shfl_up(unsigned __int64 var, unsigned delta, int width = 32); 
#line 123 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_30_intrinsics.h"
static __inline __int64 __shfl_down(__int64 var, unsigned delta, int width = 32); 
#line 125 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_30_intrinsics.h"
static __inline unsigned __int64 __shfl_down(unsigned __int64 var, unsigned delta, int width = 32); 
#line 127 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_30_intrinsics.h"
static __inline __int64 __shfl_xor(__int64 var, int laneMask, int width = 32); 
#line 129 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_30_intrinsics.h"
static __inline unsigned __int64 __shfl_xor(unsigned __int64 var, int laneMask, int width = 32); 
#line 131 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_30_intrinsics.h"
static __inline double __shfl(double var, int srcLane, int width = 32); 
#line 133 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_30_intrinsics.h"
static __inline double __shfl_up(double var, unsigned delta, int width = 32); 
#line 135 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_30_intrinsics.h"
static __inline double __shfl_down(double var, unsigned delta, int width = 32); 
#line 137 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_30_intrinsics.h"
static __inline double __shfl_xor(double var, int laneMask, int width = 32); 
#line 141 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_30_intrinsics.h"
static __inline long __shfl(long var, int srcLane, int width = 32); 
#line 143 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_30_intrinsics.h"
static __inline unsigned long __shfl(unsigned long var, int srcLane, int width = 32); 
#line 145 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_30_intrinsics.h"
static __inline long __shfl_up(long var, unsigned delta, int width = 32); 
#line 147 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_30_intrinsics.h"
static __inline unsigned long __shfl_up(unsigned long var, unsigned delta, int width = 32); 
#line 149 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_30_intrinsics.h"
static __inline long __shfl_down(long var, unsigned delta, int width = 32); 
#line 151 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_30_intrinsics.h"
static __inline unsigned long __shfl_down(unsigned long var, unsigned delta, int width = 32); 
#line 153 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_30_intrinsics.h"
static __inline long __shfl_xor(long var, int laneMask, int width = 32); 
#line 155 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_30_intrinsics.h"
static __inline unsigned long __shfl_xor(unsigned long var, int laneMask, int width = 32); 
#line 99 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_30_intrinsics.hpp"
static __inline int __shfl(int var, int srcLane, int width) {int volatile ___ = 1;(void)var;(void)srcLane;(void)width;
#line 104 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_30_intrinsics.hpp"
::exit(___);}












#line 118 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_30_intrinsics.hpp"
#line 106 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_30_intrinsics.hpp"
static __inline unsigned __shfl(unsigned var, int srcLane, int width) {int volatile ___ = 1;(void)var;(void)srcLane;(void)width;
#line 108 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_30_intrinsics.hpp"
::exit(___);}







#line 117 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_30_intrinsics.hpp"
#line 110 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_30_intrinsics.hpp"
static __inline int __shfl_up(int var, unsigned delta, int width) {int volatile ___ = 1;(void)var;(void)delta;(void)width;
#line 115 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_30_intrinsics.hpp"
::exit(___);}












#line 129 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_30_intrinsics.hpp"
#line 116 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_30_intrinsics.hpp"
static __inline unsigned __shfl_up(unsigned var, unsigned delta, int width) {int volatile ___ = 1;(void)var;(void)delta;(void)width;
#line 118 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_30_intrinsics.hpp"
::exit(___);}







#line 127 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_30_intrinsics.hpp"
#line 120 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_30_intrinsics.hpp"
static __inline int __shfl_down(int var, unsigned delta, int width) {int volatile ___ = 1;(void)var;(void)delta;(void)width;
#line 125 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_30_intrinsics.hpp"
::exit(___);}












#line 139 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_30_intrinsics.hpp"
#line 127 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_30_intrinsics.hpp"
static __inline unsigned __shfl_down(unsigned var, unsigned delta, int width) {int volatile ___ = 1;(void)var;(void)delta;(void)width;
#line 129 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_30_intrinsics.hpp"
::exit(___);}







#line 138 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_30_intrinsics.hpp"
#line 131 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_30_intrinsics.hpp"
static __inline int __shfl_xor(int var, int laneMask, int width) {int volatile ___ = 1;(void)var;(void)laneMask;(void)width;
#line 136 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_30_intrinsics.hpp"
::exit(___);}












#line 150 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_30_intrinsics.hpp"
#line 138 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_30_intrinsics.hpp"
static __inline unsigned __shfl_xor(unsigned var, int laneMask, int width) {int volatile ___ = 1;(void)var;(void)laneMask;(void)width;
#line 140 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_30_intrinsics.hpp"
::exit(___);}







#line 149 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_30_intrinsics.hpp"
#line 142 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_30_intrinsics.hpp"
static __inline float __shfl(float var, int srcLane, int width) {int volatile ___ = 1;(void)var;(void)srcLane;(void)width;
#line 148 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_30_intrinsics.hpp"
::exit(___);}














#line 164 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_30_intrinsics.hpp"
#line 150 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_30_intrinsics.hpp"
static __inline float __shfl_up(float var, unsigned delta, int width) {int volatile ___ = 1;(void)var;(void)delta;(void)width;
#line 156 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_30_intrinsics.hpp"
::exit(___);}














#line 172 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_30_intrinsics.hpp"
#line 158 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_30_intrinsics.hpp"
static __inline float __shfl_down(float var, unsigned delta, int width) {int volatile ___ = 1;(void)var;(void)delta;(void)width;
#line 164 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_30_intrinsics.hpp"
::exit(___);}














#line 180 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_30_intrinsics.hpp"
#line 166 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_30_intrinsics.hpp"
static __inline float __shfl_xor(float var, int laneMask, int width) {int volatile ___ = 1;(void)var;(void)laneMask;(void)width;
#line 172 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_30_intrinsics.hpp"
::exit(___);}














#line 188 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_30_intrinsics.hpp"
#line 175 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_30_intrinsics.hpp"
static __inline __int64 __shfl(__int64 var, int srcLane, int width) {int volatile ___ = 1;(void)var;(void)srcLane;(void)width;
#line 182 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_30_intrinsics.hpp"
::exit(___);}















#line 199 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_30_intrinsics.hpp"
#line 184 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_30_intrinsics.hpp"
static __inline unsigned __int64 __shfl(unsigned __int64 var, int srcLane, int width) {int volatile ___ = 1;(void)var;(void)srcLane;(void)width;
#line 186 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_30_intrinsics.hpp"
::exit(___);}







#line 195 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_30_intrinsics.hpp"
#line 188 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_30_intrinsics.hpp"
static __inline __int64 __shfl_up(__int64 var, unsigned delta, int width) {int volatile ___ = 1;(void)var;(void)delta;(void)width;
#line 195 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_30_intrinsics.hpp"
::exit(___);}















#line 212 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_30_intrinsics.hpp"
#line 197 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_30_intrinsics.hpp"
static __inline unsigned __int64 __shfl_up(unsigned __int64 var, unsigned delta, int width) {int volatile ___ = 1;(void)var;(void)delta;(void)width;
#line 199 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_30_intrinsics.hpp"
::exit(___);}







#line 208 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_30_intrinsics.hpp"
#line 201 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_30_intrinsics.hpp"
static __inline __int64 __shfl_down(__int64 var, unsigned delta, int width) {int volatile ___ = 1;(void)var;(void)delta;(void)width;
#line 208 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_30_intrinsics.hpp"
::exit(___);}















#line 225 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_30_intrinsics.hpp"
#line 210 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_30_intrinsics.hpp"
static __inline unsigned __int64 __shfl_down(unsigned __int64 var, unsigned delta, int width) {int volatile ___ = 1;(void)var;(void)delta;(void)width;
#line 212 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_30_intrinsics.hpp"
::exit(___);}







#line 221 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_30_intrinsics.hpp"
#line 214 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_30_intrinsics.hpp"
static __inline __int64 __shfl_xor(__int64 var, int laneMask, int width) {int volatile ___ = 1;(void)var;(void)laneMask;(void)width;
#line 221 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_30_intrinsics.hpp"
::exit(___);}















#line 238 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_30_intrinsics.hpp"
#line 223 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_30_intrinsics.hpp"
static __inline unsigned __int64 __shfl_xor(unsigned __int64 var, int laneMask, int width) {int volatile ___ = 1;(void)var;(void)laneMask;(void)width;
#line 225 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_30_intrinsics.hpp"
::exit(___);}







#line 234 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_30_intrinsics.hpp"
#line 227 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_30_intrinsics.hpp"
static __inline double __shfl(double var, int srcLane, int width) {int volatile ___ = 1;(void)var;(void)srcLane;(void)width;
#line 234 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_30_intrinsics.hpp"
::exit(___);}















#line 251 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_30_intrinsics.hpp"
#line 236 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_30_intrinsics.hpp"
static __inline double __shfl_up(double var, unsigned delta, int width) {int volatile ___ = 1;(void)var;(void)delta;(void)width;
#line 243 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_30_intrinsics.hpp"
::exit(___);}















#line 260 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_30_intrinsics.hpp"
#line 245 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_30_intrinsics.hpp"
static __inline double __shfl_down(double var, unsigned delta, int width) {int volatile ___ = 1;(void)var;(void)delta;(void)width;
#line 252 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_30_intrinsics.hpp"
::exit(___);}















#line 269 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_30_intrinsics.hpp"
#line 254 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_30_intrinsics.hpp"
static __inline double __shfl_xor(double var, int laneMask, int width) {int volatile ___ = 1;(void)var;(void)laneMask;(void)width;
#line 261 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_30_intrinsics.hpp"
::exit(___);}















#line 278 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_30_intrinsics.hpp"
#line 265 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_30_intrinsics.hpp"
static __inline long __shfl(long var, int srcLane, int width) {int volatile ___ = 1;(void)var;(void)srcLane;(void)width;
#line 269 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_30_intrinsics.hpp"
::exit(___);}







#line 278 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_30_intrinsics.hpp"
#line 271 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_30_intrinsics.hpp"
static __inline unsigned long __shfl(unsigned long var, int srcLane, int width) {int volatile ___ = 1;(void)var;(void)srcLane;(void)width;
#line 275 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_30_intrinsics.hpp"
::exit(___);}







#line 284 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_30_intrinsics.hpp"
#line 277 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_30_intrinsics.hpp"
static __inline long __shfl_up(long var, unsigned delta, int width) {int volatile ___ = 1;(void)var;(void)delta;(void)width;
#line 281 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_30_intrinsics.hpp"
::exit(___);}







#line 290 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_30_intrinsics.hpp"
#line 283 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_30_intrinsics.hpp"
static __inline unsigned long __shfl_up(unsigned long var, unsigned delta, int width) {int volatile ___ = 1;(void)var;(void)delta;(void)width;
#line 287 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_30_intrinsics.hpp"
::exit(___);}







#line 296 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_30_intrinsics.hpp"
#line 289 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_30_intrinsics.hpp"
static __inline long __shfl_down(long var, unsigned delta, int width) {int volatile ___ = 1;(void)var;(void)delta;(void)width;
#line 293 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_30_intrinsics.hpp"
::exit(___);}







#line 302 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_30_intrinsics.hpp"
#line 295 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_30_intrinsics.hpp"
static __inline unsigned long __shfl_down(unsigned long var, unsigned delta, int width) {int volatile ___ = 1;(void)var;(void)delta;(void)width;
#line 299 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_30_intrinsics.hpp"
::exit(___);}







#line 308 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_30_intrinsics.hpp"
#line 301 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_30_intrinsics.hpp"
static __inline long __shfl_xor(long var, int laneMask, int width) {int volatile ___ = 1;(void)var;(void)laneMask;(void)width;
#line 305 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_30_intrinsics.hpp"
::exit(___);}







#line 314 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_30_intrinsics.hpp"
#line 307 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_30_intrinsics.hpp"
static __inline unsigned long __shfl_xor(unsigned long var, int laneMask, int width) {int volatile ___ = 1;(void)var;(void)laneMask;(void)width;
#line 311 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_30_intrinsics.hpp"
::exit(___);}







#line 320 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_30_intrinsics.hpp"
#line 80 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_32_intrinsics.h"
static __inline long __ldg(const long * ptr); 
#line 81 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_32_intrinsics.h"
static __inline unsigned long __ldg(const unsigned long * ptr); 
#line 84 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_32_intrinsics.h"
static __inline char __ldg(const char * ptr); 
#line 85 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_32_intrinsics.h"
static __inline signed char __ldg(const signed char * ptr); 
#line 86 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_32_intrinsics.h"
static __inline short __ldg(const short * ptr); 
#line 87 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_32_intrinsics.h"
static __inline int __ldg(const int * ptr); 
#line 88 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_32_intrinsics.h"
static __inline __int64 __ldg(const __int64 * ptr); 
#line 89 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_32_intrinsics.h"
static __inline char2 __ldg(const char2 * ptr); 
#line 90 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_32_intrinsics.h"
static __inline char4 __ldg(const char4 * ptr); 
#line 91 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_32_intrinsics.h"
static __inline short2 __ldg(const short2 * ptr); 
#line 92 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_32_intrinsics.h"
static __inline short4 __ldg(const short4 * ptr); 
#line 93 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_32_intrinsics.h"
static __inline int2 __ldg(const int2 * ptr); 
#line 94 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_32_intrinsics.h"
static __inline int4 __ldg(const int4 * ptr); 
#line 95 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_32_intrinsics.h"
static __inline longlong2 __ldg(const longlong2 * ptr); 
#line 97 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_32_intrinsics.h"
static __inline unsigned char __ldg(const unsigned char * ptr); 
#line 98 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_32_intrinsics.h"
static __inline unsigned short __ldg(const unsigned short * ptr); 
#line 99 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_32_intrinsics.h"
static __inline unsigned __ldg(const unsigned * ptr); 
#line 100 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_32_intrinsics.h"
static __inline unsigned __int64 __ldg(const unsigned __int64 * ptr); 
#line 101 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_32_intrinsics.h"
static __inline uchar2 __ldg(const uchar2 * ptr); 
#line 102 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_32_intrinsics.h"
static __inline uchar4 __ldg(const uchar4 * ptr); 
#line 103 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_32_intrinsics.h"
static __inline ushort2 __ldg(const ushort2 * ptr); 
#line 104 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_32_intrinsics.h"
static __inline ushort4 __ldg(const ushort4 * ptr); 
#line 105 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_32_intrinsics.h"
static __inline uint2 __ldg(const uint2 * ptr); 
#line 106 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_32_intrinsics.h"
static __inline uint4 __ldg(const uint4 * ptr); 
#line 107 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_32_intrinsics.h"
static __inline ulonglong2 __ldg(const ulonglong2 * ptr); 
#line 109 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_32_intrinsics.h"
static __inline float __ldg(const float * ptr); 
#line 110 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_32_intrinsics.h"
static __inline double __ldg(const double * ptr); 
#line 111 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_32_intrinsics.h"
static __inline float2 __ldg(const float2 * ptr); 
#line 112 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_32_intrinsics.h"
static __inline float4 __ldg(const float4 * ptr); 
#line 113 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_32_intrinsics.h"
static __inline double2 __ldg(const double2 * ptr); 
#line 120 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_32_intrinsics.h"
static __inline unsigned __funnelshift_l(unsigned lo, unsigned hi, unsigned shift); 
#line 121 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_32_intrinsics.h"
static __inline unsigned __funnelshift_lc(unsigned lo, unsigned hi, unsigned shift); 
#line 124 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_32_intrinsics.h"
static __inline unsigned __funnelshift_r(unsigned lo, unsigned hi, unsigned shift); 
#line 125 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_32_intrinsics.h"
static __inline unsigned __funnelshift_rc(unsigned lo, unsigned hi, unsigned shift); 
#line 102 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_32_intrinsics.hpp"
static __inline long __ldg(const long *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}





#line 109 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_32_intrinsics.hpp"
#line 103 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_32_intrinsics.hpp"
static __inline unsigned long __ldg(const unsigned long *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}





#line 110 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_32_intrinsics.hpp"
#line 107 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_32_intrinsics.hpp"
static __inline char __ldg(const char *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}





#line 114 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_32_intrinsics.hpp"
#line 108 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_32_intrinsics.hpp"
static __inline signed char __ldg(const signed char *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}





#line 115 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_32_intrinsics.hpp"
#line 109 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_32_intrinsics.hpp"
static __inline short __ldg(const short *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}





#line 116 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_32_intrinsics.hpp"
#line 110 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_32_intrinsics.hpp"
static __inline int __ldg(const int *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}





#line 117 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_32_intrinsics.hpp"
#line 111 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_32_intrinsics.hpp"
static __inline __int64 __ldg(const __int64 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}





#line 118 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_32_intrinsics.hpp"
#line 112 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_32_intrinsics.hpp"
static __inline char2 __ldg(const char2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}





#line 119 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_32_intrinsics.hpp"
#line 113 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_32_intrinsics.hpp"
static __inline char4 __ldg(const char4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}





#line 120 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_32_intrinsics.hpp"
#line 114 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_32_intrinsics.hpp"
static __inline short2 __ldg(const short2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}





#line 121 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_32_intrinsics.hpp"
#line 115 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_32_intrinsics.hpp"
static __inline short4 __ldg(const short4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}





#line 122 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_32_intrinsics.hpp"
#line 116 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_32_intrinsics.hpp"
static __inline int2 __ldg(const int2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}





#line 123 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_32_intrinsics.hpp"
#line 117 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_32_intrinsics.hpp"
static __inline int4 __ldg(const int4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}





#line 124 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_32_intrinsics.hpp"
#line 118 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_32_intrinsics.hpp"
static __inline longlong2 __ldg(const longlong2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}





#line 125 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_32_intrinsics.hpp"
#line 120 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_32_intrinsics.hpp"
static __inline unsigned char __ldg(const unsigned char *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}





#line 127 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_32_intrinsics.hpp"
#line 121 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_32_intrinsics.hpp"
static __inline unsigned short __ldg(const unsigned short *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}





#line 128 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_32_intrinsics.hpp"
#line 122 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_32_intrinsics.hpp"
static __inline unsigned __ldg(const unsigned *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}





#line 129 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_32_intrinsics.hpp"
#line 123 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_32_intrinsics.hpp"
static __inline unsigned __int64 __ldg(const unsigned __int64 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}





#line 130 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_32_intrinsics.hpp"
#line 124 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_32_intrinsics.hpp"
static __inline uchar2 __ldg(const uchar2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}





#line 131 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_32_intrinsics.hpp"
#line 125 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_32_intrinsics.hpp"
static __inline uchar4 __ldg(const uchar4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}





#line 132 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_32_intrinsics.hpp"
#line 126 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_32_intrinsics.hpp"
static __inline ushort2 __ldg(const ushort2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}





#line 133 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_32_intrinsics.hpp"
#line 127 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_32_intrinsics.hpp"
static __inline ushort4 __ldg(const ushort4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}





#line 134 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_32_intrinsics.hpp"
#line 128 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_32_intrinsics.hpp"
static __inline uint2 __ldg(const uint2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}





#line 135 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_32_intrinsics.hpp"
#line 129 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_32_intrinsics.hpp"
static __inline uint4 __ldg(const uint4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}





#line 136 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_32_intrinsics.hpp"
#line 130 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_32_intrinsics.hpp"
static __inline ulonglong2 __ldg(const ulonglong2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}





#line 137 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_32_intrinsics.hpp"
#line 132 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_32_intrinsics.hpp"
static __inline float __ldg(const float *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}





#line 139 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_32_intrinsics.hpp"
#line 133 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_32_intrinsics.hpp"
static __inline double __ldg(const double *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}





#line 140 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_32_intrinsics.hpp"
#line 134 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_32_intrinsics.hpp"
static __inline float2 __ldg(const float2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}





#line 141 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_32_intrinsics.hpp"
#line 135 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_32_intrinsics.hpp"
static __inline float4 __ldg(const float4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}





#line 142 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_32_intrinsics.hpp"
#line 136 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_32_intrinsics.hpp"
static __inline double2 __ldg(const double2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}





#line 143 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_32_intrinsics.hpp"
#line 145 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_32_intrinsics.hpp"
static __inline unsigned __funnelshift_l(unsigned lo, unsigned hi, unsigned shift) 
#line 146 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_32_intrinsics.hpp"
{int volatile ___ = 1;(void)lo;(void)hi;(void)shift;
#line 150 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_32_intrinsics.hpp"
::exit(___);}










#line 162 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_32_intrinsics.hpp"
#line 151 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_32_intrinsics.hpp"
static __inline unsigned __funnelshift_lc(unsigned lo, unsigned hi, unsigned shift) 
#line 152 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_32_intrinsics.hpp"
{int volatile ___ = 1;(void)lo;(void)hi;(void)shift;
#line 156 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_32_intrinsics.hpp"
::exit(___);}










#line 168 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_32_intrinsics.hpp"
#line 159 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_32_intrinsics.hpp"
static __inline unsigned __funnelshift_r(unsigned lo, unsigned hi, unsigned shift) 
#line 160 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_32_intrinsics.hpp"
{int volatile ___ = 1;(void)lo;(void)hi;(void)shift;
#line 164 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_32_intrinsics.hpp"
::exit(___);}










#line 176 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_32_intrinsics.hpp"
#line 165 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_32_intrinsics.hpp"
static __inline unsigned __funnelshift_rc(unsigned lo, unsigned hi, unsigned shift) 
#line 166 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_32_intrinsics.hpp"
{int volatile ___ = 1;(void)lo;(void)hi;(void)shift;
#line 170 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_32_intrinsics.hpp"
::exit(___);}










#line 182 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\sm_32_intrinsics.hpp"
#line 112 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template< class T> static __forceinline void 
#line 113 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
surf1Dread(T *res, ::surface< void, 1>  surf, int x, int s, ::cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 114 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)s;(void)mode;
#line 121 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 130 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 123 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template< class T> static __forceinline T 
#line 124 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
surf1Dread(::surface< void, 1>  surf, int x, ::cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 125 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 131 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}











#line 144 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 133 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template< class T> static __forceinline void 
#line 134 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
surf1Dread(T *res, ::surface< void, 1>  surf, int x, ::cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 135 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)mode;
#line 137 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 146 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 140 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline char surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 141 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 143 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 152 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 146 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline signed char surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 147 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 149 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 158 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 152 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline unsigned char surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 153 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 155 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 164 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 158 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline char1 surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 159 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 161 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 170 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 164 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline uchar1 surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 165 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 167 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 176 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 170 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline char2 surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 171 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 175 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}









#line 186 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 178 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline uchar2 surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 179 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 181 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 190 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 184 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline char4 surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 185 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 189 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}









#line 200 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 192 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline uchar4 surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 193 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 195 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 204 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 198 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline short surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 199 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 201 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 210 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 204 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline unsigned short surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 205 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 207 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 216 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 210 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline short1 surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 211 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 213 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 222 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 216 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline ushort1 surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 217 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 219 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 228 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 222 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline short2 surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 223 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 227 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}









#line 238 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 230 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline ushort2 surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 231 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 233 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 242 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 236 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline short4 surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 237 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 241 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}









#line 252 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 244 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline ushort4 surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 245 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 247 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 256 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 250 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline int surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 251 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 253 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 262 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 256 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline unsigned surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 257 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 259 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 268 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 262 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline int1 surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 263 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 265 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 274 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 268 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline uint1 surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 269 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 271 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 280 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 274 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline int2 surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 275 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 279 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}









#line 290 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 282 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline uint2 surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 283 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 285 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 294 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 288 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline int4 surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 289 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 293 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}









#line 304 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 296 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline uint4 surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 297 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 299 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 308 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 302 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline __int64 surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 303 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 305 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 314 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 308 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline unsigned __int64 surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 309 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 311 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 320 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 314 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline longlong1 surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 315 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 317 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 326 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 320 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline ulonglong1 surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 321 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 323 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 332 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 326 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline longlong2 surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 327 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 331 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}









#line 342 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 334 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline ulonglong2 surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 335 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 337 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 346 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 342 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline long surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 343 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 345 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 354 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 348 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline unsigned long surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 349 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 351 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 360 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 354 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline long1 surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 355 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 357 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 366 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 360 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline ulong1 surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 361 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 363 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 372 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 366 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline long2 surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 367 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 371 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}









#line 382 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 374 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline ulong2 surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 375 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 379 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}









#line 390 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 382 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline long4 surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 383 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 387 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}









#line 398 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 390 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline ulong4 surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 391 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 395 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}









#line 406 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 400 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline float surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 401 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 403 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 412 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 406 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline float1 surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 407 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 409 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 418 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 412 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline float2 surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 413 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 417 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}









#line 428 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 420 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline float4 surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 421 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 425 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}









#line 436 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 460 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template< class T> static __forceinline void 
#line 461 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
surf2Dread(T *res, ::surface< void, 2>  surf, int x, int y, int s, ::cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 462 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)y;(void)s;(void)mode;
#line 469 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 478 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 471 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template< class T> static __forceinline T 
#line 472 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
surf2Dread(::surface< void, 2>  surf, int x, int y, ::cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 473 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 479 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}











#line 492 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 481 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template< class T> static __forceinline void 
#line 482 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
surf2Dread(T *res, ::surface< void, 2>  surf, int x, int y, ::cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 483 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)y;(void)mode;
#line 485 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 494 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 488 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline char surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 489 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 491 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 500 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 494 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline signed char surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 495 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 497 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 506 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 500 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline unsigned char surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 501 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 503 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 512 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 506 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline char1 surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 507 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 509 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 518 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 512 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline uchar1 surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 513 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 515 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 524 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 518 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline char2 surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 519 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 523 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}









#line 534 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 526 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline uchar2 surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 527 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 529 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 538 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 532 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline char4 surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 533 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 537 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}









#line 548 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 540 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline uchar4 surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 541 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 543 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 552 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 546 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline short surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 547 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 549 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 558 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 552 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline unsigned short surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 553 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 555 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 564 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 558 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline short1 surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 559 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 561 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 570 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 564 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline ushort1 surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 565 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 567 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 576 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 570 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline short2 surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 571 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 575 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}









#line 586 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 578 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline ushort2 surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 579 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 581 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 590 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 584 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline short4 surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 585 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 589 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}









#line 600 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 592 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline ushort4 surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 593 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 595 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 604 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 598 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline int surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 599 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 601 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 610 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 604 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline unsigned surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 605 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 607 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 616 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 610 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline int1 surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 611 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 613 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 622 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 616 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline uint1 surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 617 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 619 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 628 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 622 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline int2 surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 623 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 627 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}









#line 638 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 630 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline uint2 surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 631 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 633 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 642 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 636 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline int4 surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 637 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 641 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}









#line 652 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 644 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline uint4 surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 645 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 647 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 656 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 650 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline __int64 surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 651 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 653 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 662 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 656 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline unsigned __int64 surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 657 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 659 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 668 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 662 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline longlong1 surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 663 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 665 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 674 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 668 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline ulonglong1 surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 669 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 671 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 680 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 674 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline longlong2 surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 675 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 679 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}









#line 690 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 682 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline ulonglong2 surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 683 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 685 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 694 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 690 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline long surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 691 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 693 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 702 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 696 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline unsigned long surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 697 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 699 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 708 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 702 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline long1 surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 703 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 705 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 714 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 708 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline ulong1 surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 709 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 711 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 720 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 714 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline long2 surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 715 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 719 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}









#line 730 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 722 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline ulong2 surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 723 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 727 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}









#line 738 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 730 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline long4 surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 731 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 735 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}









#line 746 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 738 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline ulong4 surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 739 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 743 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}









#line 754 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 748 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline float surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 749 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 751 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 760 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 754 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline float1 surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 755 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 757 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 766 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 760 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline float2 surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 761 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 765 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}









#line 776 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 768 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline float4 surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 769 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 773 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}









#line 784 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 808 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template< class T> static __forceinline void 
#line 809 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
surf3Dread(T *res, ::surface< void, 3>  surf, int x, int y, int z, int s, ::cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 810 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)y;(void)z;(void)s;(void)mode;
#line 817 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 826 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 819 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template< class T> static __forceinline T 
#line 820 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
surf3Dread(::surface< void, 3>  surf, int x, int y, int z, ::cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 821 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 827 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}











#line 840 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 829 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template< class T> static __forceinline void 
#line 830 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
surf3Dread(T *res, ::surface< void, 3>  surf, int x, int y, int z, ::cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 831 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 833 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 842 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 836 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline char surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 837 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 839 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 848 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 842 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline signed char surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 843 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 845 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 854 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 848 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline unsigned char surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 849 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 851 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 860 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 854 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline char1 surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 855 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 857 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 866 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 860 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline uchar1 surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 861 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 863 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 872 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 866 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline char2 surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 867 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 871 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}









#line 882 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 874 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline uchar2 surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 875 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 877 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 886 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 880 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline char4 surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 881 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 885 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}









#line 896 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 888 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline uchar4 surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 889 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 891 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 900 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 894 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline short surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 895 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 897 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 906 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 900 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline unsigned short surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 901 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 903 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 912 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 906 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline short1 surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 907 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 909 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 918 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 912 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline ushort1 surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 913 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 915 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 924 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 918 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline short2 surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 919 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 923 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}









#line 934 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 926 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline ushort2 surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 927 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 929 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 938 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 932 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline short4 surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 933 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 937 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}









#line 948 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 940 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline ushort4 surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 941 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 943 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 952 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 946 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline int surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 947 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 949 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 958 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 952 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline unsigned surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 953 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 955 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 964 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 958 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline int1 surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 959 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 961 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 970 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 964 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline uint1 surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 965 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 967 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 976 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 970 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline int2 surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 971 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 975 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}









#line 986 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 978 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline uint2 surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 979 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 981 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 990 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 984 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline int4 surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 985 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 989 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}









#line 1000 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 992 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline uint4 surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 993 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 995 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 1004 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 998 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline __int64 surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 999 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 1001 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 1010 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 1004 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline unsigned __int64 surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 1005 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 1007 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 1016 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 1010 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline longlong1 surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 1011 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 1013 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 1022 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 1016 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline ulonglong1 surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 1017 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 1019 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 1028 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 1022 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline longlong2 surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 1023 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 1027 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}









#line 1038 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 1030 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline ulonglong2 surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 1031 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 1033 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 1042 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 1038 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline long surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 1039 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 1041 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 1050 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 1044 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline unsigned long surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 1045 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 1047 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 1056 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 1050 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline long1 surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 1051 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 1053 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 1062 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 1056 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline ulong1 surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 1057 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 1059 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 1068 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 1062 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline long2 surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 1063 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 1067 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}









#line 1078 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 1070 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline ulong2 surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 1071 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 1075 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}









#line 1086 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 1078 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline long4 surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 1079 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 1083 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}









#line 1094 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 1086 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline ulong4 surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 1087 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 1091 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}









#line 1102 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 1096 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline float surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 1097 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 1099 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 1108 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 1102 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline float1 surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 1103 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 1105 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 1114 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 1108 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline float2 surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 1109 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 1113 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}









#line 1124 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 1116 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline float4 surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 1117 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 1121 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}









#line 1132 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 1156 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template< class T> static __forceinline void 
#line 1157 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
surf1DLayeredread(T *res, ::surface< void, 241>  surf, int x, int layer, int s, ::cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 1158 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)layer;(void)s;(void)mode;
#line 1165 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 1174 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 1167 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template< class T> static __forceinline T 
#line 1168 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
surf1DLayeredread(::surface< void, 241>  surf, int x, int layer, ::cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 1169 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1175 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}











#line 1188 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 1177 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template< class T> static __forceinline void 
#line 1178 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
surf1DLayeredread(T *res, ::surface< void, 241>  surf, int x, int layer, ::cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 1179 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)layer;(void)mode;
#line 1181 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 1190 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 1184 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline char surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1185 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1187 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 1196 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 1190 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline signed char surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1191 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1193 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 1202 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 1196 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline unsigned char surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1197 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1199 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 1208 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 1202 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline char1 surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1203 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1205 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 1214 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 1208 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline uchar1 surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1209 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1211 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 1220 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 1214 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline char2 surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1215 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1219 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}









#line 1230 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 1222 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline uchar2 surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1223 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1225 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 1234 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 1228 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline char4 surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1229 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1233 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}









#line 1244 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 1236 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline uchar4 surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1237 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1239 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 1248 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 1242 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline short surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1243 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1245 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 1254 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 1248 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline unsigned short surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1249 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1251 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 1260 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 1254 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline short1 surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1255 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1257 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 1266 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 1260 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline ushort1 surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1261 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1263 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 1272 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 1266 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline short2 surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1267 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1271 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}









#line 1282 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 1274 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline ushort2 surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1275 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1277 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 1286 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 1280 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline short4 surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1281 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1285 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}









#line 1296 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 1288 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline ushort4 surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1289 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1291 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 1300 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 1294 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline int surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1295 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1297 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 1306 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 1300 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline unsigned surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1301 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1303 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 1312 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 1306 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline int1 surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1307 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1309 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 1318 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 1312 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline uint1 surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1313 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1315 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 1324 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 1318 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline int2 surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1319 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1323 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}









#line 1334 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 1326 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline uint2 surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1327 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1329 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 1338 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 1332 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline int4 surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1333 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1337 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}









#line 1348 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 1340 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline uint4 surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1341 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1343 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 1352 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 1346 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline __int64 surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1347 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1349 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 1358 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 1352 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline unsigned __int64 surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1353 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1355 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 1364 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 1358 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline longlong1 surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1359 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1361 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 1370 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 1364 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline ulonglong1 surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1365 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1367 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 1376 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 1370 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline longlong2 surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1371 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1375 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}









#line 1386 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 1378 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline ulonglong2 surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1379 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1381 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 1390 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 1386 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline long surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1387 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1389 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 1398 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 1392 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline unsigned long surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1393 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1395 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 1404 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 1398 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline long1 surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1399 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1401 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 1410 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 1404 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline ulong1 surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1405 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1407 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 1416 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 1410 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline long2 surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1411 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1415 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}









#line 1426 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 1418 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline ulong2 surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1419 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1423 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}









#line 1434 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 1426 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline long4 surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1427 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1431 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}









#line 1442 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 1434 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline ulong4 surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1435 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1439 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}









#line 1450 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 1444 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline float surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1445 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1447 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 1456 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 1450 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline float1 surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1451 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1453 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 1462 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 1456 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline float2 surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1457 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1461 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}









#line 1472 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 1464 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline float4 surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1465 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1469 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}









#line 1480 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 1515 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template< class T> static __forceinline void 
#line 1516 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
surf2DLayeredread(T *res, ::surface< void, 242>  surf, int x, int y, int layer, int s, ::cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 1517 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)y;(void)layer;(void)s;(void)mode;
#line 1524 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 1533 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 1526 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template< class T> static __forceinline T 
#line 1527 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
surf2DLayeredread(::surface< void, 242>  surf, int x, int y, int layer, ::cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 1528 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1534 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}











#line 1547 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 1536 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template< class T> static __forceinline void 
#line 1537 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
surf2DLayeredread(T *res, ::surface< void, 242>  surf, int x, int y, int layer, ::cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 1538 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1540 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 1549 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 1543 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline char surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1544 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1546 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 1555 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 1549 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline signed char surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1550 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1552 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 1561 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 1555 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline unsigned char surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1556 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1558 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 1567 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 1561 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline char1 surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1562 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1564 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 1573 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 1567 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline uchar1 surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1568 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1570 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 1579 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 1573 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline char2 surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1574 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1578 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}









#line 1589 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 1581 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline uchar2 surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1582 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1584 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 1593 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 1587 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline char4 surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1588 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1592 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}









#line 1603 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 1595 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline uchar4 surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1596 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1598 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 1607 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 1601 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline short surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1602 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1604 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 1613 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 1607 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline unsigned short surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1608 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1610 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 1619 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 1613 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline short1 surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1614 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1616 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 1625 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 1619 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline ushort1 surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1620 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1622 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 1631 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 1625 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline short2 surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1626 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1630 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}









#line 1641 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 1633 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline ushort2 surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1634 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1636 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 1645 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 1639 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline short4 surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1640 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1644 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}









#line 1655 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 1647 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline ushort4 surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1648 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1650 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 1659 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 1653 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline int surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1654 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1656 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 1665 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 1659 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline unsigned surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1660 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1662 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 1671 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 1665 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline int1 surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1666 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1668 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 1677 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 1671 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline uint1 surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1672 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1674 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 1683 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 1677 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline int2 surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1678 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1682 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}









#line 1693 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 1685 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline uint2 surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1686 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1688 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 1697 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 1691 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline int4 surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1692 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1696 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}









#line 1707 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 1699 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline uint4 surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1700 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1702 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 1711 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 1705 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline __int64 surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1706 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1708 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 1717 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 1711 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline unsigned __int64 surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1712 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1714 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 1723 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 1717 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline longlong1 surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1718 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1720 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 1729 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 1723 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline ulonglong1 surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1724 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1726 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 1735 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 1729 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline longlong2 surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1730 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1734 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}









#line 1745 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 1737 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline ulonglong2 surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1738 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1740 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 1749 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 1745 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline long surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1746 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1748 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 1757 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 1751 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline unsigned long surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1752 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1754 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 1763 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 1757 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline long1 surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1758 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1760 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 1769 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 1763 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline ulong1 surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1764 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1766 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 1775 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 1769 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline long2 surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1770 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1774 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}









#line 1785 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 1777 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline ulong2 surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1778 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1782 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}









#line 1793 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 1785 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline long4 surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1786 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1790 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}









#line 1801 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 1793 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline ulong4 surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1794 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1798 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}









#line 1809 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 1803 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline float surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1804 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1806 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 1815 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 1809 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline float1 surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1810 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1812 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 1821 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 1815 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline float2 surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1816 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1820 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}









#line 1831 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 1823 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline float4 surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1824 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1828 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}









#line 1839 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 1851 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template< class T> static __forceinline void 
#line 1852 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
surfCubemapread(T *res, ::surface< void, 12>  surf, int x, int y, int face, int s, ::cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 1853 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)y;(void)face;(void)s;(void)mode;
#line 1860 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 1869 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 1862 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template< class T> static __forceinline T 
#line 1863 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
surfCubemapread(::surface< void, 12>  surf, int x, int y, int face, ::cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 1864 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1870 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}











#line 1883 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 1872 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template< class T> static __forceinline void 
#line 1873 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
surfCubemapread(T *res, ::surface< void, 12>  surf, int x, int y, int face, ::cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 1874 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1876 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 1885 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 1879 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline char surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1880 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1882 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 1891 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 1885 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline signed char surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1886 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1888 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 1897 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 1891 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline unsigned char surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1892 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1894 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 1903 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 1897 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline char1 surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1898 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1900 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 1909 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 1903 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline uchar1 surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1904 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1906 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 1915 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 1909 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline char2 surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1910 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1914 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}









#line 1925 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 1917 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline uchar2 surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1918 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1920 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 1929 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 1923 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline char4 surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1924 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1928 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}









#line 1939 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 1931 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline uchar4 surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1932 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1934 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 1943 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 1937 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline short surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1938 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1940 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 1949 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 1943 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline unsigned short surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1944 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1946 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 1955 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 1949 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline short1 surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1950 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1952 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 1961 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 1955 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline ushort1 surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1956 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1958 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 1967 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 1961 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline short2 surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1962 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1966 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}









#line 1977 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 1969 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline ushort2 surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1970 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1972 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 1981 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 1975 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline short4 surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1976 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1980 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}









#line 1991 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 1983 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline ushort4 surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1984 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1986 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 1995 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 1989 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline int surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1990 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1992 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 2001 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 1995 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline unsigned surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1996 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1998 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 2007 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 2001 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline int1 surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 2002 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 2004 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 2013 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 2007 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline uint1 surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 2008 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 2010 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 2019 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 2013 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline int2 surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 2014 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 2018 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}









#line 2029 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 2021 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline uint2 surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 2022 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 2024 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 2033 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 2027 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline int4 surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 2028 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 2032 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}









#line 2043 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 2035 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline uint4 surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 2036 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 2038 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 2047 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 2041 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline __int64 surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 2042 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 2044 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 2053 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 2047 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline unsigned __int64 surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 2048 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 2050 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 2059 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 2053 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline longlong1 surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 2054 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 2056 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 2065 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 2059 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline ulonglong1 surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 2060 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 2062 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 2071 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 2065 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline longlong2 surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 2066 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 2070 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}









#line 2081 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 2073 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline ulonglong2 surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 2074 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 2076 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 2085 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 2081 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline long surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 2082 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 2084 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 2093 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 2087 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline unsigned long surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 2088 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 2090 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 2099 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 2093 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline long1 surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 2094 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 2096 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 2105 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 2099 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline ulong1 surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 2100 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 2102 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 2111 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 2105 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline long2 surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 2106 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 2110 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}









#line 2121 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 2113 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline ulong2 surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 2114 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 2118 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}









#line 2129 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 2121 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline long4 surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 2122 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 2126 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}









#line 2137 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 2129 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline ulong4 surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 2130 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 2134 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}









#line 2145 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 2139 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline float surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 2140 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 2142 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 2151 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 2145 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline float1 surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 2146 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 2148 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 2157 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 2151 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline float2 surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 2152 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 2156 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}









#line 2167 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 2159 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline float4 surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 2160 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 2164 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}









#line 2175 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 2188 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template< class T> static __forceinline void 
#line 2189 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
surfCubemapLayeredread(T *res, ::surface< void, 252>  surf, int x, int y, int layerFace, int s, ::cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2190 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)y;(void)layerFace;(void)s;(void)mode;
#line 2197 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 2206 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 2199 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template< class T> static __forceinline T 
#line 2200 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
surfCubemapLayeredread(::surface< void, 252>  surf, int x, int y, int layerFace, ::cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2201 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2207 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}











#line 2220 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 2209 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template< class T> static __forceinline void 
#line 2210 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
surfCubemapLayeredread(T *res, ::surface< void, 252>  surf, int x, int y, int layerFace, ::cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2211 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2213 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 2222 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 2216 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline char surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2217 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2219 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 2228 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 2222 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline signed char surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2223 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2225 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 2234 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 2228 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline unsigned char surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2229 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2231 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 2240 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 2234 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline char1 surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2235 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2237 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 2246 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 2240 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline uchar1 surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2241 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2243 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 2252 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 2246 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline char2 surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2247 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2251 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}









#line 2262 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 2254 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline uchar2 surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2255 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2257 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 2266 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 2260 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline char4 surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2261 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2265 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}









#line 2276 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 2268 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline uchar4 surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2269 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2271 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 2280 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 2274 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline short surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2275 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2277 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 2286 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 2280 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline unsigned short surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2281 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2283 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 2292 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 2286 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline short1 surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2287 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2289 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 2298 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 2292 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline ushort1 surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2293 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2295 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 2304 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 2298 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline short2 surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2299 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2303 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}









#line 2314 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 2306 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline ushort2 surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2307 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2309 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 2318 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 2312 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline short4 surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2313 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2317 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}









#line 2328 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 2320 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline ushort4 surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2321 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2323 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 2332 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 2326 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline int surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2327 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2329 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 2338 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 2332 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline unsigned surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2333 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2335 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 2344 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 2338 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline int1 surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2339 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2341 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 2350 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 2344 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline uint1 surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2345 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2347 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 2356 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 2350 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline int2 surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2351 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2355 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}









#line 2366 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 2358 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline uint2 surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2359 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2361 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 2370 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 2364 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline int4 surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2365 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2369 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}









#line 2380 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 2372 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline uint4 surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2373 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2375 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 2384 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 2378 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline __int64 surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2379 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2381 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 2390 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 2384 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline unsigned __int64 surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2385 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2387 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 2396 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 2390 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline longlong1 surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2391 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2393 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 2402 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 2396 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline ulonglong1 surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2397 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2399 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 2408 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 2402 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline longlong2 surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2403 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2407 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}









#line 2418 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 2410 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline ulonglong2 surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2411 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2413 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 2422 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 2418 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline long surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2419 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2421 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 2430 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 2424 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline unsigned long surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2425 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2427 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 2436 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 2430 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline long1 surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2431 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2433 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 2442 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 2436 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline ulong1 surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2437 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2439 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 2448 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 2442 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline long2 surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2443 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2447 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}









#line 2458 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 2450 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline ulong2 surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2451 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2455 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}









#line 2466 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 2458 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline long4 surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2459 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2463 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}









#line 2474 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 2466 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline ulong4 surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2467 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2471 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}









#line 2482 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 2476 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline float surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2477 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2479 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 2488 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 2482 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline float1 surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2483 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2485 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 2494 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 2488 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline float2 surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2489 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2493 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}









#line 2504 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 2496 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template<> __forceinline float4 surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2497 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2501 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}









#line 2512 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 2537 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template< class T> static __forceinline void 
#line 2538 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
surf1Dwrite(T val, ::surface< void, 1>  surf, int x, int s, ::cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2539 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)s;(void)mode;
#line 2557 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}

























#line 2584 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 2559 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template< class T> static __forceinline void 
#line 2560 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
surf1Dwrite(T val, ::surface< void, 1>  surf, int x, ::cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2561 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 2563 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 2572 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 2566 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf1Dwrite(char val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2568 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf1Dwrite(signed char val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2570 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf1Dwrite(unsigned char val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2572 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf1Dwrite(char1 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2574 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf1Dwrite(uchar1 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2576 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf1Dwrite(char2 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2578 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf1Dwrite(uchar2 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2580 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf1Dwrite(char4 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2582 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf1Dwrite(uchar4 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2584 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf1Dwrite(short val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2586 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf1Dwrite(unsigned short val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2588 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf1Dwrite(short1 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2590 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf1Dwrite(ushort1 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2592 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf1Dwrite(short2 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2594 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf1Dwrite(ushort2 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2596 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf1Dwrite(short4 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2598 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf1Dwrite(ushort4 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2600 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf1Dwrite(int val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2602 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf1Dwrite(unsigned val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2604 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf1Dwrite(int1 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2606 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf1Dwrite(uint1 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2608 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf1Dwrite(int2 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2610 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf1Dwrite(uint2 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2612 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf1Dwrite(int4 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2614 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf1Dwrite(uint4 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2616 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf1Dwrite(__int64 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2618 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf1Dwrite(unsigned __int64 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2620 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf1Dwrite(longlong1 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2622 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf1Dwrite(ulonglong1 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2624 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf1Dwrite(longlong2 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2626 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf1Dwrite(ulonglong2 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2630 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf1Dwrite(long val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2632 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf1Dwrite(unsigned long val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2634 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf1Dwrite(long1 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2636 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf1Dwrite(ulong1 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2638 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf1Dwrite(long2 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2640 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf1Dwrite(ulong2 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2642 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf1Dwrite(long4 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2644 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf1Dwrite(ulong4 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2648 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf1Dwrite(float val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2650 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf1Dwrite(float1 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2652 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf1Dwrite(float2 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2654 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf1Dwrite(float4 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2690 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template< class T> static __forceinline void 
#line 2691 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
surf2Dwrite(T val, ::surface< void, 2>  surf, int x, int y, int s, ::cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2692 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)s;(void)mode;
#line 2710 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}

























#line 2737 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 2712 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template< class T> static __forceinline void 
#line 2713 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
surf2Dwrite(T val, ::surface< void, 2>  surf, int x, int y, ::cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2714 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 2716 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 2725 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 2719 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf2Dwrite(char val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2721 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf2Dwrite(signed char val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2723 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf2Dwrite(unsigned char val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2725 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf2Dwrite(char1 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2727 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf2Dwrite(uchar1 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2729 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf2Dwrite(char2 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2731 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf2Dwrite(uchar2 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2733 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf2Dwrite(char4 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2735 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf2Dwrite(uchar4 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2737 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf2Dwrite(short val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2739 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf2Dwrite(unsigned short val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2741 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf2Dwrite(short1 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2743 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf2Dwrite(ushort1 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2745 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf2Dwrite(short2 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2747 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf2Dwrite(ushort2 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2749 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf2Dwrite(short4 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2751 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf2Dwrite(ushort4 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2753 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf2Dwrite(int val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2755 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf2Dwrite(unsigned val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2757 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf2Dwrite(int1 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2759 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf2Dwrite(uint1 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2761 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf2Dwrite(int2 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2763 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf2Dwrite(uint2 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2765 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf2Dwrite(int4 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2767 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf2Dwrite(uint4 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2769 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf2Dwrite(__int64 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2771 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf2Dwrite(unsigned __int64 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2773 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf2Dwrite(longlong1 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2775 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf2Dwrite(ulonglong1 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2777 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf2Dwrite(longlong2 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2779 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf2Dwrite(ulonglong2 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2783 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf2Dwrite(long val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2785 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf2Dwrite(unsigned long val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2787 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf2Dwrite(long1 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2789 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf2Dwrite(ulong1 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2791 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf2Dwrite(long2 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2793 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf2Dwrite(ulong2 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2795 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf2Dwrite(long4 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2797 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf2Dwrite(ulong4 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2801 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf2Dwrite(float val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2803 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf2Dwrite(float1 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2805 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf2Dwrite(float2 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2807 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf2Dwrite(float4 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2843 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template< class T> static __forceinline void 
#line 2844 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
surf3Dwrite(T val, ::surface< void, 3>  surf, int x, int y, int z, int s, ::cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2845 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)s;(void)mode;
#line 2863 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}

























#line 2890 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 2865 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template< class T> static __forceinline void 
#line 2866 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
surf3Dwrite(T val, ::surface< void, 3>  surf, int x, int y, int z, ::cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2867 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 2869 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 2878 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 2872 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf3Dwrite(char val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2874 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf3Dwrite(signed char val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2876 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf3Dwrite(unsigned char val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2878 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf3Dwrite(char1 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2880 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf3Dwrite(uchar1 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2882 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf3Dwrite(char2 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2884 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf3Dwrite(uchar2 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2886 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf3Dwrite(char4 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2888 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf3Dwrite(uchar4 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2890 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf3Dwrite(short val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2892 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf3Dwrite(unsigned short val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2894 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf3Dwrite(short1 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2896 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf3Dwrite(ushort1 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2898 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf3Dwrite(short2 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2900 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf3Dwrite(ushort2 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2902 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf3Dwrite(short4 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2904 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf3Dwrite(ushort4 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2906 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf3Dwrite(int val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2908 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf3Dwrite(unsigned val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2910 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf3Dwrite(int1 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2912 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf3Dwrite(uint1 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2914 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf3Dwrite(int2 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2916 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf3Dwrite(uint2 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2918 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf3Dwrite(int4 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2920 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf3Dwrite(uint4 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2922 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf3Dwrite(__int64 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2924 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf3Dwrite(unsigned __int64 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2926 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf3Dwrite(longlong1 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2928 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf3Dwrite(ulonglong1 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2930 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf3Dwrite(longlong2 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2932 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf3Dwrite(ulonglong2 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2936 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf3Dwrite(long val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2938 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf3Dwrite(unsigned long val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2940 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf3Dwrite(long1 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2942 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf3Dwrite(ulong1 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2944 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf3Dwrite(long2 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2946 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf3Dwrite(ulong2 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2948 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf3Dwrite(long4 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2950 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf3Dwrite(ulong4 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2954 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf3Dwrite(float val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2956 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf3Dwrite(float1 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2958 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf3Dwrite(float2 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2960 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf3Dwrite(float4 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2996 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template< class T> static __forceinline void 
#line 2997 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
surf1DLayeredwrite(T val, ::surface< void, 241>  surf, int x, int layer, int s, ::cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2998 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)s;(void)mode;
#line 3016 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}

























#line 3043 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 3018 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template< class T> static __forceinline void 
#line 3019 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
surf1DLayeredwrite(T val, ::surface< void, 241>  surf, int x, int layer, ::cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3020 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 3022 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 3031 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 3025 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf1DLayeredwrite(char val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3027 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf1DLayeredwrite(signed char val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3029 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf1DLayeredwrite(unsigned char val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3031 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf1DLayeredwrite(char1 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3033 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf1DLayeredwrite(uchar1 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3035 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf1DLayeredwrite(char2 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3037 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf1DLayeredwrite(uchar2 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3039 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf1DLayeredwrite(char4 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3041 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf1DLayeredwrite(uchar4 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3043 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf1DLayeredwrite(short val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3045 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf1DLayeredwrite(unsigned short val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3047 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf1DLayeredwrite(short1 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3049 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf1DLayeredwrite(ushort1 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3051 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf1DLayeredwrite(short2 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3053 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf1DLayeredwrite(ushort2 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3055 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf1DLayeredwrite(short4 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3057 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf1DLayeredwrite(ushort4 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3059 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf1DLayeredwrite(int val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3061 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf1DLayeredwrite(unsigned val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3063 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf1DLayeredwrite(int1 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3065 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf1DLayeredwrite(uint1 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3067 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf1DLayeredwrite(int2 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3069 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf1DLayeredwrite(uint2 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3071 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf1DLayeredwrite(int4 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3073 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf1DLayeredwrite(uint4 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3075 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf1DLayeredwrite(__int64 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3077 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf1DLayeredwrite(unsigned __int64 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3079 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf1DLayeredwrite(longlong1 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3081 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf1DLayeredwrite(ulonglong1 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3083 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf1DLayeredwrite(longlong2 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3085 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf1DLayeredwrite(ulonglong2 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3089 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf1DLayeredwrite(long val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3091 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf1DLayeredwrite(unsigned long val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3093 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf1DLayeredwrite(long1 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3095 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf1DLayeredwrite(ulong1 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3097 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf1DLayeredwrite(long2 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3099 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf1DLayeredwrite(ulong2 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3101 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf1DLayeredwrite(long4 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3103 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf1DLayeredwrite(ulong4 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3107 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf1DLayeredwrite(float val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3109 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf1DLayeredwrite(float1 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3111 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf1DLayeredwrite(float2 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3113 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf1DLayeredwrite(float4 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3160 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template< class T> static __forceinline void 
#line 3161 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
surf2DLayeredwrite(T val, ::surface< void, 242>  surf, int x, int y, int layer, int s, ::cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3162 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)s;(void)mode;
#line 3180 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}

























#line 3207 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 3182 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template< class T> static __forceinline void 
#line 3183 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
surf2DLayeredwrite(T val, ::surface< void, 242>  surf, int x, int y, int layer, ::cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3184 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 3186 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 3195 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 3189 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf2DLayeredwrite(char val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3191 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf2DLayeredwrite(signed char val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3193 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf2DLayeredwrite(unsigned char val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3195 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf2DLayeredwrite(char1 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3197 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf2DLayeredwrite(uchar1 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3199 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf2DLayeredwrite(char2 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3201 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf2DLayeredwrite(uchar2 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3203 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf2DLayeredwrite(char4 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3205 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf2DLayeredwrite(uchar4 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3207 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf2DLayeredwrite(short val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3209 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf2DLayeredwrite(unsigned short val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3211 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf2DLayeredwrite(short1 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3213 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf2DLayeredwrite(ushort1 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3215 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf2DLayeredwrite(short2 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3217 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf2DLayeredwrite(ushort2 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3219 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf2DLayeredwrite(short4 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3221 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf2DLayeredwrite(ushort4 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3223 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf2DLayeredwrite(int val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3225 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf2DLayeredwrite(unsigned val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3227 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf2DLayeredwrite(int1 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3229 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf2DLayeredwrite(uint1 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3231 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf2DLayeredwrite(int2 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3233 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf2DLayeredwrite(uint2 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3235 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf2DLayeredwrite(int4 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3237 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf2DLayeredwrite(uint4 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3239 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf2DLayeredwrite(__int64 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3241 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf2DLayeredwrite(unsigned __int64 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3243 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf2DLayeredwrite(longlong1 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3245 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf2DLayeredwrite(ulonglong1 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3247 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf2DLayeredwrite(longlong2 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3249 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf2DLayeredwrite(ulonglong2 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3253 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf2DLayeredwrite(long val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3255 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf2DLayeredwrite(unsigned long val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3257 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf2DLayeredwrite(long1 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3259 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf2DLayeredwrite(ulong1 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3261 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf2DLayeredwrite(long2 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3263 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf2DLayeredwrite(ulong2 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3265 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf2DLayeredwrite(long4 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3267 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf2DLayeredwrite(ulong4 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3271 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf2DLayeredwrite(float val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3273 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf2DLayeredwrite(float1 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3275 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf2DLayeredwrite(float2 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3277 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surf2DLayeredwrite(float4 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3302 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template< class T> static __forceinline void 
#line 3303 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
surfCubemapwrite(T val, ::surface< void, 12>  surf, int x, int y, int face, int s, ::cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3304 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)s;(void)mode;
#line 3322 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}

























#line 3349 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 3324 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template< class T> static __forceinline void 
#line 3325 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
surfCubemapwrite(T val, ::surface< void, 12>  surf, int x, int y, int face, ::cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3326 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 3328 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 3337 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 3331 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surfCubemapwrite(char val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3333 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surfCubemapwrite(signed char val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3335 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surfCubemapwrite(unsigned char val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3337 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surfCubemapwrite(char1 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3339 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surfCubemapwrite(uchar1 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3341 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surfCubemapwrite(char2 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3343 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surfCubemapwrite(uchar2 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3345 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surfCubemapwrite(char4 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3347 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surfCubemapwrite(uchar4 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3349 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surfCubemapwrite(short val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3351 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surfCubemapwrite(unsigned short val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3353 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surfCubemapwrite(short1 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3355 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surfCubemapwrite(ushort1 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3357 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surfCubemapwrite(short2 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3359 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surfCubemapwrite(ushort2 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3361 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surfCubemapwrite(short4 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3363 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surfCubemapwrite(ushort4 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3365 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surfCubemapwrite(int val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3367 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surfCubemapwrite(unsigned val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3369 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surfCubemapwrite(int1 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3371 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surfCubemapwrite(uint1 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3373 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surfCubemapwrite(int2 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3375 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surfCubemapwrite(uint2 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3377 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surfCubemapwrite(int4 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3379 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surfCubemapwrite(uint4 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3381 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surfCubemapwrite(__int64 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3383 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surfCubemapwrite(unsigned __int64 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3385 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surfCubemapwrite(longlong1 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3387 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surfCubemapwrite(ulonglong1 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3389 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surfCubemapwrite(longlong2 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3391 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surfCubemapwrite(ulonglong2 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3395 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surfCubemapwrite(long val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3397 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surfCubemapwrite(unsigned long val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3399 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surfCubemapwrite(long1 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3401 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surfCubemapwrite(ulong1 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3403 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surfCubemapwrite(long2 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3405 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surfCubemapwrite(ulong2 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3407 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surfCubemapwrite(long4 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3409 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surfCubemapwrite(ulong4 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3413 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surfCubemapwrite(float val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3415 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surfCubemapwrite(float1 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3417 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surfCubemapwrite(float2 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3419 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surfCubemapwrite(float4 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3444 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template< class T> static __forceinline void 
#line 3445 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
surfCubemapLayeredwrite(T val, ::surface< void, 252>  surf, int x, int y, int layerFace, int s, ::cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3446 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)s;(void)mode;
#line 3464 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}

























#line 3491 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 3466 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
template< class T> static __forceinline void 
#line 3467 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
surfCubemapLayeredwrite(T val, ::surface< void, 252>  surf, int x, int y, int layerFace, ::cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3468 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 3470 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
::exit(___);}







#line 3479 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
#line 3473 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surfCubemapLayeredwrite(char val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3475 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surfCubemapLayeredwrite(signed char val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3477 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surfCubemapLayeredwrite(unsigned char val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3479 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surfCubemapLayeredwrite(char1 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3481 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surfCubemapLayeredwrite(uchar1 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3483 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surfCubemapLayeredwrite(char2 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3485 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surfCubemapLayeredwrite(uchar2 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3487 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surfCubemapLayeredwrite(char4 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3489 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surfCubemapLayeredwrite(uchar4 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3491 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surfCubemapLayeredwrite(short val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3493 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surfCubemapLayeredwrite(unsigned short val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3495 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surfCubemapLayeredwrite(short1 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3497 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surfCubemapLayeredwrite(ushort1 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3499 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surfCubemapLayeredwrite(short2 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3501 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surfCubemapLayeredwrite(ushort2 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3503 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surfCubemapLayeredwrite(short4 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3505 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surfCubemapLayeredwrite(ushort4 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3507 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surfCubemapLayeredwrite(int val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3509 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surfCubemapLayeredwrite(unsigned val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3511 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surfCubemapLayeredwrite(int1 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3513 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surfCubemapLayeredwrite(uint1 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3515 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surfCubemapLayeredwrite(int2 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3517 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surfCubemapLayeredwrite(uint2 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3519 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surfCubemapLayeredwrite(int4 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3521 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surfCubemapLayeredwrite(uint4 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3523 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surfCubemapLayeredwrite(__int64 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3525 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surfCubemapLayeredwrite(unsigned __int64 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3527 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surfCubemapLayeredwrite(longlong1 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3529 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surfCubemapLayeredwrite(ulonglong1 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3531 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surfCubemapLayeredwrite(longlong2 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3533 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surfCubemapLayeredwrite(ulonglong2 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3537 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surfCubemapLayeredwrite(long val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3539 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surfCubemapLayeredwrite(unsigned long val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3541 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surfCubemapLayeredwrite(long1 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3543 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surfCubemapLayeredwrite(ulong1 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3545 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surfCubemapLayeredwrite(long2 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3547 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surfCubemapLayeredwrite(ulong2 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3549 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surfCubemapLayeredwrite(long4 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3551 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surfCubemapLayeredwrite(ulong4 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3555 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surfCubemapLayeredwrite(float val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3557 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surfCubemapLayeredwrite(float1 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3559 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surfCubemapLayeredwrite(float2 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3561 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.h"
static __forceinline void surfCubemapLayeredwrite(float4 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 94 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf1Dwrite(char val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 95 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 97 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 106 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 99 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf1Dwrite(signed char val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 100 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 102 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 111 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 104 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf1Dwrite(unsigned char val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 105 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 107 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 116 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 109 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf1Dwrite(char1 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 110 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 112 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 121 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 114 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf1Dwrite(uchar1 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 115 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 117 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 126 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 119 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf1Dwrite(char2 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 120 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 122 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 131 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 124 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf1Dwrite(uchar2 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 125 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 127 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 136 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 129 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf1Dwrite(char4 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 130 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 132 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 141 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 134 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf1Dwrite(uchar4 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 135 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 137 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 146 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 139 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf1Dwrite(short val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 140 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 142 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 151 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 144 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf1Dwrite(unsigned short val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 145 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 147 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 156 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 149 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf1Dwrite(short1 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 150 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 152 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 161 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 154 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf1Dwrite(ushort1 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 155 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 157 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 166 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 159 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf1Dwrite(short2 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 160 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 162 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 171 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 164 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf1Dwrite(ushort2 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 165 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 167 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 176 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 169 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf1Dwrite(short4 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 170 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 172 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 181 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 174 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf1Dwrite(ushort4 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 175 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 177 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 186 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 179 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf1Dwrite(int val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 180 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 182 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 191 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 184 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf1Dwrite(unsigned val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 185 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 187 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 196 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 189 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf1Dwrite(int1 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 190 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 192 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 201 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 194 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf1Dwrite(uint1 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 195 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 197 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 206 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 199 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf1Dwrite(int2 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 200 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 202 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 211 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 204 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf1Dwrite(uint2 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 205 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 207 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 216 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 209 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf1Dwrite(int4 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 210 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 212 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 221 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 214 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf1Dwrite(uint4 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 215 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 217 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 226 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 219 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf1Dwrite(__int64 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 220 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 222 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 231 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 224 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf1Dwrite(unsigned __int64 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 225 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 227 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 236 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 229 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf1Dwrite(longlong1 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 230 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 232 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 241 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 234 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf1Dwrite(ulonglong1 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 235 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 237 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 246 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 239 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf1Dwrite(longlong2 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 240 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 242 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 251 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 244 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf1Dwrite(ulonglong2 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 245 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 247 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 256 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 251 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf1Dwrite(long val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 252 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 254 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 263 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 256 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf1Dwrite(unsigned long val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 257 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 259 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 268 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 261 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf1Dwrite(long1 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 262 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 264 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 273 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 266 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf1Dwrite(ulong1 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 267 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 269 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 278 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 271 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf1Dwrite(long2 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 272 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 274 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 283 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 276 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf1Dwrite(ulong2 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 277 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 279 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 288 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 281 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf1Dwrite(long4 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 282 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 284 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 293 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 286 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf1Dwrite(ulong4 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 287 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 289 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 298 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 293 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf1Dwrite(float val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 294 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 296 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 305 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 298 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf1Dwrite(float1 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 299 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 301 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 310 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 303 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf1Dwrite(float2 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 304 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 306 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 315 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 308 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf1Dwrite(float4 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 309 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 311 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 320 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 336 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf2Dwrite(char val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 337 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 339 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 348 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 341 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf2Dwrite(signed char val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 342 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 344 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 353 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 346 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf2Dwrite(unsigned char val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 347 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 349 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 358 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 351 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf2Dwrite(char1 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 352 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 354 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 363 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 356 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf2Dwrite(uchar1 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 357 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 359 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 368 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 361 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf2Dwrite(char2 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 362 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 364 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 373 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 366 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf2Dwrite(uchar2 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 367 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 369 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 378 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 371 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf2Dwrite(char4 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 372 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 374 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 383 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 376 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf2Dwrite(uchar4 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 377 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 379 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 388 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 381 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf2Dwrite(short val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 382 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 384 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 393 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 386 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf2Dwrite(unsigned short val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 387 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 389 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 398 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 391 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf2Dwrite(short1 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 392 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 394 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 403 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 396 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf2Dwrite(ushort1 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 397 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 399 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 408 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 401 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf2Dwrite(short2 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 402 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 404 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 413 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 406 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf2Dwrite(ushort2 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 407 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 409 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 418 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 411 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf2Dwrite(short4 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 412 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 414 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 423 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 416 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf2Dwrite(ushort4 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 417 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 419 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 428 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 421 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf2Dwrite(int val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 422 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 424 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 433 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 426 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf2Dwrite(unsigned val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 427 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 429 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 438 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 431 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf2Dwrite(int1 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 432 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 434 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 443 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 436 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf2Dwrite(uint1 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 437 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 439 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 448 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 441 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf2Dwrite(int2 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 442 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 444 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 453 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 446 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf2Dwrite(uint2 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 447 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 449 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 458 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 451 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf2Dwrite(int4 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 452 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 454 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 463 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 456 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf2Dwrite(uint4 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 457 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 459 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 468 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 461 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf2Dwrite(__int64 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 462 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 464 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 473 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 466 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf2Dwrite(unsigned __int64 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 467 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 469 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 478 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 471 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf2Dwrite(longlong1 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 472 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 474 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 483 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 476 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf2Dwrite(ulonglong1 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 477 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 479 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 488 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 481 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf2Dwrite(longlong2 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 482 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 484 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 493 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 486 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf2Dwrite(ulonglong2 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 487 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 489 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 498 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 493 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf2Dwrite(long val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 494 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 496 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 505 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 498 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf2Dwrite(unsigned long val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 499 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 501 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 510 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 503 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf2Dwrite(long1 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 504 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 506 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 515 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 508 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf2Dwrite(ulong1 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 509 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 511 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 520 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 513 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf2Dwrite(long2 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 514 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 516 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 525 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 518 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf2Dwrite(ulong2 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 519 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 521 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 530 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 523 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf2Dwrite(long4 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 524 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 526 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 535 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 528 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf2Dwrite(ulong4 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 529 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 531 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 540 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 535 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf2Dwrite(float val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 536 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 538 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 547 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 540 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf2Dwrite(float1 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 541 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 543 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 552 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 545 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf2Dwrite(float2 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 546 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 548 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 557 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 550 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf2Dwrite(float4 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 551 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 553 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 562 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 578 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf3Dwrite(char val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 579 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 581 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 590 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 583 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf3Dwrite(signed char val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 584 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 586 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 595 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 588 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf3Dwrite(unsigned char val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 589 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 591 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 600 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 593 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf3Dwrite(char1 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 594 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 596 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 605 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 598 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf3Dwrite(uchar1 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 599 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 601 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 610 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 603 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf3Dwrite(char2 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 604 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 606 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 615 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 608 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf3Dwrite(uchar2 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 609 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 611 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 620 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 613 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf3Dwrite(char4 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 614 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 616 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 625 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 618 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf3Dwrite(uchar4 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 619 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 621 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 630 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 623 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf3Dwrite(short val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 624 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 626 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 635 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 628 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf3Dwrite(unsigned short val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 629 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 631 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 640 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 633 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf3Dwrite(short1 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 634 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 636 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 645 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 638 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf3Dwrite(ushort1 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 639 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 641 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 650 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 643 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf3Dwrite(short2 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 644 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 646 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 655 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 648 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf3Dwrite(ushort2 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 649 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 651 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 660 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 653 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf3Dwrite(short4 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 654 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 656 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 665 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 658 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf3Dwrite(ushort4 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 659 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 661 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 670 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 663 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf3Dwrite(int val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 664 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 666 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 675 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 668 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf3Dwrite(unsigned val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 669 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 671 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 680 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 673 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf3Dwrite(int1 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 674 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 676 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 685 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 678 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf3Dwrite(uint1 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 679 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 681 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 690 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 683 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf3Dwrite(int2 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 684 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 686 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 695 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 688 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf3Dwrite(uint2 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 689 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 691 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 700 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 693 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf3Dwrite(int4 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 694 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 696 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 705 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 698 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf3Dwrite(uint4 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 699 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 701 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 710 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 703 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf3Dwrite(__int64 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 704 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 706 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 715 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 708 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf3Dwrite(unsigned __int64 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 709 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 711 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 720 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 713 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf3Dwrite(longlong1 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 714 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 716 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 725 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 718 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf3Dwrite(ulonglong1 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 719 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 721 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 730 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 723 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf3Dwrite(longlong2 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 724 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 726 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 735 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 728 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf3Dwrite(ulonglong2 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 729 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 731 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 740 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 735 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf3Dwrite(long val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 736 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 738 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 747 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 740 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf3Dwrite(unsigned long val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 741 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 743 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 752 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 745 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf3Dwrite(long1 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 746 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 748 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 757 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 750 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf3Dwrite(ulong1 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 751 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 753 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 762 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 755 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf3Dwrite(long2 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 756 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 758 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 767 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 760 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf3Dwrite(ulong2 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 761 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 763 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 772 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 765 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf3Dwrite(long4 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 766 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 768 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 777 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 770 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf3Dwrite(ulong4 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 771 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 773 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 782 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 777 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf3Dwrite(float val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 778 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 780 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 789 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 782 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf3Dwrite(float1 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 783 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 785 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 794 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 787 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf3Dwrite(float2 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 788 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 790 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 799 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 792 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf3Dwrite(float4 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 793 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 795 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 804 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 820 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf1DLayeredwrite(char val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 821 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 823 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 832 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 825 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf1DLayeredwrite(signed char val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 826 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 828 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 837 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 830 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf1DLayeredwrite(unsigned char val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 831 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 833 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 842 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 835 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf1DLayeredwrite(char1 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 836 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 838 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 847 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 840 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf1DLayeredwrite(uchar1 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 841 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 843 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 852 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 845 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf1DLayeredwrite(char2 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 846 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 848 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 857 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 850 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf1DLayeredwrite(uchar2 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 851 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 853 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 862 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 855 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf1DLayeredwrite(char4 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 856 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 858 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 867 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 860 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf1DLayeredwrite(uchar4 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 861 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 863 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 872 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 865 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf1DLayeredwrite(short val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 866 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 868 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 877 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 870 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf1DLayeredwrite(unsigned short val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 871 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 873 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 882 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 875 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf1DLayeredwrite(short1 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 876 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 878 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 887 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 880 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf1DLayeredwrite(ushort1 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 881 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 883 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 892 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 885 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf1DLayeredwrite(short2 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 886 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 888 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 897 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 890 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf1DLayeredwrite(ushort2 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 891 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 893 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 902 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 895 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf1DLayeredwrite(short4 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 896 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 898 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 907 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 900 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf1DLayeredwrite(ushort4 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 901 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 903 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 912 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 905 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf1DLayeredwrite(int val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 906 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 908 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 917 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 910 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf1DLayeredwrite(unsigned val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 911 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 913 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 922 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 915 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf1DLayeredwrite(int1 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 916 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 918 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 927 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 920 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf1DLayeredwrite(uint1 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 921 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 923 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 932 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 925 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf1DLayeredwrite(int2 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 926 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 928 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 937 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 930 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf1DLayeredwrite(uint2 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 931 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 933 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 942 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 935 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf1DLayeredwrite(int4 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 936 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 938 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 947 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 940 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf1DLayeredwrite(uint4 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 941 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 943 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 952 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 945 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf1DLayeredwrite(__int64 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 946 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 948 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 957 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 950 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf1DLayeredwrite(unsigned __int64 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 951 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 953 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 962 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 955 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf1DLayeredwrite(longlong1 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 956 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 958 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 967 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 960 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf1DLayeredwrite(ulonglong1 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 961 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 963 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 972 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 965 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf1DLayeredwrite(longlong2 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 966 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 968 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 977 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 970 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf1DLayeredwrite(ulonglong2 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 971 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 973 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 982 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 977 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf1DLayeredwrite(long val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 978 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 980 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 989 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 982 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf1DLayeredwrite(unsigned long val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 983 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 985 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 994 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 987 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf1DLayeredwrite(long1 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 988 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 990 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 999 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 992 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf1DLayeredwrite(ulong1 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 993 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 995 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 1004 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 997 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf1DLayeredwrite(long2 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 998 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 1000 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 1009 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 1002 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf1DLayeredwrite(ulong2 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1003 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 1005 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 1014 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 1007 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf1DLayeredwrite(long4 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1008 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 1010 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 1019 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 1012 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf1DLayeredwrite(ulong4 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1013 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 1015 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 1024 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 1019 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf1DLayeredwrite(float val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1020 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 1022 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 1031 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 1024 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf1DLayeredwrite(float1 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1025 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 1027 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 1036 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 1029 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf1DLayeredwrite(float2 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1030 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 1032 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 1041 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 1034 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf1DLayeredwrite(float4 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1035 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 1037 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 1046 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 1062 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf2DLayeredwrite(char val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1063 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1065 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 1074 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 1067 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf2DLayeredwrite(signed char val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1068 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1070 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 1079 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 1072 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf2DLayeredwrite(unsigned char val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1073 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1075 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 1084 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 1077 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf2DLayeredwrite(char1 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1078 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1080 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 1089 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 1082 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf2DLayeredwrite(uchar1 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1083 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1085 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 1094 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 1087 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf2DLayeredwrite(char2 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1088 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1090 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 1099 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 1092 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf2DLayeredwrite(uchar2 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1093 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1095 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 1104 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 1097 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf2DLayeredwrite(char4 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1098 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1100 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 1109 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 1102 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf2DLayeredwrite(uchar4 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1103 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1105 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 1114 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 1107 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf2DLayeredwrite(short val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1108 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1110 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 1119 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 1112 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf2DLayeredwrite(unsigned short val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1113 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1115 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 1124 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 1117 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf2DLayeredwrite(short1 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1118 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1120 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 1129 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 1122 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf2DLayeredwrite(ushort1 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1123 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1125 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 1134 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 1127 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf2DLayeredwrite(short2 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1128 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1130 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 1139 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 1132 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf2DLayeredwrite(ushort2 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1133 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1135 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 1144 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 1137 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf2DLayeredwrite(short4 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1138 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1140 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 1149 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 1142 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf2DLayeredwrite(ushort4 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1143 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1145 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 1154 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 1147 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf2DLayeredwrite(int val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1148 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1150 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 1159 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 1152 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf2DLayeredwrite(unsigned val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1153 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1155 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 1164 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 1157 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf2DLayeredwrite(int1 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1158 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1160 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 1169 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 1162 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf2DLayeredwrite(uint1 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1163 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1165 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 1174 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 1167 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf2DLayeredwrite(int2 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1168 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1170 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 1179 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 1172 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf2DLayeredwrite(uint2 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1173 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1175 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 1184 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 1177 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf2DLayeredwrite(int4 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1178 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1180 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 1189 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 1182 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf2DLayeredwrite(uint4 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1183 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1185 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 1194 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 1187 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf2DLayeredwrite(__int64 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1188 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1190 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 1199 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 1192 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf2DLayeredwrite(unsigned __int64 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1193 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1195 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 1204 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 1197 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf2DLayeredwrite(longlong1 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1198 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1200 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 1209 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 1202 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf2DLayeredwrite(ulonglong1 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1203 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1205 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 1214 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 1207 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf2DLayeredwrite(longlong2 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1208 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1210 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 1219 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 1212 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf2DLayeredwrite(ulonglong2 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1213 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1215 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 1224 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 1219 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf2DLayeredwrite(long val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1220 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1222 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 1231 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 1224 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf2DLayeredwrite(unsigned long val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1225 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1227 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 1236 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 1229 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf2DLayeredwrite(long1 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1230 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1232 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 1241 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 1234 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf2DLayeredwrite(ulong1 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1235 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1237 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 1246 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 1239 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf2DLayeredwrite(long2 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1240 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1242 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 1251 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 1244 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf2DLayeredwrite(ulong2 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1245 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1247 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 1256 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 1249 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf2DLayeredwrite(long4 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1250 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1252 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 1261 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 1254 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf2DLayeredwrite(ulong4 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1255 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1257 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 1266 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 1261 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf2DLayeredwrite(float val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1262 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1264 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 1273 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 1266 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf2DLayeredwrite(float1 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1267 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1269 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 1278 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 1271 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf2DLayeredwrite(float2 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1272 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1274 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 1283 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 1276 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surf2DLayeredwrite(float4 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1277 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1279 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 1288 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 1305 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surfCubemapwrite(char val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1306 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1308 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 1317 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 1310 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surfCubemapwrite(signed char val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1311 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1313 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 1322 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 1315 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surfCubemapwrite(unsigned char val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1316 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1318 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 1327 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 1320 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surfCubemapwrite(char1 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1321 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1323 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 1332 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 1325 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surfCubemapwrite(uchar1 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1326 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1328 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 1337 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 1330 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surfCubemapwrite(char2 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1331 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1333 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 1342 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 1335 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surfCubemapwrite(uchar2 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1336 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1338 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 1347 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 1340 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surfCubemapwrite(char4 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1341 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1343 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 1352 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 1345 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surfCubemapwrite(uchar4 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1346 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1348 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 1357 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 1350 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surfCubemapwrite(short val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1351 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1353 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 1362 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 1355 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surfCubemapwrite(unsigned short val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1356 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1358 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 1367 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 1360 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surfCubemapwrite(short1 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1361 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1363 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 1372 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 1365 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surfCubemapwrite(ushort1 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1366 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1368 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 1377 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 1370 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surfCubemapwrite(short2 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1371 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1373 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 1382 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 1375 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surfCubemapwrite(ushort2 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1376 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1378 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 1387 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 1380 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surfCubemapwrite(short4 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1381 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1383 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 1392 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 1385 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surfCubemapwrite(ushort4 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1386 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1388 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 1397 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 1390 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surfCubemapwrite(int val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1391 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1393 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 1402 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 1395 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surfCubemapwrite(unsigned val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1396 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1398 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 1407 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 1400 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surfCubemapwrite(int1 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1401 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1403 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 1412 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 1405 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surfCubemapwrite(uint1 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1406 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1408 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 1417 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 1410 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surfCubemapwrite(int2 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1411 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1413 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 1422 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 1415 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surfCubemapwrite(uint2 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1416 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1418 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 1427 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 1420 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surfCubemapwrite(int4 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1421 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1423 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 1432 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 1425 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surfCubemapwrite(uint4 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1426 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1428 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 1437 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 1430 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surfCubemapwrite(__int64 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1431 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1433 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 1442 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 1435 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surfCubemapwrite(unsigned __int64 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1436 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1438 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 1447 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 1440 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surfCubemapwrite(longlong1 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1441 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1443 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 1452 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 1445 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surfCubemapwrite(ulonglong1 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1446 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1448 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 1457 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 1450 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surfCubemapwrite(longlong2 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1451 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1453 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 1462 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 1455 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surfCubemapwrite(ulonglong2 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1456 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1458 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 1467 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 1462 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surfCubemapwrite(long val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1463 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1465 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 1474 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 1467 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surfCubemapwrite(unsigned long val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1468 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1470 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 1479 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 1472 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surfCubemapwrite(long1 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1473 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1475 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 1484 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 1477 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surfCubemapwrite(ulong1 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1478 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1480 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 1489 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 1482 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surfCubemapwrite(long2 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1483 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1485 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 1494 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 1487 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surfCubemapwrite(ulong2 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1488 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1490 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 1499 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 1492 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surfCubemapwrite(long4 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1493 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1495 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 1504 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 1497 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surfCubemapwrite(ulong4 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1498 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1500 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 1509 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 1504 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surfCubemapwrite(float val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1505 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1507 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 1516 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 1509 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surfCubemapwrite(float1 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1510 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1512 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 1521 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 1514 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surfCubemapwrite(float2 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1515 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1517 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 1526 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 1519 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surfCubemapwrite(float4 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1520 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1522 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 1531 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 1548 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(char val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 1549 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 1551 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 1560 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 1553 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(signed char val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 1554 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 1556 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 1565 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 1558 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(unsigned char val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 1559 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 1561 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 1570 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 1563 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(char1 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 1564 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 1566 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 1575 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 1568 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(uchar1 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 1569 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 1571 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 1580 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 1573 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(char2 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 1574 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 1576 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 1585 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 1578 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(uchar2 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 1579 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 1581 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 1590 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 1583 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(char4 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 1584 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 1586 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 1595 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 1588 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(uchar4 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 1589 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 1591 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 1600 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 1593 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(short val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 1594 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 1596 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 1605 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 1598 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(unsigned short val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 1599 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 1601 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 1610 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 1603 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(short1 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 1604 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 1606 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 1615 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 1608 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(ushort1 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 1609 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 1611 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 1620 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 1613 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(short2 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 1614 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 1616 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 1625 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 1618 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(ushort2 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 1619 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 1621 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 1630 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 1623 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(short4 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 1624 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 1626 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 1635 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 1628 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(ushort4 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 1629 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 1631 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 1640 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 1633 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(int val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 1634 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 1636 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 1645 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 1638 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(unsigned val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 1639 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 1641 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 1650 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 1643 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(int1 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 1644 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 1646 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 1655 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 1648 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(uint1 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 1649 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 1651 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 1660 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 1653 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(int2 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 1654 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 1656 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 1665 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 1658 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(uint2 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 1659 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 1661 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 1670 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 1663 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(int4 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 1664 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 1666 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 1675 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 1668 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(uint4 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 1669 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 1671 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 1680 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 1673 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(__int64 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 1674 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 1676 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 1685 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 1678 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(unsigned __int64 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 1679 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 1681 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 1690 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 1683 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(longlong1 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 1684 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 1686 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 1695 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 1688 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(ulonglong1 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 1689 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 1691 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 1700 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 1693 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(longlong2 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 1694 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 1696 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 1705 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 1698 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(ulonglong2 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 1699 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 1701 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 1710 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 1705 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(long val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 1706 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 1708 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 1717 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 1710 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(unsigned long val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 1711 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 1713 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 1722 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 1715 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(long1 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 1716 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 1718 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 1727 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 1720 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(ulong1 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 1721 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 1723 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 1732 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 1725 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(long2 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 1726 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 1728 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 1737 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 1730 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(ulong2 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 1731 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 1733 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 1742 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 1735 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(long4 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 1736 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 1738 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 1747 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 1740 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(ulong4 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 1741 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 1743 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 1752 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 1747 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(float val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 1748 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 1750 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 1759 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 1752 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(float1 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 1753 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 1755 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 1764 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 1757 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(float2 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 1758 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 1760 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 1769 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 1762 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(float4 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 1763 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 1765 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
::exit(___);}







#line 1774 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_functions.hpp"
#line 146 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
template< class T, cudaTextureReadMode readMode> static __forceinline ::uint4 
#line 148 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
__utexfetchi(texture< T, 1, readMode>  t, ::int4 i) 
#line 149 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)i;
#line 151 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
::exit(___);}







#line 160 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
#line 153 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
template< class T, cudaTextureReadMode readMode> static __forceinline ::int4 
#line 155 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
__itexfetchi(texture< T, 1, readMode>  t, ::int4 i) 
#line 156 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)i;
#line 158 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
::exit(___);}







#line 167 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
#line 160 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
template< class T, cudaTextureReadMode readMode> static __forceinline ::float4 
#line 162 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
__ftexfetchi(texture< T, 1, readMode>  t, ::int4 i) 
#line 163 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)i;
#line 165 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
::exit(___);}







#line 174 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
#line 167 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
template< class T, int texType, cudaTextureReadMode readMode> static __forceinline ::uint4 
#line 169 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
__utexfetch(texture< T, texType, readMode>  t, ::float4 i, int d = texType) 
#line 170 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)i;(void)d;
#line 177 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
::exit(___);}















#line 194 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
#line 179 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
template< class T, int texType, cudaTextureReadMode readMode> static __forceinline ::int4 
#line 181 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
__itexfetch(texture< T, texType, readMode>  t, ::float4 i, int d = texType) 
#line 182 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)i;(void)d;
#line 189 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
::exit(___);}















#line 206 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
#line 191 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
template< class T, int texType, cudaTextureReadMode readMode> static __forceinline ::float4 
#line 193 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
__ftexfetch(texture< T, texType, readMode>  t, ::float4 i, int d = texType) 
#line 194 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)i;(void)d;
#line 201 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
::exit(___);}















#line 218 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
#line 203 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
template< class T, int texType, cudaTextureReadMode readMode> static __forceinline ::uint4 
#line 205 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
__utexfetchc(texture< T, texType, readMode>  t, ::float4 i) 
#line 206 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)i;
#line 208 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
::exit(___);}







#line 217 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
#line 210 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
template< class T, int texType, cudaTextureReadMode readMode> static __forceinline ::int4 
#line 212 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
__itexfetchc(texture< T, texType, readMode>  t, ::float4 i) 
#line 213 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)i;
#line 215 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
::exit(___);}







#line 224 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
#line 217 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
template< class T, int texType, cudaTextureReadMode readMode> static __forceinline ::float4 
#line 219 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
__ftexfetchc(texture< T, texType, readMode>  t, ::float4 i) 
#line 220 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)i;
#line 222 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
::exit(___);}







#line 231 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
#line 224 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
template< class T, int texType, cudaTextureReadMode readMode> static __forceinline ::uint4 
#line 226 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
__utexfetchl(texture< T, texType, readMode>  t, ::float4 i, int l, int d = texType & 15) 
#line 227 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)i;(void)l;(void)d;
#line 233 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
::exit(___);}













#line 248 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
#line 235 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
template< class T, int texType, cudaTextureReadMode readMode> static __forceinline ::int4 
#line 237 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
__itexfetchl(texture< T, texType, readMode>  t, ::float4 i, int l, int d = texType & 15) 
#line 238 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)i;(void)l;(void)d;
#line 244 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
::exit(___);}













#line 259 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
#line 246 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
template< class T, int texType, cudaTextureReadMode readMode> static __forceinline ::float4 
#line 248 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
__ftexfetchl(texture< T, texType, readMode>  t, ::float4 i, int l, int d = texType & 15) 
#line 249 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)i;(void)l;(void)d;
#line 255 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
::exit(___);}













#line 270 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
#line 257 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
template< class T, int texType, cudaTextureReadMode readMode> static __forceinline ::uint4 
#line 259 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
__utexfetchlc(texture< T, texType, readMode>  t, ::float4 i, int l) 
#line 260 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)i;(void)l;
#line 262 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
::exit(___);}







#line 271 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
#line 264 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
template< class T, int texType, cudaTextureReadMode readMode> static __forceinline ::int4 
#line 266 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
__itexfetchlc(texture< T, texType, readMode>  t, ::float4 i, int l) 
#line 267 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)i;(void)l;
#line 269 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
::exit(___);}







#line 278 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
#line 271 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
template< class T, int texType, cudaTextureReadMode readMode> static __forceinline ::float4 
#line 273 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
__ftexfetchlc(texture< T, texType, readMode>  t, ::float4 i, int l) 
#line 274 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)i;(void)l;
#line 276 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
::exit(___);}







#line 285 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
#line 285 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline char tex1Dfetch(texture< char, 1, cudaReadModeElementType>  t, int x); 
#line 287 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline signed char tex1Dfetch(texture< signed char, 1, cudaReadModeElementType>  t, int x); 
#line 289 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline unsigned char tex1Dfetch(texture< unsigned char, 1, cudaReadModeElementType>  t, int x); 
#line 291 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline char1 tex1Dfetch(texture< char1, 1, cudaReadModeElementType>  t, int x); 
#line 293 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline uchar1 tex1Dfetch(texture< uchar1, 1, cudaReadModeElementType>  t, int x); 
#line 295 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline char2 tex1Dfetch(texture< char2, 1, cudaReadModeElementType>  t, int x); 
#line 297 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline uchar2 tex1Dfetch(texture< uchar2, 1, cudaReadModeElementType>  t, int x); 
#line 299 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline char4 tex1Dfetch(texture< char4, 1, cudaReadModeElementType>  t, int x); 
#line 301 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline uchar4 tex1Dfetch(texture< uchar4, 1, cudaReadModeElementType>  t, int x); 
#line 309 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline short tex1Dfetch(texture< short, 1, cudaReadModeElementType>  t, int x); 
#line 311 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline unsigned short tex1Dfetch(texture< unsigned short, 1, cudaReadModeElementType>  t, int x); 
#line 313 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline short1 tex1Dfetch(texture< short1, 1, cudaReadModeElementType>  t, int x); 
#line 315 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline ushort1 tex1Dfetch(texture< ushort1, 1, cudaReadModeElementType>  t, int x); 
#line 317 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline short2 tex1Dfetch(texture< short2, 1, cudaReadModeElementType>  t, int x); 
#line 319 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline ushort2 tex1Dfetch(texture< ushort2, 1, cudaReadModeElementType>  t, int x); 
#line 321 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline short4 tex1Dfetch(texture< short4, 1, cudaReadModeElementType>  t, int x); 
#line 323 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline ushort4 tex1Dfetch(texture< ushort4, 1, cudaReadModeElementType>  t, int x); 
#line 331 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline int tex1Dfetch(texture< int, 1, cudaReadModeElementType>  t, int x); 
#line 333 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline unsigned tex1Dfetch(texture< unsigned, 1, cudaReadModeElementType>  t, int x); 
#line 335 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline int1 tex1Dfetch(texture< int1, 1, cudaReadModeElementType>  t, int x); 
#line 337 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline uint1 tex1Dfetch(texture< uint1, 1, cudaReadModeElementType>  t, int x); 
#line 339 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline int2 tex1Dfetch(texture< int2, 1, cudaReadModeElementType>  t, int x); 
#line 341 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline uint2 tex1Dfetch(texture< uint2, 1, cudaReadModeElementType>  t, int x); 
#line 343 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline int4 tex1Dfetch(texture< int4, 1, cudaReadModeElementType>  t, int x); 
#line 345 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline uint4 tex1Dfetch(texture< uint4, 1, cudaReadModeElementType>  t, int x); 
#line 355 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline long tex1Dfetch(texture< long, 1, cudaReadModeElementType>  t, int x); 
#line 357 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline unsigned long tex1Dfetch(texture< unsigned long, 1, cudaReadModeElementType>  t, int x); 
#line 359 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline long1 tex1Dfetch(texture< long1, 1, cudaReadModeElementType>  t, int x); 
#line 361 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline ulong1 tex1Dfetch(texture< ulong1, 1, cudaReadModeElementType>  t, int x); 
#line 363 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline long2 tex1Dfetch(texture< long2, 1, cudaReadModeElementType>  t, int x); 
#line 365 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline ulong2 tex1Dfetch(texture< ulong2, 1, cudaReadModeElementType>  t, int x); 
#line 367 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline long4 tex1Dfetch(texture< long4, 1, cudaReadModeElementType>  t, int x); 
#line 369 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline ulong4 tex1Dfetch(texture< ulong4, 1, cudaReadModeElementType>  t, int x); 
#line 379 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float tex1Dfetch(texture< float, 1, cudaReadModeElementType>  t, int x); 
#line 381 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float1 tex1Dfetch(texture< float1, 1, cudaReadModeElementType>  t, int x); 
#line 383 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float2 tex1Dfetch(texture< float2, 1, cudaReadModeElementType>  t, int x); 
#line 385 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex1Dfetch(texture< float4, 1, cudaReadModeElementType>  t, int x); 
#line 393 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float tex1Dfetch(texture< char, 1, cudaReadModeNormalizedFloat>  t, int x); 
#line 395 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float tex1Dfetch(texture< signed char, 1, cudaReadModeNormalizedFloat>  t, int x); 
#line 397 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float tex1Dfetch(texture< unsigned char, 1, cudaReadModeNormalizedFloat>  t, int x); 
#line 399 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float1 tex1Dfetch(texture< char1, 1, cudaReadModeNormalizedFloat>  t, int x); 
#line 401 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float1 tex1Dfetch(texture< uchar1, 1, cudaReadModeNormalizedFloat>  t, int x); 
#line 403 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float2 tex1Dfetch(texture< char2, 1, cudaReadModeNormalizedFloat>  t, int x); 
#line 405 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float2 tex1Dfetch(texture< uchar2, 1, cudaReadModeNormalizedFloat>  t, int x); 
#line 407 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex1Dfetch(texture< char4, 1, cudaReadModeNormalizedFloat>  t, int x); 
#line 409 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex1Dfetch(texture< uchar4, 1, cudaReadModeNormalizedFloat>  t, int x); 
#line 417 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float tex1Dfetch(texture< short, 1, cudaReadModeNormalizedFloat>  t, int x); 
#line 419 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float tex1Dfetch(texture< unsigned short, 1, cudaReadModeNormalizedFloat>  t, int x); 
#line 421 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float1 tex1Dfetch(texture< short1, 1, cudaReadModeNormalizedFloat>  t, int x); 
#line 423 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float1 tex1Dfetch(texture< ushort1, 1, cudaReadModeNormalizedFloat>  t, int x); 
#line 425 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float2 tex1Dfetch(texture< short2, 1, cudaReadModeNormalizedFloat>  t, int x); 
#line 427 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float2 tex1Dfetch(texture< ushort2, 1, cudaReadModeNormalizedFloat>  t, int x); 
#line 429 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex1Dfetch(texture< short4, 1, cudaReadModeNormalizedFloat>  t, int x); 
#line 431 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex1Dfetch(texture< ushort4, 1, cudaReadModeNormalizedFloat>  t, int x); 
#line 439 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline char tex1D(texture< char, 1, cudaReadModeElementType>  t, float x); 
#line 441 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline signed char tex1D(texture< signed char, 1, cudaReadModeElementType>  t, float x); 
#line 443 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline unsigned char tex1D(texture< unsigned char, 1, cudaReadModeElementType>  t, float x); 
#line 445 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline char1 tex1D(texture< char1, 1, cudaReadModeElementType>  t, float x); 
#line 447 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline uchar1 tex1D(texture< uchar1, 1, cudaReadModeElementType>  t, float x); 
#line 449 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline char2 tex1D(texture< char2, 1, cudaReadModeElementType>  t, float x); 
#line 451 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline uchar2 tex1D(texture< uchar2, 1, cudaReadModeElementType>  t, float x); 
#line 453 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline char4 tex1D(texture< char4, 1, cudaReadModeElementType>  t, float x); 
#line 455 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline uchar4 tex1D(texture< uchar4, 1, cudaReadModeElementType>  t, float x); 
#line 463 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline short tex1D(texture< short, 1, cudaReadModeElementType>  t, float x); 
#line 465 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline unsigned short tex1D(texture< unsigned short, 1, cudaReadModeElementType>  t, float x); 
#line 467 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline short1 tex1D(texture< short1, 1, cudaReadModeElementType>  t, float x); 
#line 469 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline ushort1 tex1D(texture< ushort1, 1, cudaReadModeElementType>  t, float x); 
#line 471 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline short2 tex1D(texture< short2, 1, cudaReadModeElementType>  t, float x); 
#line 473 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline ushort2 tex1D(texture< ushort2, 1, cudaReadModeElementType>  t, float x); 
#line 475 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline short4 tex1D(texture< short4, 1, cudaReadModeElementType>  t, float x); 
#line 477 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline ushort4 tex1D(texture< ushort4, 1, cudaReadModeElementType>  t, float x); 
#line 485 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline int tex1D(texture< int, 1, cudaReadModeElementType>  t, float x); 
#line 487 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline unsigned tex1D(texture< unsigned, 1, cudaReadModeElementType>  t, float x); 
#line 489 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline int1 tex1D(texture< int1, 1, cudaReadModeElementType>  t, float x); 
#line 491 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline uint1 tex1D(texture< uint1, 1, cudaReadModeElementType>  t, float x); 
#line 493 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline int2 tex1D(texture< int2, 1, cudaReadModeElementType>  t, float x); 
#line 495 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline uint2 tex1D(texture< uint2, 1, cudaReadModeElementType>  t, float x); 
#line 497 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline int4 tex1D(texture< int4, 1, cudaReadModeElementType>  t, float x); 
#line 499 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline uint4 tex1D(texture< uint4, 1, cudaReadModeElementType>  t, float x); 
#line 515 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline long tex1D(texture< long, 1, cudaReadModeElementType>  t, float x); 
#line 517 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline unsigned long tex1D(texture< unsigned long, 1, cudaReadModeElementType>  t, float x); 
#line 519 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline long1 tex1D(texture< long1, 1, cudaReadModeElementType>  t, float x); 
#line 521 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline ulong1 tex1D(texture< ulong1, 1, cudaReadModeElementType>  t, float x); 
#line 523 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline long2 tex1D(texture< long2, 1, cudaReadModeElementType>  t, float x); 
#line 525 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline ulong2 tex1D(texture< ulong2, 1, cudaReadModeElementType>  t, float x); 
#line 527 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline long4 tex1D(texture< long4, 1, cudaReadModeElementType>  t, float x); 
#line 529 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline ulong4 tex1D(texture< ulong4, 1, cudaReadModeElementType>  t, float x); 
#line 539 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float tex1D(texture< float, 1, cudaReadModeElementType>  t, float x); 
#line 541 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float1 tex1D(texture< float1, 1, cudaReadModeElementType>  t, float x); 
#line 543 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float2 tex1D(texture< float2, 1, cudaReadModeElementType>  t, float x); 
#line 545 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex1D(texture< float4, 1, cudaReadModeElementType>  t, float x); 
#line 553 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float tex1D(texture< char, 1, cudaReadModeNormalizedFloat>  t, float x); 
#line 555 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float tex1D(texture< signed char, 1, cudaReadModeNormalizedFloat>  t, float x); 
#line 557 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float tex1D(texture< unsigned char, 1, cudaReadModeNormalizedFloat>  t, float x); 
#line 559 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float1 tex1D(texture< char1, 1, cudaReadModeNormalizedFloat>  t, float x); 
#line 561 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float1 tex1D(texture< uchar1, 1, cudaReadModeNormalizedFloat>  t, float x); 
#line 563 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float2 tex1D(texture< char2, 1, cudaReadModeNormalizedFloat>  t, float x); 
#line 565 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float2 tex1D(texture< uchar2, 1, cudaReadModeNormalizedFloat>  t, float x); 
#line 567 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex1D(texture< char4, 1, cudaReadModeNormalizedFloat>  t, float x); 
#line 569 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex1D(texture< uchar4, 1, cudaReadModeNormalizedFloat>  t, float x); 
#line 577 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float tex1D(texture< short, 1, cudaReadModeNormalizedFloat>  t, float x); 
#line 579 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float tex1D(texture< unsigned short, 1, cudaReadModeNormalizedFloat>  t, float x); 
#line 581 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float1 tex1D(texture< short1, 1, cudaReadModeNormalizedFloat>  t, float x); 
#line 583 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float1 tex1D(texture< ushort1, 1, cudaReadModeNormalizedFloat>  t, float x); 
#line 585 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float2 tex1D(texture< short2, 1, cudaReadModeNormalizedFloat>  t, float x); 
#line 587 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float2 tex1D(texture< ushort2, 1, cudaReadModeNormalizedFloat>  t, float x); 
#line 589 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex1D(texture< short4, 1, cudaReadModeNormalizedFloat>  t, float x); 
#line 591 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex1D(texture< ushort4, 1, cudaReadModeNormalizedFloat>  t, float x); 
#line 599 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline char tex2D(texture< char, 2, cudaReadModeElementType>  t, float x, float y); 
#line 601 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline signed char tex2D(texture< signed char, 2, cudaReadModeElementType>  t, float x, float y); 
#line 603 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline unsigned char tex2D(texture< unsigned char, 2, cudaReadModeElementType>  t, float x, float y); 
#line 605 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline char1 tex2D(texture< char1, 2, cudaReadModeElementType>  t, float x, float y); 
#line 607 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline uchar1 tex2D(texture< uchar1, 2, cudaReadModeElementType>  t, float x, float y); 
#line 609 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline char2 tex2D(texture< char2, 2, cudaReadModeElementType>  t, float x, float y); 
#line 611 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline uchar2 tex2D(texture< uchar2, 2, cudaReadModeElementType>  t, float x, float y); 
#line 613 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline char4 tex2D(texture< char4, 2, cudaReadModeElementType>  t, float x, float y); 
#line 615 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline uchar4 tex2D(texture< uchar4, 2, cudaReadModeElementType>  t, float x, float y); 
#line 623 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline short tex2D(texture< short, 2, cudaReadModeElementType>  t, float x, float y); 
#line 625 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline unsigned short tex2D(texture< unsigned short, 2, cudaReadModeElementType>  t, float x, float y); 
#line 627 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline short1 tex2D(texture< short1, 2, cudaReadModeElementType>  t, float x, float y); 
#line 629 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline ushort1 tex2D(texture< ushort1, 2, cudaReadModeElementType>  t, float x, float y); 
#line 631 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline short2 tex2D(texture< short2, 2, cudaReadModeElementType>  t, float x, float y); 
#line 633 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline ushort2 tex2D(texture< ushort2, 2, cudaReadModeElementType>  t, float x, float y); 
#line 635 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline short4 tex2D(texture< short4, 2, cudaReadModeElementType>  t, float x, float y); 
#line 637 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline ushort4 tex2D(texture< ushort4, 2, cudaReadModeElementType>  t, float x, float y); 
#line 645 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline int tex2D(texture< int, 2, cudaReadModeElementType>  t, float x, float y); 
#line 647 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline unsigned tex2D(texture< unsigned, 2, cudaReadModeElementType>  t, float x, float y); 
#line 649 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline int1 tex2D(texture< int1, 2, cudaReadModeElementType>  t, float x, float y); 
#line 651 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline uint1 tex2D(texture< uint1, 2, cudaReadModeElementType>  t, float x, float y); 
#line 653 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline int2 tex2D(texture< int2, 2, cudaReadModeElementType>  t, float x, float y); 
#line 655 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline uint2 tex2D(texture< uint2, 2, cudaReadModeElementType>  t, float x, float y); 
#line 657 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline int4 tex2D(texture< int4, 2, cudaReadModeElementType>  t, float x, float y); 
#line 659 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline uint4 tex2D(texture< uint4, 2, cudaReadModeElementType>  t, float x, float y); 
#line 669 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline long tex2D(texture< long, 2, cudaReadModeElementType>  t, float x, float y); 
#line 671 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline unsigned long tex2D(texture< unsigned long, 2, cudaReadModeElementType>  t, float x, float y); 
#line 673 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline long1 tex2D(texture< long1, 2, cudaReadModeElementType>  t, float x, float y); 
#line 675 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline ulong1 tex2D(texture< ulong1, 2, cudaReadModeElementType>  t, float x, float y); 
#line 677 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline long2 tex2D(texture< long2, 2, cudaReadModeElementType>  t, float x, float y); 
#line 679 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline ulong2 tex2D(texture< ulong2, 2, cudaReadModeElementType>  t, float x, float y); 
#line 681 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline long4 tex2D(texture< long4, 2, cudaReadModeElementType>  t, float x, float y); 
#line 683 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline ulong4 tex2D(texture< ulong4, 2, cudaReadModeElementType>  t, float x, float y); 
#line 693 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float tex2D(texture< float, 2, cudaReadModeElementType>  t, float x, float y); 
#line 695 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float1 tex2D(texture< float1, 2, cudaReadModeElementType>  t, float x, float y); 
#line 697 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float2 tex2D(texture< float2, 2, cudaReadModeElementType>  t, float x, float y); 
#line 699 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2D(texture< float4, 2, cudaReadModeElementType>  t, float x, float y); 
#line 707 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float tex2D(texture< char, 2, cudaReadModeNormalizedFloat>  t, float x, float y); 
#line 709 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float tex2D(texture< signed char, 2, cudaReadModeNormalizedFloat>  t, float x, float y); 
#line 711 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float tex2D(texture< unsigned char, 2, cudaReadModeNormalizedFloat>  t, float x, float y); 
#line 713 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float1 tex2D(texture< char1, 2, cudaReadModeNormalizedFloat>  t, float x, float y); 
#line 715 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float1 tex2D(texture< uchar1, 2, cudaReadModeNormalizedFloat>  t, float x, float y); 
#line 717 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float2 tex2D(texture< char2, 2, cudaReadModeNormalizedFloat>  t, float x, float y); 
#line 719 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float2 tex2D(texture< uchar2, 2, cudaReadModeNormalizedFloat>  t, float x, float y); 
#line 721 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2D(texture< char4, 2, cudaReadModeNormalizedFloat>  t, float x, float y); 
#line 723 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2D(texture< uchar4, 2, cudaReadModeNormalizedFloat>  t, float x, float y); 
#line 731 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float tex2D(texture< short, 2, cudaReadModeNormalizedFloat>  t, float x, float y); 
#line 733 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float tex2D(texture< unsigned short, 2, cudaReadModeNormalizedFloat>  t, float x, float y); 
#line 735 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float1 tex2D(texture< short1, 2, cudaReadModeNormalizedFloat>  t, float x, float y); 
#line 737 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float1 tex2D(texture< ushort1, 2, cudaReadModeNormalizedFloat>  t, float x, float y); 
#line 739 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float2 tex2D(texture< short2, 2, cudaReadModeNormalizedFloat>  t, float x, float y); 
#line 741 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float2 tex2D(texture< ushort2, 2, cudaReadModeNormalizedFloat>  t, float x, float y); 
#line 743 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2D(texture< short4, 2, cudaReadModeNormalizedFloat>  t, float x, float y); 
#line 745 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2D(texture< ushort4, 2, cudaReadModeNormalizedFloat>  t, float x, float y); 
#line 753 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline char tex1DLayered(texture< char, 241, cudaReadModeElementType>  t, float x, int layer); 
#line 755 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline signed char tex1DLayered(texture< signed char, 241, cudaReadModeElementType>  t, float x, int layer); 
#line 757 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline unsigned char tex1DLayered(texture< unsigned char, 241, cudaReadModeElementType>  t, float x, int layer); 
#line 759 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline char1 tex1DLayered(texture< char1, 241, cudaReadModeElementType>  t, float x, int layer); 
#line 761 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline uchar1 tex1DLayered(texture< uchar1, 241, cudaReadModeElementType>  t, float x, int layer); 
#line 763 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline char2 tex1DLayered(texture< char2, 241, cudaReadModeElementType>  t, float x, int layer); 
#line 765 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline uchar2 tex1DLayered(texture< uchar2, 241, cudaReadModeElementType>  t, float x, int layer); 
#line 767 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline char4 tex1DLayered(texture< char4, 241, cudaReadModeElementType>  t, float x, int layer); 
#line 769 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline uchar4 tex1DLayered(texture< uchar4, 241, cudaReadModeElementType>  t, float x, int layer); 
#line 777 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline short tex1DLayered(texture< short, 241, cudaReadModeElementType>  t, float x, int layer); 
#line 779 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline unsigned short tex1DLayered(texture< unsigned short, 241, cudaReadModeElementType>  t, float x, int layer); 
#line 781 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline short1 tex1DLayered(texture< short1, 241, cudaReadModeElementType>  t, float x, int layer); 
#line 783 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline ushort1 tex1DLayered(texture< ushort1, 241, cudaReadModeElementType>  t, float x, int layer); 
#line 785 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline short2 tex1DLayered(texture< short2, 241, cudaReadModeElementType>  t, float x, int layer); 
#line 787 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline ushort2 tex1DLayered(texture< ushort2, 241, cudaReadModeElementType>  t, float x, int layer); 
#line 789 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline short4 tex1DLayered(texture< short4, 241, cudaReadModeElementType>  t, float x, int layer); 
#line 791 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline ushort4 tex1DLayered(texture< ushort4, 241, cudaReadModeElementType>  t, float x, int layer); 
#line 799 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline int tex1DLayered(texture< int, 241, cudaReadModeElementType>  t, float x, int layer); 
#line 801 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline unsigned tex1DLayered(texture< unsigned, 241, cudaReadModeElementType>  t, float x, int layer); 
#line 803 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline int1 tex1DLayered(texture< int1, 241, cudaReadModeElementType>  t, float x, int layer); 
#line 805 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline uint1 tex1DLayered(texture< uint1, 241, cudaReadModeElementType>  t, float x, int layer); 
#line 807 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline int2 tex1DLayered(texture< int2, 241, cudaReadModeElementType>  t, float x, int layer); 
#line 809 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline uint2 tex1DLayered(texture< uint2, 241, cudaReadModeElementType>  t, float x, int layer); 
#line 811 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline int4 tex1DLayered(texture< int4, 241, cudaReadModeElementType>  t, float x, int layer); 
#line 813 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline uint4 tex1DLayered(texture< uint4, 241, cudaReadModeElementType>  t, float x, int layer); 
#line 823 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline long tex1DLayered(texture< long, 241, cudaReadModeElementType>  t, float x, int layer); 
#line 825 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline unsigned long tex1DLayered(texture< unsigned long, 241, cudaReadModeElementType>  t, float x, int layer); 
#line 827 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline long1 tex1DLayered(texture< long1, 241, cudaReadModeElementType>  t, float x, int layer); 
#line 829 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline ulong1 tex1DLayered(texture< ulong1, 241, cudaReadModeElementType>  t, float x, int layer); 
#line 831 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline long2 tex1DLayered(texture< long2, 241, cudaReadModeElementType>  t, float x, int layer); 
#line 833 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline ulong2 tex1DLayered(texture< ulong2, 241, cudaReadModeElementType>  t, float x, int layer); 
#line 835 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline long4 tex1DLayered(texture< long4, 241, cudaReadModeElementType>  t, float x, int layer); 
#line 837 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline ulong4 tex1DLayered(texture< ulong4, 241, cudaReadModeElementType>  t, float x, int layer); 
#line 847 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float tex1DLayered(texture< float, 241, cudaReadModeElementType>  t, float x, int layer); 
#line 849 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float1 tex1DLayered(texture< float1, 241, cudaReadModeElementType>  t, float x, int layer); 
#line 851 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float2 tex1DLayered(texture< float2, 241, cudaReadModeElementType>  t, float x, int layer); 
#line 853 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex1DLayered(texture< float4, 241, cudaReadModeElementType>  t, float x, int layer); 
#line 861 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float tex1DLayered(texture< char, 241, cudaReadModeNormalizedFloat>  t, float x, int layer); 
#line 863 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float tex1DLayered(texture< signed char, 241, cudaReadModeNormalizedFloat>  t, float x, int layer); 
#line 865 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float tex1DLayered(texture< unsigned char, 241, cudaReadModeNormalizedFloat>  t, float x, int layer); 
#line 867 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float1 tex1DLayered(texture< char1, 241, cudaReadModeNormalizedFloat>  t, float x, int layer); 
#line 869 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float1 tex1DLayered(texture< uchar1, 241, cudaReadModeNormalizedFloat>  t, float x, int layer); 
#line 871 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float2 tex1DLayered(texture< char2, 241, cudaReadModeNormalizedFloat>  t, float x, int layer); 
#line 873 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float2 tex1DLayered(texture< uchar2, 241, cudaReadModeNormalizedFloat>  t, float x, int layer); 
#line 875 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex1DLayered(texture< char4, 241, cudaReadModeNormalizedFloat>  t, float x, int layer); 
#line 877 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex1DLayered(texture< uchar4, 241, cudaReadModeNormalizedFloat>  t, float x, int layer); 
#line 885 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float tex1DLayered(texture< short, 241, cudaReadModeNormalizedFloat>  t, float x, int layer); 
#line 887 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float tex1DLayered(texture< unsigned short, 241, cudaReadModeNormalizedFloat>  t, float x, int layer); 
#line 889 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float1 tex1DLayered(texture< short1, 241, cudaReadModeNormalizedFloat>  t, float x, int layer); 
#line 891 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float1 tex1DLayered(texture< ushort1, 241, cudaReadModeNormalizedFloat>  t, float x, int layer); 
#line 893 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float2 tex1DLayered(texture< short2, 241, cudaReadModeNormalizedFloat>  t, float x, int layer); 
#line 895 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float2 tex1DLayered(texture< ushort2, 241, cudaReadModeNormalizedFloat>  t, float x, int layer); 
#line 897 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex1DLayered(texture< short4, 241, cudaReadModeNormalizedFloat>  t, float x, int layer); 
#line 899 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex1DLayered(texture< ushort4, 241, cudaReadModeNormalizedFloat>  t, float x, int layer); 
#line 907 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline char tex2DLayered(texture< char, 242, cudaReadModeElementType>  t, float x, float y, int layer); 
#line 909 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline signed char tex2DLayered(texture< signed char, 242, cudaReadModeElementType>  t, float x, float y, int layer); 
#line 911 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline unsigned char tex2DLayered(texture< unsigned char, 242, cudaReadModeElementType>  t, float x, float y, int layer); 
#line 913 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline char1 tex2DLayered(texture< char1, 242, cudaReadModeElementType>  t, float x, float y, int layer); 
#line 915 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline uchar1 tex2DLayered(texture< uchar1, 242, cudaReadModeElementType>  t, float x, float y, int layer); 
#line 917 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline char2 tex2DLayered(texture< char2, 242, cudaReadModeElementType>  t, float x, float y, int layer); 
#line 919 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline uchar2 tex2DLayered(texture< uchar2, 242, cudaReadModeElementType>  t, float x, float y, int layer); 
#line 921 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline char4 tex2DLayered(texture< char4, 242, cudaReadModeElementType>  t, float x, float y, int layer); 
#line 923 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline uchar4 tex2DLayered(texture< uchar4, 242, cudaReadModeElementType>  t, float x, float y, int layer); 
#line 931 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline short tex2DLayered(texture< short, 242, cudaReadModeElementType>  t, float x, float y, int layer); 
#line 933 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline unsigned short tex2DLayered(texture< unsigned short, 242, cudaReadModeElementType>  t, float x, float y, int layer); 
#line 935 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline short1 tex2DLayered(texture< short1, 242, cudaReadModeElementType>  t, float x, float y, int layer); 
#line 937 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline ushort1 tex2DLayered(texture< ushort1, 242, cudaReadModeElementType>  t, float x, float y, int layer); 
#line 939 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline short2 tex2DLayered(texture< short2, 242, cudaReadModeElementType>  t, float x, float y, int layer); 
#line 941 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline ushort2 tex2DLayered(texture< ushort2, 242, cudaReadModeElementType>  t, float x, float y, int layer); 
#line 943 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline short4 tex2DLayered(texture< short4, 242, cudaReadModeElementType>  t, float x, float y, int layer); 
#line 945 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline ushort4 tex2DLayered(texture< ushort4, 242, cudaReadModeElementType>  t, float x, float y, int layer); 
#line 953 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline int tex2DLayered(texture< int, 242, cudaReadModeElementType>  t, float x, float y, int layer); 
#line 955 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline unsigned tex2DLayered(texture< unsigned, 242, cudaReadModeElementType>  t, float x, float y, int layer); 
#line 957 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline int1 tex2DLayered(texture< int1, 242, cudaReadModeElementType>  t, float x, float y, int layer); 
#line 959 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline uint1 tex2DLayered(texture< uint1, 242, cudaReadModeElementType>  t, float x, float y, int layer); 
#line 961 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline int2 tex2DLayered(texture< int2, 242, cudaReadModeElementType>  t, float x, float y, int layer); 
#line 963 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline uint2 tex2DLayered(texture< uint2, 242, cudaReadModeElementType>  t, float x, float y, int layer); 
#line 965 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline int4 tex2DLayered(texture< int4, 242, cudaReadModeElementType>  t, float x, float y, int layer); 
#line 967 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline uint4 tex2DLayered(texture< uint4, 242, cudaReadModeElementType>  t, float x, float y, int layer); 
#line 977 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline long tex2DLayered(texture< long, 242, cudaReadModeElementType>  t, float x, float y, int layer); 
#line 979 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline unsigned long tex2DLayered(texture< unsigned long, 242, cudaReadModeElementType>  t, float x, float y, int layer); 
#line 981 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline long1 tex2DLayered(texture< long1, 242, cudaReadModeElementType>  t, float x, float y, int layer); 
#line 983 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline ulong1 tex2DLayered(texture< ulong1, 242, cudaReadModeElementType>  t, float x, float y, int layer); 
#line 985 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline long2 tex2DLayered(texture< long2, 242, cudaReadModeElementType>  t, float x, float y, int layer); 
#line 987 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline ulong2 tex2DLayered(texture< ulong2, 242, cudaReadModeElementType>  t, float x, float y, int layer); 
#line 989 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline long4 tex2DLayered(texture< long4, 242, cudaReadModeElementType>  t, float x, float y, int layer); 
#line 991 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline ulong4 tex2DLayered(texture< ulong4, 242, cudaReadModeElementType>  t, float x, float y, int layer); 
#line 1001 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float tex2DLayered(texture< float, 242, cudaReadModeElementType>  t, float x, float y, int layer); 
#line 1003 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float1 tex2DLayered(texture< float1, 242, cudaReadModeElementType>  t, float x, float y, int layer); 
#line 1005 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float2 tex2DLayered(texture< float2, 242, cudaReadModeElementType>  t, float x, float y, int layer); 
#line 1007 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2DLayered(texture< float4, 242, cudaReadModeElementType>  t, float x, float y, int layer); 
#line 1015 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float tex2DLayered(texture< char, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer); 
#line 1017 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float tex2DLayered(texture< signed char, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer); 
#line 1019 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float tex2DLayered(texture< unsigned char, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer); 
#line 1021 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float1 tex2DLayered(texture< char1, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer); 
#line 1023 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float1 tex2DLayered(texture< uchar1, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer); 
#line 1025 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float2 tex2DLayered(texture< char2, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer); 
#line 1027 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float2 tex2DLayered(texture< uchar2, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer); 
#line 1029 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2DLayered(texture< char4, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer); 
#line 1031 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2DLayered(texture< uchar4, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer); 
#line 1039 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float tex2DLayered(texture< short, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer); 
#line 1041 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float tex2DLayered(texture< unsigned short, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer); 
#line 1043 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float1 tex2DLayered(texture< short1, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer); 
#line 1045 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float1 tex2DLayered(texture< ushort1, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer); 
#line 1047 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float2 tex2DLayered(texture< short2, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer); 
#line 1049 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float2 tex2DLayered(texture< ushort2, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer); 
#line 1051 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2DLayered(texture< short4, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer); 
#line 1053 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2DLayered(texture< ushort4, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer); 
#line 1061 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline char tex3D(texture< char, 3, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1063 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline signed char tex3D(texture< signed char, 3, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1065 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline unsigned char tex3D(texture< unsigned char, 3, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1067 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline char1 tex3D(texture< char1, 3, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1069 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline uchar1 tex3D(texture< uchar1, 3, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1071 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline char2 tex3D(texture< char2, 3, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1073 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline uchar2 tex3D(texture< uchar2, 3, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1075 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline char4 tex3D(texture< char4, 3, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1077 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline uchar4 tex3D(texture< uchar4, 3, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1085 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline short tex3D(texture< short, 3, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1087 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline unsigned short tex3D(texture< unsigned short, 3, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1089 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline short1 tex3D(texture< short1, 3, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1091 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline ushort1 tex3D(texture< ushort1, 3, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1093 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline short2 tex3D(texture< short2, 3, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1095 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline ushort2 tex3D(texture< ushort2, 3, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1097 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline short4 tex3D(texture< short4, 3, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1099 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline ushort4 tex3D(texture< ushort4, 3, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1107 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline int tex3D(texture< int, 3, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1109 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline unsigned tex3D(texture< unsigned, 3, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1111 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline int1 tex3D(texture< int1, 3, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1113 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline uint1 tex3D(texture< uint1, 3, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1115 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline int2 tex3D(texture< int2, 3, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1117 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline uint2 tex3D(texture< uint2, 3, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1119 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline int4 tex3D(texture< int4, 3, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1121 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline uint4 tex3D(texture< uint4, 3, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1131 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline long tex3D(texture< long, 3, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1133 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline unsigned long tex3D(texture< unsigned long, 3, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1135 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline long1 tex3D(texture< long1, 3, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1137 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline ulong1 tex3D(texture< ulong1, 3, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1139 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline long2 tex3D(texture< long2, 3, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1141 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline ulong2 tex3D(texture< ulong2, 3, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1143 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline long4 tex3D(texture< long4, 3, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1145 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline ulong4 tex3D(texture< ulong4, 3, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1155 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float tex3D(texture< float, 3, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1157 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float1 tex3D(texture< float1, 3, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1159 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float2 tex3D(texture< float2, 3, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1161 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex3D(texture< float4, 3, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1169 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float tex3D(texture< char, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z); 
#line 1171 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float tex3D(texture< signed char, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z); 
#line 1173 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float tex3D(texture< unsigned char, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z); 
#line 1175 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float1 tex3D(texture< char1, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z); 
#line 1177 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float1 tex3D(texture< uchar1, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z); 
#line 1179 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float2 tex3D(texture< char2, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z); 
#line 1181 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float2 tex3D(texture< uchar2, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z); 
#line 1183 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex3D(texture< char4, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z); 
#line 1185 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex3D(texture< uchar4, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z); 
#line 1193 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float tex3D(texture< short, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z); 
#line 1195 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float tex3D(texture< unsigned short, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z); 
#line 1197 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float1 tex3D(texture< short1, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z); 
#line 1199 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float1 tex3D(texture< ushort1, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z); 
#line 1201 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float2 tex3D(texture< short2, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z); 
#line 1203 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float2 tex3D(texture< ushort2, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z); 
#line 1205 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex3D(texture< short4, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z); 
#line 1207 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex3D(texture< ushort4, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z); 
#line 1215 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline char texCubemap(texture< char, 12, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1217 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline signed char texCubemap(texture< signed char, 12, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1219 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline unsigned char texCubemap(texture< unsigned char, 12, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1221 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline char1 texCubemap(texture< char1, 12, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1223 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline uchar1 texCubemap(texture< uchar1, 12, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1225 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline char2 texCubemap(texture< char2, 12, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1227 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline uchar2 texCubemap(texture< uchar2, 12, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1229 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline char4 texCubemap(texture< char4, 12, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1231 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline uchar4 texCubemap(texture< uchar4, 12, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1239 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline short texCubemap(texture< short, 12, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1241 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline unsigned short texCubemap(texture< unsigned short, 12, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1243 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline short1 texCubemap(texture< short1, 12, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1245 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline ushort1 texCubemap(texture< ushort1, 12, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1247 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline short2 texCubemap(texture< short2, 12, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1249 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline ushort2 texCubemap(texture< ushort2, 12, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1251 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline short4 texCubemap(texture< short4, 12, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1253 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline ushort4 texCubemap(texture< ushort4, 12, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1261 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline int texCubemap(texture< int, 12, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1263 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline unsigned texCubemap(texture< unsigned, 12, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1265 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline int1 texCubemap(texture< int1, 12, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1267 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline uint1 texCubemap(texture< uint1, 12, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1269 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline int2 texCubemap(texture< int2, 12, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1271 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline uint2 texCubemap(texture< uint2, 12, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1273 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline int4 texCubemap(texture< int4, 12, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1275 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline uint4 texCubemap(texture< uint4, 12, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1285 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline long texCubemap(texture< long, 12, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1287 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline unsigned long texCubemap(texture< unsigned long, 12, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1289 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline long1 texCubemap(texture< long1, 12, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1291 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline ulong1 texCubemap(texture< ulong1, 12, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1293 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline long2 texCubemap(texture< long2, 12, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1295 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline ulong2 texCubemap(texture< ulong2, 12, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1297 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline long4 texCubemap(texture< long4, 12, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1299 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline ulong4 texCubemap(texture< ulong4, 12, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1309 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float texCubemap(texture< float, 12, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1311 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float1 texCubemap(texture< float1, 12, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1313 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float2 texCubemap(texture< float2, 12, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1315 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float4 texCubemap(texture< float4, 12, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1323 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float texCubemap(texture< char, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z); 
#line 1325 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float texCubemap(texture< signed char, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z); 
#line 1327 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float texCubemap(texture< unsigned char, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z); 
#line 1329 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float1 texCubemap(texture< char1, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z); 
#line 1331 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float1 texCubemap(texture< uchar1, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z); 
#line 1333 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float2 texCubemap(texture< char2, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z); 
#line 1335 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float2 texCubemap(texture< uchar2, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z); 
#line 1337 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float4 texCubemap(texture< char4, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z); 
#line 1339 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float4 texCubemap(texture< uchar4, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z); 
#line 1347 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float texCubemap(texture< short, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z); 
#line 1349 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float texCubemap(texture< unsigned short, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z); 
#line 1351 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float1 texCubemap(texture< short1, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z); 
#line 1353 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float1 texCubemap(texture< ushort1, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z); 
#line 1355 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float2 texCubemap(texture< short2, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z); 
#line 1357 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float2 texCubemap(texture< ushort2, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z); 
#line 1359 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float4 texCubemap(texture< short4, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z); 
#line 1361 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float4 texCubemap(texture< ushort4, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z); 
#line 1369 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline char texCubemapLayered(texture< char, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer); 
#line 1371 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline signed char texCubemapLayered(texture< signed char, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer); 
#line 1373 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline unsigned char texCubemapLayered(texture< unsigned char, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer); 
#line 1375 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline char1 texCubemapLayered(texture< char1, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer); 
#line 1377 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline uchar1 texCubemapLayered(texture< uchar1, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer); 
#line 1379 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline char2 texCubemapLayered(texture< char2, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer); 
#line 1381 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline uchar2 texCubemapLayered(texture< uchar2, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer); 
#line 1383 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline char4 texCubemapLayered(texture< char4, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer); 
#line 1385 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline uchar4 texCubemapLayered(texture< uchar4, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer); 
#line 1393 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline short texCubemapLayered(texture< short, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer); 
#line 1395 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline unsigned short texCubemapLayered(texture< unsigned short, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer); 
#line 1397 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline short1 texCubemapLayered(texture< short1, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer); 
#line 1399 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline ushort1 texCubemapLayered(texture< ushort1, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer); 
#line 1401 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline short2 texCubemapLayered(texture< short2, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer); 
#line 1403 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline ushort2 texCubemapLayered(texture< ushort2, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer); 
#line 1405 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline short4 texCubemapLayered(texture< short4, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer); 
#line 1407 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline ushort4 texCubemapLayered(texture< ushort4, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer); 
#line 1415 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline int texCubemapLayered(texture< int, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer); 
#line 1417 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline unsigned texCubemapLayered(texture< unsigned, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer); 
#line 1419 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline int1 texCubemapLayered(texture< int1, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer); 
#line 1421 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline uint1 texCubemapLayered(texture< uint1, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer); 
#line 1423 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline int2 texCubemapLayered(texture< int2, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer); 
#line 1425 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline uint2 texCubemapLayered(texture< uint2, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer); 
#line 1427 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline int4 texCubemapLayered(texture< int4, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer); 
#line 1429 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline uint4 texCubemapLayered(texture< uint4, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer); 
#line 1439 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline long texCubemapLayered(texture< long, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer); 
#line 1441 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline unsigned long texCubemapLayered(texture< unsigned long, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer); 
#line 1443 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline long1 texCubemapLayered(texture< long1, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer); 
#line 1445 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline ulong1 texCubemapLayered(texture< ulong1, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer); 
#line 1447 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline long2 texCubemapLayered(texture< long2, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer); 
#line 1449 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline ulong2 texCubemapLayered(texture< ulong2, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer); 
#line 1451 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline long4 texCubemapLayered(texture< long4, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer); 
#line 1453 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline ulong4 texCubemapLayered(texture< ulong4, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer); 
#line 1463 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float texCubemapLayered(texture< float, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer); 
#line 1465 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float1 texCubemapLayered(texture< float1, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer); 
#line 1467 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float2 texCubemapLayered(texture< float2, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer); 
#line 1469 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float4 texCubemapLayered(texture< float4, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer); 
#line 1477 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float texCubemapLayered(texture< char, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer); 
#line 1479 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float texCubemapLayered(texture< signed char, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer); 
#line 1481 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float texCubemapLayered(texture< unsigned char, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer); 
#line 1483 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float1 texCubemapLayered(texture< char1, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer); 
#line 1485 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float1 texCubemapLayered(texture< uchar1, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer); 
#line 1487 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float2 texCubemapLayered(texture< char2, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer); 
#line 1489 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float2 texCubemapLayered(texture< uchar2, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer); 
#line 1491 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float4 texCubemapLayered(texture< char4, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer); 
#line 1493 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float4 texCubemapLayered(texture< uchar4, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer); 
#line 1501 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float texCubemapLayered(texture< short, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer); 
#line 1503 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float texCubemapLayered(texture< unsigned short, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer); 
#line 1505 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float1 texCubemapLayered(texture< short1, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer); 
#line 1507 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float1 texCubemapLayered(texture< ushort1, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer); 
#line 1509 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float2 texCubemapLayered(texture< short2, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer); 
#line 1511 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float2 texCubemapLayered(texture< ushort2, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer); 
#line 1513 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float4 texCubemapLayered(texture< short4, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer); 
#line 1515 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float4 texCubemapLayered(texture< ushort4, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer); 
#line 1586 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
template< int comp, class T, cudaTextureReadMode readMode> static __forceinline ::int4 
#line 1588 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
__itex2Dgather(texture< T, 2, readMode>  t, ::float2 i, int 
#line 1589 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
c = comp) 
#line 1590 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)i;(void)c;
#line 1598 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
::exit(___);}

















#line 1617 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
#line 1600 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
template< int comp, class T, cudaTextureReadMode readMode> static __forceinline ::uint4 
#line 1602 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
__utex2Dgather(texture< T, 2, readMode>  t, ::float2 i, int 
#line 1603 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
c = comp) 
#line 1604 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)i;(void)c;
#line 1612 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
::exit(___);}

















#line 1631 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
#line 1614 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
template< int comp, class T, cudaTextureReadMode readMode> static __forceinline ::float4 
#line 1616 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
__ftex2Dgather(texture< T, 2, readMode>  t, ::float2 i, int 
#line 1617 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
c = comp) 
#line 1618 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)i;(void)c;
#line 1626 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
::exit(___);}

















#line 1645 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
#line 1628 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline char4 tex2Dgather(texture< char, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0); 
#line 1630 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline char4 tex2Dgather(texture< signed char, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0); 
#line 1632 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline uchar4 tex2Dgather(texture< unsigned char, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0); 
#line 1634 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline char4 tex2Dgather(texture< char1, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0); 
#line 1636 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline uchar4 tex2Dgather(texture< uchar1, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0); 
#line 1638 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline char4 tex2Dgather(texture< char2, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0); 
#line 1640 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline uchar4 tex2Dgather(texture< uchar2, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0); 
#line 1642 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline char4 tex2Dgather(texture< char3, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0); 
#line 1644 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline uchar4 tex2Dgather(texture< uchar3, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0); 
#line 1646 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline char4 tex2Dgather(texture< char4, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0); 
#line 1648 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline uchar4 tex2Dgather(texture< uchar4, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0); 
#line 1650 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline short4 tex2Dgather(texture< short, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0); 
#line 1652 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline ushort4 tex2Dgather(texture< unsigned short, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0); 
#line 1654 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline short4 tex2Dgather(texture< short1, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0); 
#line 1656 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline ushort4 tex2Dgather(texture< ushort1, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0); 
#line 1658 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline short4 tex2Dgather(texture< short2, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0); 
#line 1660 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline ushort4 tex2Dgather(texture< ushort2, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0); 
#line 1662 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline short4 tex2Dgather(texture< short3, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0); 
#line 1664 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline ushort4 tex2Dgather(texture< ushort3, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0); 
#line 1666 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline short4 tex2Dgather(texture< short4, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0); 
#line 1668 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline ushort4 tex2Dgather(texture< ushort4, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0); 
#line 1670 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline int4 tex2Dgather(texture< int, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0); 
#line 1672 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline uint4 tex2Dgather(texture< unsigned, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0); 
#line 1674 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline int4 tex2Dgather(texture< int1, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0); 
#line 1676 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline uint4 tex2Dgather(texture< uint1, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0); 
#line 1678 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline int4 tex2Dgather(texture< int2, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0); 
#line 1680 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline uint4 tex2Dgather(texture< uint2, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0); 
#line 1682 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline int4 tex2Dgather(texture< int3, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0); 
#line 1684 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline uint4 tex2Dgather(texture< uint3, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0); 
#line 1686 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline int4 tex2Dgather(texture< int4, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0); 
#line 1688 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline uint4 tex2Dgather(texture< uint4, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0); 
#line 1690 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2Dgather(texture< float, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0); 
#line 1692 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2Dgather(texture< float1, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0); 
#line 1694 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2Dgather(texture< float2, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0); 
#line 1696 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2Dgather(texture< float3, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0); 
#line 1698 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2Dgather(texture< float4, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0); 
#line 1707 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2Dgather(texture< char, 2, cudaReadModeNormalizedFloat>  t, float x, float y, int comp = 0); 
#line 1709 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2Dgather(texture< signed char, 2, cudaReadModeNormalizedFloat>  t, float x, float y, int comp = 0); 
#line 1711 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2Dgather(texture< unsigned char, 2, cudaReadModeNormalizedFloat>  t, float x, float y, int comp = 0); 
#line 1713 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2Dgather(texture< char1, 2, cudaReadModeNormalizedFloat>  t, float x, float y, int comp = 0); 
#line 1715 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2Dgather(texture< uchar1, 2, cudaReadModeNormalizedFloat>  t, float x, float y, int comp = 0); 
#line 1717 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2Dgather(texture< char2, 2, cudaReadModeNormalizedFloat>  t, float x, float y, int comp = 0); 
#line 1719 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2Dgather(texture< uchar2, 2, cudaReadModeNormalizedFloat>  t, float x, float y, int comp = 0); 
#line 1721 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2Dgather(texture< char3, 2, cudaReadModeNormalizedFloat>  t, float x, float y, int comp = 0); 
#line 1723 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2Dgather(texture< uchar3, 2, cudaReadModeNormalizedFloat>  t, float x, float y, int comp = 0); 
#line 1725 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2Dgather(texture< char4, 2, cudaReadModeNormalizedFloat>  t, float x, float y, int comp = 0); 
#line 1727 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2Dgather(texture< uchar4, 2, cudaReadModeNormalizedFloat>  t, float x, float y, int comp = 0); 
#line 1729 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2Dgather(texture< short, 2, cudaReadModeNormalizedFloat>  t, float x, float y, int comp = 0); 
#line 1731 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2Dgather(texture< unsigned short, 2, cudaReadModeNormalizedFloat>  t, float x, float y, int comp = 0); 
#line 1733 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2Dgather(texture< short1, 2, cudaReadModeNormalizedFloat>  t, float x, float y, int comp = 0); 
#line 1735 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2Dgather(texture< ushort1, 2, cudaReadModeNormalizedFloat>  t, float x, float y, int comp = 0); 
#line 1737 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2Dgather(texture< short2, 2, cudaReadModeNormalizedFloat>  t, float x, float y, int comp = 0); 
#line 1739 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2Dgather(texture< ushort2, 2, cudaReadModeNormalizedFloat>  t, float x, float y, int comp = 0); 
#line 1741 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2Dgather(texture< short3, 2, cudaReadModeNormalizedFloat>  t, float x, float y, int comp = 0); 
#line 1743 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2Dgather(texture< ushort3, 2, cudaReadModeNormalizedFloat>  t, float x, float y, int comp = 0); 
#line 1745 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2Dgather(texture< short4, 2, cudaReadModeNormalizedFloat>  t, float x, float y, int comp = 0); 
#line 1747 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2Dgather(texture< ushort4, 2, cudaReadModeNormalizedFloat>  t, float x, float y, int comp = 0); 
#line 1839 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
template< class T, int texType, cudaTextureReadMode readMode> static __forceinline ::uint4 
#line 1841 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
__utexfetchlod(texture< T, texType, readMode>  t, ::float4 i, float level, int 
#line 1842 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
d = texType) 
#line 1843 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)i;(void)level;(void)d;
#line 1850 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
::exit(___);}















#line 1867 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
#line 1852 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
template< class T, int texType, cudaTextureReadMode readMode> static __forceinline ::int4 
#line 1854 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
__itexfetchlod(texture< T, texType, readMode>  t, ::float4 i, float level, int 
#line 1855 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
d = texType) 
#line 1856 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)i;(void)level;(void)d;
#line 1863 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
::exit(___);}















#line 1880 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
#line 1865 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
template< class T, int texType, cudaTextureReadMode readMode> static __forceinline ::float4 
#line 1867 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
__ftexfetchlod(texture< T, texType, readMode>  t, ::float4 i, float level, int 
#line 1868 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
d = texType) 
#line 1869 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)i;(void)level;(void)d;
#line 1876 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
::exit(___);}















#line 1893 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
#line 1879 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
template< class T, int texType, cudaTextureReadMode readMode> static __forceinline ::uint4 
#line 1881 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
__utexfetchlodc(texture< T, texType, readMode>  t, ::float4 i, float level) 
#line 1882 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)i;(void)level;
#line 1884 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
::exit(___);}







#line 1893 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
#line 1886 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
template< class T, int texType, cudaTextureReadMode readMode> static __forceinline ::int4 
#line 1888 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
__itexfetchlodc(texture< T, texType, readMode>  t, ::float4 i, float level) 
#line 1889 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)i;(void)level;
#line 1891 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
::exit(___);}







#line 1900 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
#line 1893 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
template< class T, int texType, cudaTextureReadMode readMode> static __forceinline ::float4 
#line 1895 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
__ftexfetchlodc(texture< T, texType, readMode>  t, ::float4 i, float level) 
#line 1896 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)i;(void)level;
#line 1898 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
::exit(___);}







#line 1907 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
#line 1900 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
template< class T, int texType, cudaTextureReadMode readMode> static __forceinline ::uint4 
#line 1902 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
__utexfetchlodl(texture< T, texType, readMode>  t, ::float4 i, int l, float 
#line 1903 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
level, int d = texType & 15) 
#line 1904 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)i;(void)l;(void)level;(void)d;
#line 1910 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
::exit(___);}













#line 1925 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
#line 1912 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
template< class T, int texType, cudaTextureReadMode readMode> static __forceinline ::int4 
#line 1914 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
__itexfetchlodl(texture< T, texType, readMode>  t, ::float4 i, int l, float 
#line 1915 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
level, int d = texType & 15) 
#line 1916 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)i;(void)l;(void)level;(void)d;
#line 1922 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
::exit(___);}













#line 1937 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
#line 1924 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
template< class T, int texType, cudaTextureReadMode readMode> static __forceinline ::float4 
#line 1926 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
__ftexfetchlodl(texture< T, texType, readMode>  t, ::float4 i, int l, float 
#line 1927 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
level, int d = texType & 15) 
#line 1928 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)i;(void)l;(void)level;(void)d;
#line 1934 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
::exit(___);}













#line 1949 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
#line 1937 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
template< class T, int texType, cudaTextureReadMode readMode> static __forceinline ::uint4 
#line 1939 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
__utexfetchlodlc(texture< T, texType, readMode>  t, ::float4 i, int l, float 
#line 1940 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
level) 
#line 1941 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)i;(void)l;(void)level;
#line 1943 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
::exit(___);}







#line 1952 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
#line 1945 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
template< class T, int texType, cudaTextureReadMode readMode> static __forceinline ::int4 
#line 1947 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
__itexfetchlodlc(texture< T, texType, readMode>  t, ::float4 i, int l, float 
#line 1948 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
level) 
#line 1949 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)i;(void)l;(void)level;
#line 1951 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
::exit(___);}







#line 1960 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
#line 1953 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
template< class T, int texType, cudaTextureReadMode readMode> static __forceinline ::float4 
#line 1955 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
__ftexfetchlodlc(texture< T, texType, readMode>  t, ::float4 i, int l, float 
#line 1956 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
level) 
#line 1957 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)i;(void)l;(void)level;
#line 1959 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
::exit(___);}







#line 1968 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
#line 1968 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline char tex1DLod(texture< char, 1, cudaReadModeElementType>  t, float x, float level); 
#line 1970 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline signed char tex1DLod(texture< signed char, 1, cudaReadModeElementType>  t, float x, float level); 
#line 1972 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline unsigned char tex1DLod(texture< unsigned char, 1, cudaReadModeElementType>  t, float x, float level); 
#line 1974 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline char1 tex1DLod(texture< char1, 1, cudaReadModeElementType>  t, float x, float level); 
#line 1976 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline uchar1 tex1DLod(texture< uchar1, 1, cudaReadModeElementType>  t, float x, float level); 
#line 1978 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline char2 tex1DLod(texture< char2, 1, cudaReadModeElementType>  t, float x, float level); 
#line 1980 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline uchar2 tex1DLod(texture< uchar2, 1, cudaReadModeElementType>  t, float x, float level); 
#line 1982 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline char4 tex1DLod(texture< char4, 1, cudaReadModeElementType>  t, float x, float level); 
#line 1984 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline uchar4 tex1DLod(texture< uchar4, 1, cudaReadModeElementType>  t, float x, float level); 
#line 1992 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline short tex1DLod(texture< short, 1, cudaReadModeElementType>  t, float x, float level); 
#line 1994 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline unsigned short tex1DLod(texture< unsigned short, 1, cudaReadModeElementType>  t, float x, float level); 
#line 1996 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline short1 tex1DLod(texture< short1, 1, cudaReadModeElementType>  t, float x, float level); 
#line 1998 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline ushort1 tex1DLod(texture< ushort1, 1, cudaReadModeElementType>  t, float x, float level); 
#line 2000 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline short2 tex1DLod(texture< short2, 1, cudaReadModeElementType>  t, float x, float level); 
#line 2002 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline ushort2 tex1DLod(texture< ushort2, 1, cudaReadModeElementType>  t, float x, float level); 
#line 2004 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline short4 tex1DLod(texture< short4, 1, cudaReadModeElementType>  t, float x, float level); 
#line 2006 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline ushort4 tex1DLod(texture< ushort4, 1, cudaReadModeElementType>  t, float x, float level); 
#line 2014 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline int tex1DLod(texture< int, 1, cudaReadModeElementType>  t, float x, float level); 
#line 2016 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline unsigned tex1DLod(texture< unsigned, 1, cudaReadModeElementType>  t, float x, float level); 
#line 2018 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline int1 tex1DLod(texture< int1, 1, cudaReadModeElementType>  t, float x, float level); 
#line 2020 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline uint1 tex1DLod(texture< uint1, 1, cudaReadModeElementType>  t, float x, float level); 
#line 2022 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline int2 tex1DLod(texture< int2, 1, cudaReadModeElementType>  t, float x, float level); 
#line 2024 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline uint2 tex1DLod(texture< uint2, 1, cudaReadModeElementType>  t, float x, float level); 
#line 2026 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline int4 tex1DLod(texture< int4, 1, cudaReadModeElementType>  t, float x, float level); 
#line 2028 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline uint4 tex1DLod(texture< uint4, 1, cudaReadModeElementType>  t, float x, float level); 
#line 2044 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline long tex1DLod(texture< long, 1, cudaReadModeElementType>  t, float x, float level); 
#line 2046 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline unsigned long tex1DLod(texture< unsigned long, 1, cudaReadModeElementType>  t, float x, float level); 
#line 2048 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline long1 tex1DLod(texture< long1, 1, cudaReadModeElementType>  t, float x, float level); 
#line 2050 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline ulong1 tex1DLod(texture< ulong1, 1, cudaReadModeElementType>  t, float x, float level); 
#line 2052 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline long2 tex1DLod(texture< long2, 1, cudaReadModeElementType>  t, float x, float level); 
#line 2054 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline ulong2 tex1DLod(texture< ulong2, 1, cudaReadModeElementType>  t, float x, float level); 
#line 2056 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline long4 tex1DLod(texture< long4, 1, cudaReadModeElementType>  t, float x, float level); 
#line 2058 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline ulong4 tex1DLod(texture< ulong4, 1, cudaReadModeElementType>  t, float x, float level); 
#line 2068 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float tex1DLod(texture< float, 1, cudaReadModeElementType>  t, float x, float level); 
#line 2070 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float1 tex1DLod(texture< float1, 1, cudaReadModeElementType>  t, float x, float level); 
#line 2072 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float2 tex1DLod(texture< float2, 1, cudaReadModeElementType>  t, float x, float level); 
#line 2074 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex1DLod(texture< float4, 1, cudaReadModeElementType>  t, float x, float level); 
#line 2082 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float tex1DLod(texture< char, 1, cudaReadModeNormalizedFloat>  t, float x, float level); 
#line 2084 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float tex1DLod(texture< signed char, 1, cudaReadModeNormalizedFloat>  t, float x, float level); 
#line 2086 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float tex1DLod(texture< unsigned char, 1, cudaReadModeNormalizedFloat>  t, float x, float level); 
#line 2088 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float1 tex1DLod(texture< char1, 1, cudaReadModeNormalizedFloat>  t, float x, float level); 
#line 2090 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float1 tex1DLod(texture< uchar1, 1, cudaReadModeNormalizedFloat>  t, float x, float level); 
#line 2092 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float2 tex1DLod(texture< char2, 1, cudaReadModeNormalizedFloat>  t, float x, float level); 
#line 2094 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float2 tex1DLod(texture< uchar2, 1, cudaReadModeNormalizedFloat>  t, float x, float level); 
#line 2096 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex1DLod(texture< char4, 1, cudaReadModeNormalizedFloat>  t, float x, float level); 
#line 2098 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex1DLod(texture< uchar4, 1, cudaReadModeNormalizedFloat>  t, float x, float level); 
#line 2106 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float tex1DLod(texture< short, 1, cudaReadModeNormalizedFloat>  t, float x, float level); 
#line 2108 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float tex1DLod(texture< unsigned short, 1, cudaReadModeNormalizedFloat>  t, float x, float level); 
#line 2110 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float1 tex1DLod(texture< short1, 1, cudaReadModeNormalizedFloat>  t, float x, float level); 
#line 2112 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float1 tex1DLod(texture< ushort1, 1, cudaReadModeNormalizedFloat>  t, float x, float level); 
#line 2114 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float2 tex1DLod(texture< short2, 1, cudaReadModeNormalizedFloat>  t, float x, float level); 
#line 2116 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float2 tex1DLod(texture< ushort2, 1, cudaReadModeNormalizedFloat>  t, float x, float level); 
#line 2118 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex1DLod(texture< short4, 1, cudaReadModeNormalizedFloat>  t, float x, float level); 
#line 2120 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex1DLod(texture< ushort4, 1, cudaReadModeNormalizedFloat>  t, float x, float level); 
#line 2128 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline char tex2DLod(texture< char, 2, cudaReadModeElementType>  t, float x, float y, float level); 
#line 2130 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline signed char tex2DLod(texture< signed char, 2, cudaReadModeElementType>  t, float x, float y, float level); 
#line 2132 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline unsigned char tex2DLod(texture< unsigned char, 2, cudaReadModeElementType>  t, float x, float y, float level); 
#line 2134 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline char1 tex2DLod(texture< char1, 2, cudaReadModeElementType>  t, float x, float y, float level); 
#line 2136 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline uchar1 tex2DLod(texture< uchar1, 2, cudaReadModeElementType>  t, float x, float y, float level); 
#line 2138 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline char2 tex2DLod(texture< char2, 2, cudaReadModeElementType>  t, float x, float y, float level); 
#line 2140 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline uchar2 tex2DLod(texture< uchar2, 2, cudaReadModeElementType>  t, float x, float y, float level); 
#line 2142 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline char4 tex2DLod(texture< char4, 2, cudaReadModeElementType>  t, float x, float y, float level); 
#line 2144 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline uchar4 tex2DLod(texture< uchar4, 2, cudaReadModeElementType>  t, float x, float y, float level); 
#line 2152 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline short tex2DLod(texture< short, 2, cudaReadModeElementType>  t, float x, float y, float level); 
#line 2154 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline unsigned short tex2DLod(texture< unsigned short, 2, cudaReadModeElementType>  t, float x, float y, float level); 
#line 2156 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline short1 tex2DLod(texture< short1, 2, cudaReadModeElementType>  t, float x, float y, float level); 
#line 2158 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline ushort1 tex2DLod(texture< ushort1, 2, cudaReadModeElementType>  t, float x, float y, float level); 
#line 2160 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline short2 tex2DLod(texture< short2, 2, cudaReadModeElementType>  t, float x, float y, float level); 
#line 2162 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline ushort2 tex2DLod(texture< ushort2, 2, cudaReadModeElementType>  t, float x, float y, float level); 
#line 2164 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline short4 tex2DLod(texture< short4, 2, cudaReadModeElementType>  t, float x, float y, float level); 
#line 2166 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline ushort4 tex2DLod(texture< ushort4, 2, cudaReadModeElementType>  t, float x, float y, float level); 
#line 2174 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline int tex2DLod(texture< int, 2, cudaReadModeElementType>  t, float x, float y, float level); 
#line 2176 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline unsigned tex2DLod(texture< unsigned, 2, cudaReadModeElementType>  t, float x, float y, float level); 
#line 2178 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline int1 tex2DLod(texture< int1, 2, cudaReadModeElementType>  t, float x, float y, float level); 
#line 2180 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline uint1 tex2DLod(texture< uint1, 2, cudaReadModeElementType>  t, float x, float y, float level); 
#line 2182 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline int2 tex2DLod(texture< int2, 2, cudaReadModeElementType>  t, float x, float y, float level); 
#line 2184 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline uint2 tex2DLod(texture< uint2, 2, cudaReadModeElementType>  t, float x, float y, float level); 
#line 2186 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline int4 tex2DLod(texture< int4, 2, cudaReadModeElementType>  t, float x, float y, float level); 
#line 2188 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline uint4 tex2DLod(texture< uint4, 2, cudaReadModeElementType>  t, float x, float y, float level); 
#line 2198 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline long tex2DLod(texture< long, 2, cudaReadModeElementType>  t, float x, float y, float level); 
#line 2200 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline unsigned long tex2DLod(texture< unsigned long, 2, cudaReadModeElementType>  t, float x, float y, float level); 
#line 2202 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline long1 tex2DLod(texture< long1, 2, cudaReadModeElementType>  t, float x, float y, float level); 
#line 2204 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline ulong1 tex2DLod(texture< ulong1, 2, cudaReadModeElementType>  t, float x, float y, float level); 
#line 2206 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline long2 tex2DLod(texture< long2, 2, cudaReadModeElementType>  t, float x, float y, float level); 
#line 2208 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline ulong2 tex2DLod(texture< ulong2, 2, cudaReadModeElementType>  t, float x, float y, float level); 
#line 2210 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline long4 tex2DLod(texture< long4, 2, cudaReadModeElementType>  t, float x, float y, float level); 
#line 2212 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline ulong4 tex2DLod(texture< ulong4, 2, cudaReadModeElementType>  t, float x, float y, float level); 
#line 2222 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float tex2DLod(texture< float, 2, cudaReadModeElementType>  t, float x, float y, float level); 
#line 2224 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float1 tex2DLod(texture< float1, 2, cudaReadModeElementType>  t, float x, float y, float level); 
#line 2226 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float2 tex2DLod(texture< float2, 2, cudaReadModeElementType>  t, float x, float y, float level); 
#line 2228 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2DLod(texture< float4, 2, cudaReadModeElementType>  t, float x, float y, float level); 
#line 2236 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float tex2DLod(texture< char, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float level); 
#line 2238 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float tex2DLod(texture< signed char, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float level); 
#line 2240 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float tex2DLod(texture< unsigned char, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float level); 
#line 2242 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float1 tex2DLod(texture< char1, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float level); 
#line 2244 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float1 tex2DLod(texture< uchar1, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float level); 
#line 2246 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float2 tex2DLod(texture< char2, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float level); 
#line 2248 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float2 tex2DLod(texture< uchar2, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float level); 
#line 2250 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2DLod(texture< char4, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float level); 
#line 2252 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2DLod(texture< uchar4, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float level); 
#line 2260 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float tex2DLod(texture< short, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float level); 
#line 2262 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float tex2DLod(texture< unsigned short, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float level); 
#line 2264 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float1 tex2DLod(texture< short1, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float level); 
#line 2266 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float1 tex2DLod(texture< ushort1, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float level); 
#line 2268 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float2 tex2DLod(texture< short2, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float level); 
#line 2270 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float2 tex2DLod(texture< ushort2, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float level); 
#line 2272 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2DLod(texture< short4, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float level); 
#line 2274 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2DLod(texture< ushort4, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float level); 
#line 2282 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline char tex1DLayeredLod(texture< char, 241, cudaReadModeElementType>  t, float x, int layer, float level); 
#line 2284 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline signed char tex1DLayeredLod(texture< signed char, 241, cudaReadModeElementType>  t, float x, int layer, float level); 
#line 2286 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline unsigned char tex1DLayeredLod(texture< unsigned char, 241, cudaReadModeElementType>  t, float x, int layer, float level); 
#line 2288 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline char1 tex1DLayeredLod(texture< char1, 241, cudaReadModeElementType>  t, float x, int layer, float level); 
#line 2290 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline uchar1 tex1DLayeredLod(texture< uchar1, 241, cudaReadModeElementType>  t, float x, int layer, float level); 
#line 2292 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline char2 tex1DLayeredLod(texture< char2, 241, cudaReadModeElementType>  t, float x, int layer, float level); 
#line 2294 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline uchar2 tex1DLayeredLod(texture< uchar2, 241, cudaReadModeElementType>  t, float x, int layer, float level); 
#line 2296 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline char4 tex1DLayeredLod(texture< char4, 241, cudaReadModeElementType>  t, float x, int layer, float level); 
#line 2298 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline uchar4 tex1DLayeredLod(texture< uchar4, 241, cudaReadModeElementType>  t, float x, int layer, float level); 
#line 2306 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline short tex1DLayeredLod(texture< short, 241, cudaReadModeElementType>  t, float x, int layer, float level); 
#line 2308 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline unsigned short tex1DLayeredLod(texture< unsigned short, 241, cudaReadModeElementType>  t, float x, int layer, float level); 
#line 2310 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline short1 tex1DLayeredLod(texture< short1, 241, cudaReadModeElementType>  t, float x, int layer, float level); 
#line 2312 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline ushort1 tex1DLayeredLod(texture< ushort1, 241, cudaReadModeElementType>  t, float x, int layer, float level); 
#line 2314 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline short2 tex1DLayeredLod(texture< short2, 241, cudaReadModeElementType>  t, float x, int layer, float level); 
#line 2316 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline ushort2 tex1DLayeredLod(texture< ushort2, 241, cudaReadModeElementType>  t, float x, int layer, float level); 
#line 2318 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline short4 tex1DLayeredLod(texture< short4, 241, cudaReadModeElementType>  t, float x, int layer, float level); 
#line 2320 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline ushort4 tex1DLayeredLod(texture< ushort4, 241, cudaReadModeElementType>  t, float x, int layer, float level); 
#line 2328 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline int tex1DLayeredLod(texture< int, 241, cudaReadModeElementType>  t, float x, int layer, float level); 
#line 2330 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline unsigned tex1DLayeredLod(texture< unsigned, 241, cudaReadModeElementType>  t, float x, int layer, float level); 
#line 2332 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline int1 tex1DLayeredLod(texture< int1, 241, cudaReadModeElementType>  t, float x, int layer, float level); 
#line 2334 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline uint1 tex1DLayeredLod(texture< uint1, 241, cudaReadModeElementType>  t, float x, int layer, float level); 
#line 2336 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline int2 tex1DLayeredLod(texture< int2, 241, cudaReadModeElementType>  t, float x, int layer, float level); 
#line 2338 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline uint2 tex1DLayeredLod(texture< uint2, 241, cudaReadModeElementType>  t, float x, int layer, float level); 
#line 2340 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline int4 tex1DLayeredLod(texture< int4, 241, cudaReadModeElementType>  t, float x, int layer, float level); 
#line 2342 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline uint4 tex1DLayeredLod(texture< uint4, 241, cudaReadModeElementType>  t, float x, int layer, float level); 
#line 2352 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline long tex1DLayeredLod(texture< long, 241, cudaReadModeElementType>  t, float x, int layer, float level); 
#line 2354 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline unsigned long tex1DLayeredLod(texture< unsigned long, 241, cudaReadModeElementType>  t, float x, int layer, float level); 
#line 2356 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline long1 tex1DLayeredLod(texture< long1, 241, cudaReadModeElementType>  t, float x, int layer, float level); 
#line 2358 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline ulong1 tex1DLayeredLod(texture< ulong1, 241, cudaReadModeElementType>  t, float x, int layer, float level); 
#line 2360 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline long2 tex1DLayeredLod(texture< long2, 241, cudaReadModeElementType>  t, float x, int layer, float level); 
#line 2362 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline ulong2 tex1DLayeredLod(texture< ulong2, 241, cudaReadModeElementType>  t, float x, int layer, float level); 
#line 2364 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline long4 tex1DLayeredLod(texture< long4, 241, cudaReadModeElementType>  t, float x, int layer, float level); 
#line 2366 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline ulong4 tex1DLayeredLod(texture< ulong4, 241, cudaReadModeElementType>  t, float x, int layer, float level); 
#line 2376 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float tex1DLayeredLod(texture< float, 241, cudaReadModeElementType>  t, float x, int layer, float level); 
#line 2378 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float1 tex1DLayeredLod(texture< float1, 241, cudaReadModeElementType>  t, float x, int layer, float level); 
#line 2380 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float2 tex1DLayeredLod(texture< float2, 241, cudaReadModeElementType>  t, float x, int layer, float level); 
#line 2382 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex1DLayeredLod(texture< float4, 241, cudaReadModeElementType>  t, float x, int layer, float level); 
#line 2390 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float tex1DLayeredLod(texture< char, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float level); 
#line 2392 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float tex1DLayeredLod(texture< signed char, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float level); 
#line 2394 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float tex1DLayeredLod(texture< unsigned char, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float level); 
#line 2396 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float1 tex1DLayeredLod(texture< char1, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float level); 
#line 2398 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float1 tex1DLayeredLod(texture< uchar1, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float level); 
#line 2400 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float2 tex1DLayeredLod(texture< char2, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float level); 
#line 2402 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float2 tex1DLayeredLod(texture< uchar2, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float level); 
#line 2404 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex1DLayeredLod(texture< char4, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float level); 
#line 2406 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex1DLayeredLod(texture< uchar4, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float level); 
#line 2414 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float tex1DLayeredLod(texture< short, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float level); 
#line 2416 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float tex1DLayeredLod(texture< unsigned short, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float level); 
#line 2418 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float1 tex1DLayeredLod(texture< short1, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float level); 
#line 2420 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float1 tex1DLayeredLod(texture< ushort1, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float level); 
#line 2422 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float2 tex1DLayeredLod(texture< short2, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float level); 
#line 2424 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float2 tex1DLayeredLod(texture< ushort2, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float level); 
#line 2426 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex1DLayeredLod(texture< short4, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float level); 
#line 2428 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex1DLayeredLod(texture< ushort4, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float level); 
#line 2436 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline char tex2DLayeredLod(texture< char, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level); 
#line 2438 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline signed char tex2DLayeredLod(texture< signed char, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level); 
#line 2440 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline unsigned char tex2DLayeredLod(texture< unsigned char, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level); 
#line 2442 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline char1 tex2DLayeredLod(texture< char1, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level); 
#line 2444 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline uchar1 tex2DLayeredLod(texture< uchar1, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level); 
#line 2446 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline char2 tex2DLayeredLod(texture< char2, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level); 
#line 2448 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline uchar2 tex2DLayeredLod(texture< uchar2, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level); 
#line 2450 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline char4 tex2DLayeredLod(texture< char4, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level); 
#line 2452 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline uchar4 tex2DLayeredLod(texture< uchar4, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level); 
#line 2460 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline short tex2DLayeredLod(texture< short, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level); 
#line 2462 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline unsigned short tex2DLayeredLod(texture< unsigned short, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level); 
#line 2464 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline short1 tex2DLayeredLod(texture< short1, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level); 
#line 2466 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline ushort1 tex2DLayeredLod(texture< ushort1, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level); 
#line 2468 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline short2 tex2DLayeredLod(texture< short2, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level); 
#line 2470 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline ushort2 tex2DLayeredLod(texture< ushort2, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level); 
#line 2472 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline short4 tex2DLayeredLod(texture< short4, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level); 
#line 2474 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline ushort4 tex2DLayeredLod(texture< ushort4, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level); 
#line 2482 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline int tex2DLayeredLod(texture< int, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level); 
#line 2484 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline unsigned tex2DLayeredLod(texture< unsigned, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level); 
#line 2486 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline int1 tex2DLayeredLod(texture< int1, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level); 
#line 2488 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline uint1 tex2DLayeredLod(texture< uint1, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level); 
#line 2490 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline int2 tex2DLayeredLod(texture< int2, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level); 
#line 2492 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline uint2 tex2DLayeredLod(texture< uint2, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level); 
#line 2494 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline int4 tex2DLayeredLod(texture< int4, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level); 
#line 2496 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline uint4 tex2DLayeredLod(texture< uint4, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level); 
#line 2506 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline long tex2DLayeredLod(texture< long, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level); 
#line 2508 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline unsigned long tex2DLayeredLod(texture< unsigned long, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level); 
#line 2510 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline long1 tex2DLayeredLod(texture< long1, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level); 
#line 2512 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline ulong1 tex2DLayeredLod(texture< ulong1, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level); 
#line 2514 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline long2 tex2DLayeredLod(texture< long2, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level); 
#line 2516 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline ulong2 tex2DLayeredLod(texture< ulong2, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level); 
#line 2518 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline long4 tex2DLayeredLod(texture< long4, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level); 
#line 2520 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline ulong4 tex2DLayeredLod(texture< ulong4, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level); 
#line 2530 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float tex2DLayeredLod(texture< float, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level); 
#line 2532 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float1 tex2DLayeredLod(texture< float1, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level); 
#line 2534 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float2 tex2DLayeredLod(texture< float2, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level); 
#line 2536 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2DLayeredLod(texture< float4, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level); 
#line 2544 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float tex2DLayeredLod(texture< char, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float level); 
#line 2546 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float tex2DLayeredLod(texture< signed char, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float level); 
#line 2548 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float tex2DLayeredLod(texture< unsigned char, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float level); 
#line 2550 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float1 tex2DLayeredLod(texture< char1, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float level); 
#line 2552 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float1 tex2DLayeredLod(texture< uchar1, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float level); 
#line 2554 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float2 tex2DLayeredLod(texture< char2, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float level); 
#line 2556 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float2 tex2DLayeredLod(texture< uchar2, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float level); 
#line 2558 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2DLayeredLod(texture< char4, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float level); 
#line 2560 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2DLayeredLod(texture< uchar4, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float level); 
#line 2568 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float tex2DLayeredLod(texture< short, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float level); 
#line 2570 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float tex2DLayeredLod(texture< unsigned short, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float level); 
#line 2572 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float1 tex2DLayeredLod(texture< short1, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float level); 
#line 2574 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float1 tex2DLayeredLod(texture< ushort1, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float level); 
#line 2576 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float2 tex2DLayeredLod(texture< short2, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float level); 
#line 2578 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float2 tex2DLayeredLod(texture< ushort2, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float level); 
#line 2580 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2DLayeredLod(texture< short4, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float level); 
#line 2582 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2DLayeredLod(texture< ushort4, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float level); 
#line 2590 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline char tex3DLod(texture< char, 3, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2592 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline signed char tex3DLod(texture< signed char, 3, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2594 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline unsigned char tex3DLod(texture< unsigned char, 3, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2596 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline char1 tex3DLod(texture< char1, 3, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2598 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline uchar1 tex3DLod(texture< uchar1, 3, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2600 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline char2 tex3DLod(texture< char2, 3, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2602 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline uchar2 tex3DLod(texture< uchar2, 3, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2604 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline char4 tex3DLod(texture< char4, 3, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2606 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline uchar4 tex3DLod(texture< uchar4, 3, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2614 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline short tex3DLod(texture< short, 3, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2616 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline unsigned short tex3DLod(texture< unsigned short, 3, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2618 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline short1 tex3DLod(texture< short1, 3, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2620 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline ushort1 tex3DLod(texture< ushort1, 3, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2622 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline short2 tex3DLod(texture< short2, 3, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2624 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline ushort2 tex3DLod(texture< ushort2, 3, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2626 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline short4 tex3DLod(texture< short4, 3, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2628 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline ushort4 tex3DLod(texture< ushort4, 3, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2636 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline int tex3DLod(texture< int, 3, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2638 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline unsigned tex3DLod(texture< unsigned, 3, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2640 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline int1 tex3DLod(texture< int1, 3, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2642 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline uint1 tex3DLod(texture< uint1, 3, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2644 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline int2 tex3DLod(texture< int2, 3, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2646 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline uint2 tex3DLod(texture< uint2, 3, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2648 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline int4 tex3DLod(texture< int4, 3, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2650 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline uint4 tex3DLod(texture< uint4, 3, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2660 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline long tex3DLod(texture< long, 3, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2662 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline unsigned long tex3DLod(texture< unsigned long, 3, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2664 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline long1 tex3DLod(texture< long1, 3, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2666 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline ulong1 tex3DLod(texture< ulong1, 3, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2668 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline long2 tex3DLod(texture< long2, 3, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2670 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline ulong2 tex3DLod(texture< ulong2, 3, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2672 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline long4 tex3DLod(texture< long4, 3, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2674 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline ulong4 tex3DLod(texture< ulong4, 3, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2684 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float tex3DLod(texture< float, 3, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2686 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float1 tex3DLod(texture< float1, 3, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2688 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float2 tex3DLod(texture< float2, 3, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2690 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex3DLod(texture< float4, 3, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2698 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float tex3DLod(texture< char, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level); 
#line 2700 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float tex3DLod(texture< signed char, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level); 
#line 2702 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float tex3DLod(texture< unsigned char, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level); 
#line 2704 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float1 tex3DLod(texture< char1, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level); 
#line 2706 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float1 tex3DLod(texture< uchar1, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level); 
#line 2708 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float2 tex3DLod(texture< char2, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level); 
#line 2710 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float2 tex3DLod(texture< uchar2, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level); 
#line 2712 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex3DLod(texture< char4, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level); 
#line 2714 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex3DLod(texture< uchar4, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level); 
#line 2722 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float tex3DLod(texture< short, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level); 
#line 2724 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float tex3DLod(texture< unsigned short, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level); 
#line 2726 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float1 tex3DLod(texture< short1, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level); 
#line 2728 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float1 tex3DLod(texture< ushort1, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level); 
#line 2730 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float2 tex3DLod(texture< short2, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level); 
#line 2732 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float2 tex3DLod(texture< ushort2, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level); 
#line 2734 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex3DLod(texture< short4, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level); 
#line 2736 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex3DLod(texture< ushort4, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level); 
#line 2744 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline char texCubemapLod(texture< char, 12, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2746 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline signed char texCubemapLod(texture< signed char, 12, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2748 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline unsigned char texCubemapLod(texture< unsigned char, 12, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2750 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline char1 texCubemapLod(texture< char1, 12, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2752 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline uchar1 texCubemapLod(texture< uchar1, 12, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2754 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline char2 texCubemapLod(texture< char2, 12, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2756 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline uchar2 texCubemapLod(texture< uchar2, 12, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2758 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline char4 texCubemapLod(texture< char4, 12, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2760 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline uchar4 texCubemapLod(texture< uchar4, 12, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2768 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline short texCubemapLod(texture< short, 12, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2770 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline unsigned short texCubemapLod(texture< unsigned short, 12, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2772 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline short1 texCubemapLod(texture< short1, 12, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2774 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline ushort1 texCubemapLod(texture< ushort1, 12, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2776 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline short2 texCubemapLod(texture< short2, 12, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2778 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline ushort2 texCubemapLod(texture< ushort2, 12, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2780 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline short4 texCubemapLod(texture< short4, 12, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2782 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline ushort4 texCubemapLod(texture< ushort4, 12, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2790 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline int texCubemapLod(texture< int, 12, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2792 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline unsigned texCubemapLod(texture< unsigned, 12, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2794 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline int1 texCubemapLod(texture< int1, 12, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2796 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline uint1 texCubemapLod(texture< uint1, 12, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2798 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline int2 texCubemapLod(texture< int2, 12, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2800 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline uint2 texCubemapLod(texture< uint2, 12, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2802 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline int4 texCubemapLod(texture< int4, 12, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2804 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline uint4 texCubemapLod(texture< uint4, 12, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2814 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline long texCubemapLod(texture< long, 12, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2816 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline unsigned long texCubemapLod(texture< unsigned long, 12, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2818 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline long1 texCubemapLod(texture< long1, 12, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2820 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline ulong1 texCubemapLod(texture< ulong1, 12, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2822 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline long2 texCubemapLod(texture< long2, 12, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2824 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline ulong2 texCubemapLod(texture< ulong2, 12, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2826 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline long4 texCubemapLod(texture< long4, 12, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2828 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline ulong4 texCubemapLod(texture< ulong4, 12, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2838 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float texCubemapLod(texture< float, 12, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2840 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float1 texCubemapLod(texture< float1, 12, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2842 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float2 texCubemapLod(texture< float2, 12, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2844 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float4 texCubemapLod(texture< float4, 12, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2852 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float texCubemapLod(texture< char, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level); 
#line 2854 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float texCubemapLod(texture< signed char, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level); 
#line 2856 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float texCubemapLod(texture< unsigned char, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level); 
#line 2858 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float1 texCubemapLod(texture< char1, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level); 
#line 2860 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float1 texCubemapLod(texture< uchar1, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level); 
#line 2862 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float2 texCubemapLod(texture< char2, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level); 
#line 2864 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float2 texCubemapLod(texture< uchar2, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level); 
#line 2866 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float4 texCubemapLod(texture< char4, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level); 
#line 2868 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float4 texCubemapLod(texture< uchar4, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level); 
#line 2876 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float texCubemapLod(texture< short, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level); 
#line 2878 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float texCubemapLod(texture< unsigned short, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level); 
#line 2880 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float1 texCubemapLod(texture< short1, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level); 
#line 2882 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float1 texCubemapLod(texture< ushort1, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level); 
#line 2884 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float2 texCubemapLod(texture< short2, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level); 
#line 2886 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float2 texCubemapLod(texture< ushort2, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level); 
#line 2888 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float4 texCubemapLod(texture< short4, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level); 
#line 2890 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float4 texCubemapLod(texture< ushort4, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level); 
#line 2898 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline char texCubemapLayeredLod(texture< char, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level); 
#line 2900 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline signed char texCubemapLayeredLod(texture< signed char, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level); 
#line 2902 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline unsigned char texCubemapLayeredLod(texture< unsigned char, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level); 
#line 2904 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline char1 texCubemapLayeredLod(texture< char1, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level); 
#line 2906 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline uchar1 texCubemapLayeredLod(texture< uchar1, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level); 
#line 2908 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline char2 texCubemapLayeredLod(texture< char2, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level); 
#line 2910 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline uchar2 texCubemapLayeredLod(texture< uchar2, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level); 
#line 2912 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline char4 texCubemapLayeredLod(texture< char4, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level); 
#line 2914 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline uchar4 texCubemapLayeredLod(texture< uchar4, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level); 
#line 2922 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline short texCubemapLayeredLod(texture< short, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level); 
#line 2924 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline unsigned short texCubemapLayeredLod(texture< unsigned short, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level); 
#line 2926 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline short1 texCubemapLayeredLod(texture< short1, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level); 
#line 2928 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline ushort1 texCubemapLayeredLod(texture< ushort1, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level); 
#line 2930 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline short2 texCubemapLayeredLod(texture< short2, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level); 
#line 2932 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline ushort2 texCubemapLayeredLod(texture< ushort2, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level); 
#line 2934 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline short4 texCubemapLayeredLod(texture< short4, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level); 
#line 2936 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline ushort4 texCubemapLayeredLod(texture< ushort4, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level); 
#line 2944 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline int texCubemapLayeredLod(texture< int, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level); 
#line 2946 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline unsigned texCubemapLayeredLod(texture< unsigned, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level); 
#line 2948 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline int1 texCubemapLayeredLod(texture< int1, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level); 
#line 2950 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline uint1 texCubemapLayeredLod(texture< uint1, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level); 
#line 2952 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline int2 texCubemapLayeredLod(texture< int2, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level); 
#line 2954 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline uint2 texCubemapLayeredLod(texture< uint2, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level); 
#line 2956 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline int4 texCubemapLayeredLod(texture< int4, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level); 
#line 2958 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline uint4 texCubemapLayeredLod(texture< uint4, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level); 
#line 2968 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline long texCubemapLayeredLod(texture< long, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level); 
#line 2970 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline unsigned long texCubemapLayeredLod(texture< unsigned long, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level); 
#line 2972 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline long1 texCubemapLayeredLod(texture< long1, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level); 
#line 2974 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline ulong1 texCubemapLayeredLod(texture< ulong1, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level); 
#line 2976 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline long2 texCubemapLayeredLod(texture< long2, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level); 
#line 2978 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline ulong2 texCubemapLayeredLod(texture< ulong2, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level); 
#line 2980 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline long4 texCubemapLayeredLod(texture< long4, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level); 
#line 2982 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline ulong4 texCubemapLayeredLod(texture< ulong4, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level); 
#line 2992 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float texCubemapLayeredLod(texture< float, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level); 
#line 2994 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float1 texCubemapLayeredLod(texture< float1, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level); 
#line 2996 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float2 texCubemapLayeredLod(texture< float2, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level); 
#line 2998 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float4 texCubemapLayeredLod(texture< float4, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level); 
#line 3006 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float texCubemapLayeredLod(texture< char, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer, float level); 
#line 3008 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float texCubemapLayeredLod(texture< signed char, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer, float level); 
#line 3010 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float texCubemapLayeredLod(texture< unsigned char, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer, float level); 
#line 3012 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float1 texCubemapLayeredLod(texture< char1, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer, float level); 
#line 3014 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float1 texCubemapLayeredLod(texture< uchar1, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer, float level); 
#line 3016 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float2 texCubemapLayeredLod(texture< char2, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer, float level); 
#line 3018 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float2 texCubemapLayeredLod(texture< uchar2, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer, float level); 
#line 3020 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float4 texCubemapLayeredLod(texture< char4, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer, float level); 
#line 3022 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float4 texCubemapLayeredLod(texture< uchar4, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer, float level); 
#line 3030 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float texCubemapLayeredLod(texture< short, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer, float level); 
#line 3032 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float texCubemapLayeredLod(texture< unsigned short, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer, float level); 
#line 3034 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float1 texCubemapLayeredLod(texture< short1, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer, float level); 
#line 3036 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float1 texCubemapLayeredLod(texture< ushort1, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer, float level); 
#line 3038 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float2 texCubemapLayeredLod(texture< short2, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer, float level); 
#line 3040 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float2 texCubemapLayeredLod(texture< ushort2, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer, float level); 
#line 3042 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float4 texCubemapLayeredLod(texture< short4, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer, float level); 
#line 3044 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float4 texCubemapLayeredLod(texture< ushort4, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer, float level); 
#line 3047 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
template< class T, int texType, cudaTextureReadMode readMode> static __forceinline ::uint4 
#line 3049 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
__utexfetchgrad(texture< T, texType, readMode>  t, ::float4 i, ::float4 dPdx, ::float4 dPdy, int d = texType) 
#line 3050 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)i;(void)dPdx;(void)dPdy;(void)d;
#line 3057 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
::exit(___);}















#line 3074 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
#line 3059 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
template< class T, int texType, cudaTextureReadMode readMode> static __forceinline ::int4 
#line 3061 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
__itexfetchgrad(texture< T, texType, readMode>  t, ::float4 i, ::float4 dPdx, ::float4 dPdy, int d = texType) 
#line 3062 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)i;(void)dPdx;(void)dPdy;(void)d;
#line 3069 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
::exit(___);}















#line 3086 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
#line 3071 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
template< class T, int texType, cudaTextureReadMode readMode> static __forceinline ::float4 
#line 3073 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
__ftexfetchgrad(texture< T, texType, readMode>  t, ::float4 i, ::float4 dPdx, ::float4 dPdy, int d = texType) 
#line 3074 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)i;(void)dPdx;(void)dPdy;(void)d;
#line 3081 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
::exit(___);}















#line 3098 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
#line 3083 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
template< class T, int texType, cudaTextureReadMode readMode> static __forceinline ::uint4 
#line 3085 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
__utexfetchgradl(texture< T, texType, readMode>  t, ::float4 i, int l, ::float4 dPdx, ::float4 dPdy, int d = texType & 15) 
#line 3086 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)i;(void)l;(void)dPdx;(void)dPdy;(void)d;
#line 3092 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
::exit(___);}













#line 3107 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
#line 3094 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
template< class T, int texType, cudaTextureReadMode readMode> static __forceinline ::int4 
#line 3096 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
__itexfetchgradl(texture< T, texType, readMode>  t, ::float4 i, int l, ::float4 dPdx, ::float4 dPdy, int d = texType & 15) 
#line 3097 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)i;(void)l;(void)dPdx;(void)dPdy;(void)d;
#line 3103 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
::exit(___);}













#line 3118 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
#line 3105 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
template< class T, int texType, cudaTextureReadMode readMode> static __forceinline ::float4 
#line 3107 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
__ftexfetchgradl(texture< T, texType, readMode>  t, ::float4 i, int l, ::float4 dPdx, ::float4 dPdy, int d = texType & 15) 
#line 3108 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)i;(void)l;(void)dPdx;(void)dPdy;(void)d;
#line 3114 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
::exit(___);}













#line 3129 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
#line 3123 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline char tex1DGrad(texture< char, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy); 
#line 3125 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline signed char tex1DGrad(texture< signed char, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy); 
#line 3127 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline unsigned char tex1DGrad(texture< unsigned char, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy); 
#line 3129 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline char1 tex1DGrad(texture< char1, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy); 
#line 3131 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline uchar1 tex1DGrad(texture< uchar1, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy); 
#line 3133 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline char2 tex1DGrad(texture< char2, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy); 
#line 3135 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline uchar2 tex1DGrad(texture< uchar2, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy); 
#line 3137 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline char4 tex1DGrad(texture< char4, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy); 
#line 3139 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline uchar4 tex1DGrad(texture< uchar4, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy); 
#line 3147 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline short tex1DGrad(texture< short, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy); 
#line 3149 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline unsigned short tex1DGrad(texture< unsigned short, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy); 
#line 3151 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline short1 tex1DGrad(texture< short1, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy); 
#line 3153 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline ushort1 tex1DGrad(texture< ushort1, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy); 
#line 3155 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline short2 tex1DGrad(texture< short2, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy); 
#line 3157 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline ushort2 tex1DGrad(texture< ushort2, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy); 
#line 3159 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline short4 tex1DGrad(texture< short4, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy); 
#line 3161 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline ushort4 tex1DGrad(texture< ushort4, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy); 
#line 3169 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline int tex1DGrad(texture< int, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy); 
#line 3171 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline unsigned tex1DGrad(texture< unsigned, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy); 
#line 3173 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline int1 tex1DGrad(texture< int1, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy); 
#line 3175 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline uint1 tex1DGrad(texture< uint1, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy); 
#line 3177 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline int2 tex1DGrad(texture< int2, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy); 
#line 3179 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline uint2 tex1DGrad(texture< uint2, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy); 
#line 3181 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline int4 tex1DGrad(texture< int4, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy); 
#line 3183 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline uint4 tex1DGrad(texture< uint4, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy); 
#line 3199 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline long tex1DGrad(texture< long, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy); 
#line 3201 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline unsigned long tex1DGrad(texture< unsigned long, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy); 
#line 3203 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline long1 tex1DGrad(texture< long1, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy); 
#line 3205 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline ulong1 tex1DGrad(texture< ulong1, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy); 
#line 3207 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline long2 tex1DGrad(texture< long2, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy); 
#line 3209 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline ulong2 tex1DGrad(texture< ulong2, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy); 
#line 3211 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline long4 tex1DGrad(texture< long4, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy); 
#line 3213 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline ulong4 tex1DGrad(texture< ulong4, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy); 
#line 3223 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float tex1DGrad(texture< float, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy); 
#line 3225 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float1 tex1DGrad(texture< float1, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy); 
#line 3227 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float2 tex1DGrad(texture< float2, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy); 
#line 3229 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex1DGrad(texture< float4, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy); 
#line 3237 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float tex1DGrad(texture< char, 1, cudaReadModeNormalizedFloat>  t, float x, float dPdx, float dPdy); 
#line 3239 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float tex1DGrad(texture< signed char, 1, cudaReadModeNormalizedFloat>  t, float x, float dPdx, float dPdy); 
#line 3241 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float tex1DGrad(texture< unsigned char, 1, cudaReadModeNormalizedFloat>  t, float x, float dPdx, float dPdy); 
#line 3243 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float1 tex1DGrad(texture< char1, 1, cudaReadModeNormalizedFloat>  t, float x, float dPdx, float dPdy); 
#line 3245 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float1 tex1DGrad(texture< uchar1, 1, cudaReadModeNormalizedFloat>  t, float x, float dPdx, float dPdy); 
#line 3247 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float2 tex1DGrad(texture< char2, 1, cudaReadModeNormalizedFloat>  t, float x, float dPdx, float dPdy); 
#line 3249 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float2 tex1DGrad(texture< uchar2, 1, cudaReadModeNormalizedFloat>  t, float x, float dPdx, float dPdy); 
#line 3251 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex1DGrad(texture< char4, 1, cudaReadModeNormalizedFloat>  t, float x, float dPdx, float dPdy); 
#line 3253 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex1DGrad(texture< uchar4, 1, cudaReadModeNormalizedFloat>  t, float x, float dPdx, float dPdy); 
#line 3261 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float tex1DGrad(texture< short, 1, cudaReadModeNormalizedFloat>  t, float x, float dPdx, float dPdy); 
#line 3263 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float tex1DGrad(texture< unsigned short, 1, cudaReadModeNormalizedFloat>  t, float x, float dPdx, float dPdy); 
#line 3265 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float1 tex1DGrad(texture< short1, 1, cudaReadModeNormalizedFloat>  t, float x, float dPdx, float dPdy); 
#line 3267 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float1 tex1DGrad(texture< ushort1, 1, cudaReadModeNormalizedFloat>  t, float x, float dPdx, float dPdy); 
#line 3269 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float2 tex1DGrad(texture< short2, 1, cudaReadModeNormalizedFloat>  t, float x, float dPdx, float dPdy); 
#line 3271 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float2 tex1DGrad(texture< ushort2, 1, cudaReadModeNormalizedFloat>  t, float x, float dPdx, float dPdy); 
#line 3273 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex1DGrad(texture< short4, 1, cudaReadModeNormalizedFloat>  t, float x, float dPdx, float dPdy); 
#line 3275 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex1DGrad(texture< ushort4, 1, cudaReadModeNormalizedFloat>  t, float x, float dPdx, float dPdy); 
#line 3283 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline char tex2DGrad(texture< char, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy); 
#line 3285 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline signed char tex2DGrad(texture< signed char, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy); 
#line 3287 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline unsigned char tex2DGrad(texture< unsigned char, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy); 
#line 3289 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline char1 tex2DGrad(texture< char1, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy); 
#line 3291 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline uchar1 tex2DGrad(texture< uchar1, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy); 
#line 3293 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline char2 tex2DGrad(texture< char2, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy); 
#line 3295 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline uchar2 tex2DGrad(texture< uchar2, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy); 
#line 3297 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline char4 tex2DGrad(texture< char4, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy); 
#line 3299 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline uchar4 tex2DGrad(texture< uchar4, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy); 
#line 3307 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline short tex2DGrad(texture< short, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy); 
#line 3309 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline unsigned short tex2DGrad(texture< unsigned short, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy); 
#line 3311 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline short1 tex2DGrad(texture< short1, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy); 
#line 3313 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline ushort1 tex2DGrad(texture< ushort1, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy); 
#line 3315 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline short2 tex2DGrad(texture< short2, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy); 
#line 3317 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline ushort2 tex2DGrad(texture< ushort2, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy); 
#line 3319 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline short4 tex2DGrad(texture< short4, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy); 
#line 3321 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline ushort4 tex2DGrad(texture< ushort4, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy); 
#line 3329 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline int tex2DGrad(texture< int, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy); 
#line 3331 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline unsigned tex2DGrad(texture< unsigned, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy); 
#line 3333 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline int1 tex2DGrad(texture< int1, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy); 
#line 3335 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline uint1 tex2DGrad(texture< uint1, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy); 
#line 3337 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline int2 tex2DGrad(texture< int2, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy); 
#line 3339 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline uint2 tex2DGrad(texture< uint2, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy); 
#line 3341 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline int4 tex2DGrad(texture< int4, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy); 
#line 3343 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline uint4 tex2DGrad(texture< uint4, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy); 
#line 3353 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline long tex2DGrad(texture< long, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy); 
#line 3355 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline unsigned long tex2DGrad(texture< unsigned long, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy); 
#line 3357 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline long1 tex2DGrad(texture< long1, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy); 
#line 3359 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline ulong1 tex2DGrad(texture< ulong1, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy); 
#line 3361 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline long2 tex2DGrad(texture< long2, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy); 
#line 3363 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline ulong2 tex2DGrad(texture< ulong2, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy); 
#line 3365 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline long4 tex2DGrad(texture< long4, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy); 
#line 3367 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline ulong4 tex2DGrad(texture< ulong4, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy); 
#line 3377 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float tex2DGrad(texture< float, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy); 
#line 3379 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float1 tex2DGrad(texture< float1, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy); 
#line 3381 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float2 tex2DGrad(texture< float2, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy); 
#line 3383 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2DGrad(texture< float4, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy); 
#line 3391 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float tex2DGrad(texture< char, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float2 dPdx, float2 dPdy); 
#line 3393 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float tex2DGrad(texture< signed char, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float2 dPdx, float2 dPdy); 
#line 3395 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float tex2DGrad(texture< unsigned char, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float2 dPdx, float2 dPdy); 
#line 3397 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float1 tex2DGrad(texture< char1, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float2 dPdx, float2 dPdy); 
#line 3399 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float1 tex2DGrad(texture< uchar1, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float2 dPdx, float2 dPdy); 
#line 3401 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float2 tex2DGrad(texture< char2, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float2 dPdx, float2 dPdy); 
#line 3403 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float2 tex2DGrad(texture< uchar2, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float2 dPdx, float2 dPdy); 
#line 3405 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2DGrad(texture< char4, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float2 dPdx, float2 dPdy); 
#line 3407 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2DGrad(texture< uchar4, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float2 dPdx, float2 dPdy); 
#line 3415 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float tex2DGrad(texture< short, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float2 dPdx, float2 dPdy); 
#line 3417 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float tex2DGrad(texture< unsigned short, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float2 dPdx, float2 dPdy); 
#line 3419 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float1 tex2DGrad(texture< short1, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float2 dPdx, float2 dPdy); 
#line 3421 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float1 tex2DGrad(texture< ushort1, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float2 dPdx, float2 dPdy); 
#line 3423 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float2 tex2DGrad(texture< short2, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float2 dPdx, float2 dPdy); 
#line 3425 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float2 tex2DGrad(texture< ushort2, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float2 dPdx, float2 dPdy); 
#line 3427 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2DGrad(texture< short4, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float2 dPdx, float2 dPdy); 
#line 3429 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2DGrad(texture< ushort4, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float2 dPdx, float2 dPdy); 
#line 3437 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline char tex1DLayeredGrad(texture< char, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy); 
#line 3439 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline signed char tex1DLayeredGrad(texture< signed char, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy); 
#line 3441 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline unsigned char tex1DLayeredGrad(texture< unsigned char, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy); 
#line 3443 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline char1 tex1DLayeredGrad(texture< char1, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy); 
#line 3445 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline uchar1 tex1DLayeredGrad(texture< uchar1, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy); 
#line 3447 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline char2 tex1DLayeredGrad(texture< char2, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy); 
#line 3449 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline uchar2 tex1DLayeredGrad(texture< uchar2, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy); 
#line 3451 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline char4 tex1DLayeredGrad(texture< char4, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy); 
#line 3453 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline uchar4 tex1DLayeredGrad(texture< uchar4, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy); 
#line 3461 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline short tex1DLayeredGrad(texture< short, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy); 
#line 3463 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline unsigned short tex1DLayeredGrad(texture< unsigned short, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy); 
#line 3465 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline short1 tex1DLayeredGrad(texture< short1, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy); 
#line 3467 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline ushort1 tex1DLayeredGrad(texture< ushort1, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy); 
#line 3469 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline short2 tex1DLayeredGrad(texture< short2, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy); 
#line 3471 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline ushort2 tex1DLayeredGrad(texture< ushort2, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy); 
#line 3473 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline short4 tex1DLayeredGrad(texture< short4, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy); 
#line 3475 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline ushort4 tex1DLayeredGrad(texture< ushort4, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy); 
#line 3483 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline int tex1DLayeredGrad(texture< int, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy); 
#line 3485 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline unsigned tex1DLayeredGrad(texture< unsigned, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy); 
#line 3487 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline int1 tex1DLayeredGrad(texture< int1, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy); 
#line 3489 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline uint1 tex1DLayeredGrad(texture< uint1, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy); 
#line 3491 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline int2 tex1DLayeredGrad(texture< int2, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy); 
#line 3493 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline uint2 tex1DLayeredGrad(texture< uint2, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy); 
#line 3495 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline int4 tex1DLayeredGrad(texture< int4, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy); 
#line 3497 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline uint4 tex1DLayeredGrad(texture< uint4, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy); 
#line 3507 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline long tex1DLayeredGrad(texture< long, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy); 
#line 3509 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline unsigned long tex1DLayeredGrad(texture< unsigned long, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy); 
#line 3511 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline long1 tex1DLayeredGrad(texture< long1, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy); 
#line 3513 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline ulong1 tex1DLayeredGrad(texture< ulong1, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy); 
#line 3515 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline long2 tex1DLayeredGrad(texture< long2, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy); 
#line 3517 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline ulong2 tex1DLayeredGrad(texture< ulong2, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy); 
#line 3519 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline long4 tex1DLayeredGrad(texture< long4, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy); 
#line 3521 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline ulong4 tex1DLayeredGrad(texture< ulong4, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy); 
#line 3531 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float tex1DLayeredGrad(texture< float, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy); 
#line 3533 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float1 tex1DLayeredGrad(texture< float1, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy); 
#line 3535 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float2 tex1DLayeredGrad(texture< float2, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy); 
#line 3537 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex1DLayeredGrad(texture< float4, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy); 
#line 3545 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float tex1DLayeredGrad(texture< char, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float dPdx, float dPdy); 
#line 3547 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float tex1DLayeredGrad(texture< signed char, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float dPdx, float dPdy); 
#line 3549 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float tex1DLayeredGrad(texture< unsigned char, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float dPdx, float dPdy); 
#line 3551 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float1 tex1DLayeredGrad(texture< char1, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float dPdx, float dPdy); 
#line 3553 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float1 tex1DLayeredGrad(texture< uchar1, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float dPdx, float dPdy); 
#line 3555 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float2 tex1DLayeredGrad(texture< char2, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float dPdx, float dPdy); 
#line 3557 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float2 tex1DLayeredGrad(texture< uchar2, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float dPdx, float dPdy); 
#line 3559 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex1DLayeredGrad(texture< char4, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float dPdx, float dPdy); 
#line 3561 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex1DLayeredGrad(texture< uchar4, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float dPdx, float dPdy); 
#line 3569 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float tex1DLayeredGrad(texture< short, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float dPdx, float dPdy); 
#line 3571 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float tex1DLayeredGrad(texture< unsigned short, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float dPdx, float dPdy); 
#line 3573 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float1 tex1DLayeredGrad(texture< short1, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float dPdx, float dPdy); 
#line 3575 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float1 tex1DLayeredGrad(texture< ushort1, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float dPdx, float dPdy); 
#line 3577 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float2 tex1DLayeredGrad(texture< short2, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float dPdx, float dPdy); 
#line 3579 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float2 tex1DLayeredGrad(texture< ushort2, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float dPdx, float dPdy); 
#line 3581 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex1DLayeredGrad(texture< short4, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float dPdx, float dPdy); 
#line 3583 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex1DLayeredGrad(texture< ushort4, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float dPdx, float dPdy); 
#line 3591 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline char tex2DLayeredGrad(texture< char, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 3593 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline signed char tex2DLayeredGrad(texture< signed char, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 3595 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline unsigned char tex2DLayeredGrad(texture< unsigned char, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 3597 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline char1 tex2DLayeredGrad(texture< char1, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 3599 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline uchar1 tex2DLayeredGrad(texture< uchar1, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 3601 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline char2 tex2DLayeredGrad(texture< char2, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 3603 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline uchar2 tex2DLayeredGrad(texture< uchar2, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 3605 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline char4 tex2DLayeredGrad(texture< char4, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 3607 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline uchar4 tex2DLayeredGrad(texture< uchar4, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 3615 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline short tex2DLayeredGrad(texture< short, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 3617 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline unsigned short tex2DLayeredGrad(texture< unsigned short, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 3619 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline short1 tex2DLayeredGrad(texture< short1, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 3621 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline ushort1 tex2DLayeredGrad(texture< ushort1, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 3623 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline short2 tex2DLayeredGrad(texture< short2, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 3625 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline ushort2 tex2DLayeredGrad(texture< ushort2, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 3627 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline short4 tex2DLayeredGrad(texture< short4, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 3629 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline ushort4 tex2DLayeredGrad(texture< ushort4, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 3637 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline int tex2DLayeredGrad(texture< int, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 3639 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline unsigned tex2DLayeredGrad(texture< unsigned, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 3641 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline int1 tex2DLayeredGrad(texture< int1, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 3643 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline uint1 tex2DLayeredGrad(texture< uint1, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 3645 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline int2 tex2DLayeredGrad(texture< int2, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 3647 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline uint2 tex2DLayeredGrad(texture< uint2, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 3649 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline int4 tex2DLayeredGrad(texture< int4, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 3651 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline uint4 tex2DLayeredGrad(texture< uint4, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 3661 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline long tex2DLayeredGrad(texture< long, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 3663 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline unsigned long tex2DLayeredGrad(texture< unsigned long, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 3665 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline long1 tex2DLayeredGrad(texture< long1, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 3667 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline ulong1 tex2DLayeredGrad(texture< ulong1, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 3669 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline long2 tex2DLayeredGrad(texture< long2, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 3671 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline ulong2 tex2DLayeredGrad(texture< ulong2, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 3673 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline long4 tex2DLayeredGrad(texture< long4, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 3675 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline ulong4 tex2DLayeredGrad(texture< ulong4, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 3685 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float tex2DLayeredGrad(texture< float, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 3687 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float1 tex2DLayeredGrad(texture< float1, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 3689 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float2 tex2DLayeredGrad(texture< float2, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 3691 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2DLayeredGrad(texture< float4, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 3699 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float tex2DLayeredGrad(texture< char, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 3701 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float tex2DLayeredGrad(texture< signed char, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 3703 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float tex2DLayeredGrad(texture< unsigned char, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 3705 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float1 tex2DLayeredGrad(texture< char1, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 3707 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float1 tex2DLayeredGrad(texture< uchar1, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 3709 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float2 tex2DLayeredGrad(texture< char2, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 3711 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float2 tex2DLayeredGrad(texture< uchar2, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 3713 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2DLayeredGrad(texture< char4, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 3715 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2DLayeredGrad(texture< uchar4, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 3723 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float tex2DLayeredGrad(texture< short, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 3725 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float tex2DLayeredGrad(texture< unsigned short, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 3727 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float1 tex2DLayeredGrad(texture< short1, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 3729 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float1 tex2DLayeredGrad(texture< ushort1, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 3731 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float2 tex2DLayeredGrad(texture< short2, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 3733 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float2 tex2DLayeredGrad(texture< ushort2, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 3735 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2DLayeredGrad(texture< short4, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 3737 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2DLayeredGrad(texture< ushort4, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 3745 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline char tex3DGrad(texture< char, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 3747 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline signed char tex3DGrad(texture< signed char, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 3749 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline unsigned char tex3DGrad(texture< unsigned char, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 3751 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline char1 tex3DGrad(texture< char1, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 3753 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline uchar1 tex3DGrad(texture< uchar1, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 3755 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline char2 tex3DGrad(texture< char2, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 3757 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline uchar2 tex3DGrad(texture< uchar2, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 3759 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline char4 tex3DGrad(texture< char4, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 3761 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline uchar4 tex3DGrad(texture< uchar4, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 3769 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline short tex3DGrad(texture< short, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 3771 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline unsigned short tex3DGrad(texture< unsigned short, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 3773 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline short1 tex3DGrad(texture< short1, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 3775 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline ushort1 tex3DGrad(texture< ushort1, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 3777 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline short2 tex3DGrad(texture< short2, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 3779 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline ushort2 tex3DGrad(texture< ushort2, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 3781 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline short4 tex3DGrad(texture< short4, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 3783 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline ushort4 tex3DGrad(texture< ushort4, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 3791 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline int tex3DGrad(texture< int, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 3793 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline unsigned tex3DGrad(texture< unsigned, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 3795 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline int1 tex3DGrad(texture< int1, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 3797 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline uint1 tex3DGrad(texture< uint1, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 3799 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline int2 tex3DGrad(texture< int2, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 3801 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline uint2 tex3DGrad(texture< uint2, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 3803 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline int4 tex3DGrad(texture< int4, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 3805 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline uint4 tex3DGrad(texture< uint4, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 3815 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline long tex3DGrad(texture< long, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 3817 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline unsigned long tex3DGrad(texture< unsigned long, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 3819 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline long1 tex3DGrad(texture< long1, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 3821 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline ulong1 tex3DGrad(texture< ulong1, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 3823 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline long2 tex3DGrad(texture< long2, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 3825 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline ulong2 tex3DGrad(texture< ulong2, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 3827 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline long4 tex3DGrad(texture< long4, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 3829 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline ulong4 tex3DGrad(texture< ulong4, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 3839 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float tex3DGrad(texture< float, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 3841 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float1 tex3DGrad(texture< float1, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 3843 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float2 tex3DGrad(texture< float2, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 3845 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex3DGrad(texture< float4, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 3853 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float tex3DGrad(texture< char, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 3855 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float tex3DGrad(texture< signed char, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 3857 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float tex3DGrad(texture< unsigned char, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 3859 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float1 tex3DGrad(texture< char1, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 3861 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float1 tex3DGrad(texture< uchar1, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 3863 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float2 tex3DGrad(texture< char2, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 3865 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float2 tex3DGrad(texture< uchar2, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 3867 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex3DGrad(texture< char4, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 3869 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex3DGrad(texture< uchar4, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 3877 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float tex3DGrad(texture< short, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 3879 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float tex3DGrad(texture< unsigned short, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 3881 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float1 tex3DGrad(texture< short1, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 3883 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float1 tex3DGrad(texture< ushort1, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 3885 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float2 tex3DGrad(texture< short2, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 3887 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float2 tex3DGrad(texture< ushort2, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 3889 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex3DGrad(texture< short4, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 3891 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex3DGrad(texture< ushort4, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 80 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline char tex1Dfetch(texture< char, 1, cudaReadModeElementType>  t, int x) 
#line 81 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 89 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 100 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 91 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline signed char tex1Dfetch(texture< signed char, 1, cudaReadModeElementType>  t, int x) 
#line 92 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 96 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 107 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 98 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned char tex1Dfetch(texture< unsigned char, 1, cudaReadModeElementType>  t, int x) 
#line 99 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 103 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 114 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 105 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline char1 tex1Dfetch(texture< char1, 1, cudaReadModeElementType>  t, int x) 
#line 106 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 110 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 121 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 112 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline uchar1 tex1Dfetch(texture< uchar1, 1, cudaReadModeElementType>  t, int x) 
#line 113 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 117 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 128 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 119 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline char2 tex1Dfetch(texture< char2, 1, cudaReadModeElementType>  t, int x) 
#line 120 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 124 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 135 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 126 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline uchar2 tex1Dfetch(texture< uchar2, 1, cudaReadModeElementType>  t, int x) 
#line 127 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 131 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 142 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 133 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline char4 tex1Dfetch(texture< char4, 1, cudaReadModeElementType>  t, int x) 
#line 134 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 138 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 149 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 140 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline uchar4 tex1Dfetch(texture< uchar4, 1, cudaReadModeElementType>  t, int x) 
#line 141 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 145 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 156 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 153 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline short tex1Dfetch(texture< short, 1, cudaReadModeElementType>  t, int x) 
#line 154 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 158 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 169 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 160 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned short tex1Dfetch(texture< unsigned short, 1, cudaReadModeElementType>  t, int x) 
#line 161 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 165 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 176 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 167 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline short1 tex1Dfetch(texture< short1, 1, cudaReadModeElementType>  t, int x) 
#line 168 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 172 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 183 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 174 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline ushort1 tex1Dfetch(texture< ushort1, 1, cudaReadModeElementType>  t, int x) 
#line 175 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 179 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 190 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 181 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline short2 tex1Dfetch(texture< short2, 1, cudaReadModeElementType>  t, int x) 
#line 182 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 186 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 197 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 188 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline ushort2 tex1Dfetch(texture< ushort2, 1, cudaReadModeElementType>  t, int x) 
#line 189 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 193 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 204 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 195 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline short4 tex1Dfetch(texture< short4, 1, cudaReadModeElementType>  t, int x) 
#line 196 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 200 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 211 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 202 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline ushort4 tex1Dfetch(texture< ushort4, 1, cudaReadModeElementType>  t, int x) 
#line 203 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 207 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 218 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 215 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline int tex1Dfetch(texture< int, 1, cudaReadModeElementType>  t, int x) 
#line 216 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 220 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 231 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 222 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned tex1Dfetch(texture< unsigned, 1, cudaReadModeElementType>  t, int x) 
#line 223 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 227 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 238 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 229 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline int1 tex1Dfetch(texture< int1, 1, cudaReadModeElementType>  t, int x) 
#line 230 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 234 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 245 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 236 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline uint1 tex1Dfetch(texture< uint1, 1, cudaReadModeElementType>  t, int x) 
#line 237 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 241 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 252 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 243 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline int2 tex1Dfetch(texture< int2, 1, cudaReadModeElementType>  t, int x) 
#line 244 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 248 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 259 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 250 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline uint2 tex1Dfetch(texture< uint2, 1, cudaReadModeElementType>  t, int x) 
#line 251 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 255 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 266 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 257 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline int4 tex1Dfetch(texture< int4, 1, cudaReadModeElementType>  t, int x) 
#line 258 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 262 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 273 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 264 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline uint4 tex1Dfetch(texture< uint4, 1, cudaReadModeElementType>  t, int x) 
#line 265 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 269 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 280 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 279 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline long tex1Dfetch(texture< long, 1, cudaReadModeElementType>  t, int x) 
#line 280 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 284 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 295 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 286 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned long tex1Dfetch(texture< unsigned long, 1, cudaReadModeElementType>  t, int x) 
#line 287 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 291 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 302 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 293 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline long1 tex1Dfetch(texture< long1, 1, cudaReadModeElementType>  t, int x) 
#line 294 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 298 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 309 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 300 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline ulong1 tex1Dfetch(texture< ulong1, 1, cudaReadModeElementType>  t, int x) 
#line 301 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 305 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 316 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 307 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline long2 tex1Dfetch(texture< long2, 1, cudaReadModeElementType>  t, int x) 
#line 308 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 312 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 323 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 314 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline ulong2 tex1Dfetch(texture< ulong2, 1, cudaReadModeElementType>  t, int x) 
#line 315 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 319 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 330 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 321 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline long4 tex1Dfetch(texture< long4, 1, cudaReadModeElementType>  t, int x) 
#line 322 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 326 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 337 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 328 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline ulong4 tex1Dfetch(texture< ulong4, 1, cudaReadModeElementType>  t, int x) 
#line 329 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 333 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 344 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 343 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float tex1Dfetch(texture< float, 1, cudaReadModeElementType>  t, int x) 
#line 344 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 348 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 359 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 350 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex1Dfetch(texture< float1, 1, cudaReadModeElementType>  t, int x) 
#line 351 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 355 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 366 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 357 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex1Dfetch(texture< float2, 1, cudaReadModeElementType>  t, int x) 
#line 358 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 362 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 373 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 364 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex1Dfetch(texture< float4, 1, cudaReadModeElementType>  t, int x) 
#line 365 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 369 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 380 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 377 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float tex1Dfetch(texture< char, 1, cudaReadModeNormalizedFloat>  t, int x) 
#line 378 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 387 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 400 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 389 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float tex1Dfetch(texture< signed char, 1, cudaReadModeNormalizedFloat>  t, int x) 
#line 390 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 395 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 408 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 397 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float tex1Dfetch(texture< unsigned char, 1, cudaReadModeNormalizedFloat>  t, int x) 
#line 398 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 403 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 416 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 405 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex1Dfetch(texture< char1, 1, cudaReadModeNormalizedFloat>  t, int x) 
#line 406 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 411 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 424 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 413 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex1Dfetch(texture< uchar1, 1, cudaReadModeNormalizedFloat>  t, int x) 
#line 414 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 419 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 432 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 421 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex1Dfetch(texture< char2, 1, cudaReadModeNormalizedFloat>  t, int x) 
#line 422 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 427 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 440 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 429 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex1Dfetch(texture< uchar2, 1, cudaReadModeNormalizedFloat>  t, int x) 
#line 430 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 435 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 448 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 437 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex1Dfetch(texture< char4, 1, cudaReadModeNormalizedFloat>  t, int x) 
#line 438 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 443 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 456 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 445 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex1Dfetch(texture< uchar4, 1, cudaReadModeNormalizedFloat>  t, int x) 
#line 446 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 451 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 464 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 459 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float tex1Dfetch(texture< short, 1, cudaReadModeNormalizedFloat>  t, int x) 
#line 460 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 465 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 478 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 467 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float tex1Dfetch(texture< unsigned short, 1, cudaReadModeNormalizedFloat>  t, int x) 
#line 468 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 473 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 486 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 475 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex1Dfetch(texture< short1, 1, cudaReadModeNormalizedFloat>  t, int x) 
#line 476 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 481 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 494 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 483 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex1Dfetch(texture< ushort1, 1, cudaReadModeNormalizedFloat>  t, int x) 
#line 484 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 489 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 502 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 491 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex1Dfetch(texture< short2, 1, cudaReadModeNormalizedFloat>  t, int x) 
#line 492 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 497 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 510 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 499 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex1Dfetch(texture< ushort2, 1, cudaReadModeNormalizedFloat>  t, int x) 
#line 500 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 505 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 518 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 507 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex1Dfetch(texture< short4, 1, cudaReadModeNormalizedFloat>  t, int x) 
#line 508 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 513 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 526 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 515 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex1Dfetch(texture< ushort4, 1, cudaReadModeNormalizedFloat>  t, int x) 
#line 516 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 521 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 534 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 529 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline char tex1D(texture< char, 1, cudaReadModeElementType>  t, float x) 
#line 530 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 538 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 549 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 540 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline signed char tex1D(texture< signed char, 1, cudaReadModeElementType>  t, float x) 
#line 541 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 545 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 556 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 547 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned char tex1D(texture< unsigned char, 1, cudaReadModeElementType>  t, float x) 
#line 548 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 552 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 563 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 554 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline char1 tex1D(texture< char1, 1, cudaReadModeElementType>  t, float x) 
#line 555 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 559 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 570 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 561 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline uchar1 tex1D(texture< uchar1, 1, cudaReadModeElementType>  t, float x) 
#line 562 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 566 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 577 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 568 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline char2 tex1D(texture< char2, 1, cudaReadModeElementType>  t, float x) 
#line 569 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 573 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 584 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 575 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline uchar2 tex1D(texture< uchar2, 1, cudaReadModeElementType>  t, float x) 
#line 576 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 580 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 591 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 582 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline char4 tex1D(texture< char4, 1, cudaReadModeElementType>  t, float x) 
#line 583 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 587 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 598 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 589 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline uchar4 tex1D(texture< uchar4, 1, cudaReadModeElementType>  t, float x) 
#line 590 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 594 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 605 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 602 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline short tex1D(texture< short, 1, cudaReadModeElementType>  t, float x) 
#line 603 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 607 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 618 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 609 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned short tex1D(texture< unsigned short, 1, cudaReadModeElementType>  t, float x) 
#line 610 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 614 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 625 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 616 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline short1 tex1D(texture< short1, 1, cudaReadModeElementType>  t, float x) 
#line 617 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 621 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 632 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 623 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline ushort1 tex1D(texture< ushort1, 1, cudaReadModeElementType>  t, float x) 
#line 624 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 628 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 639 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 630 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline short2 tex1D(texture< short2, 1, cudaReadModeElementType>  t, float x) 
#line 631 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 635 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 646 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 637 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline ushort2 tex1D(texture< ushort2, 1, cudaReadModeElementType>  t, float x) 
#line 638 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 642 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 653 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 644 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline short4 tex1D(texture< short4, 1, cudaReadModeElementType>  t, float x) 
#line 645 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 649 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 660 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 651 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline ushort4 tex1D(texture< ushort4, 1, cudaReadModeElementType>  t, float x) 
#line 652 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 656 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 667 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 664 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline int tex1D(texture< int, 1, cudaReadModeElementType>  t, float x) 
#line 665 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 669 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 680 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 671 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned tex1D(texture< unsigned, 1, cudaReadModeElementType>  t, float x) 
#line 672 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 676 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 687 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 678 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline int1 tex1D(texture< int1, 1, cudaReadModeElementType>  t, float x) 
#line 679 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 683 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 694 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 685 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline uint1 tex1D(texture< uint1, 1, cudaReadModeElementType>  t, float x) 
#line 686 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 690 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 701 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 692 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline int2 tex1D(texture< int2, 1, cudaReadModeElementType>  t, float x) 
#line 693 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 697 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 708 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 699 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline uint2 tex1D(texture< uint2, 1, cudaReadModeElementType>  t, float x) 
#line 700 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 704 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 715 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 706 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline int4 tex1D(texture< int4, 1, cudaReadModeElementType>  t, float x) 
#line 707 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 711 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 722 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 713 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline uint4 tex1D(texture< uint4, 1, cudaReadModeElementType>  t, float x) 
#line 714 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 718 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 729 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 734 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline long tex1D(texture< long, 1, cudaReadModeElementType>  t, float x) 
#line 735 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 739 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 750 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 741 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned long tex1D(texture< unsigned long, 1, cudaReadModeElementType>  t, float x) 
#line 742 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 746 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 757 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 748 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline long1 tex1D(texture< long1, 1, cudaReadModeElementType>  t, float x) 
#line 749 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 753 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 764 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 755 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline ulong1 tex1D(texture< ulong1, 1, cudaReadModeElementType>  t, float x) 
#line 756 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 760 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 771 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 762 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline long2 tex1D(texture< long2, 1, cudaReadModeElementType>  t, float x) 
#line 763 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 767 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 778 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 769 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline ulong2 tex1D(texture< ulong2, 1, cudaReadModeElementType>  t, float x) 
#line 770 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 774 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 785 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 776 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline long4 tex1D(texture< long4, 1, cudaReadModeElementType>  t, float x) 
#line 777 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 781 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 792 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 783 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline ulong4 tex1D(texture< ulong4, 1, cudaReadModeElementType>  t, float x) 
#line 784 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 788 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 799 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 798 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float tex1D(texture< float, 1, cudaReadModeElementType>  t, float x) 
#line 799 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 803 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 814 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 805 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex1D(texture< float1, 1, cudaReadModeElementType>  t, float x) 
#line 806 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 810 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 821 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 812 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex1D(texture< float2, 1, cudaReadModeElementType>  t, float x) 
#line 813 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 817 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 828 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 819 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex1D(texture< float4, 1, cudaReadModeElementType>  t, float x) 
#line 820 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 824 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 835 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 832 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float tex1D(texture< char, 1, cudaReadModeNormalizedFloat>  t, float x) 
#line 833 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 842 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 855 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 844 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float tex1D(texture< signed char, 1, cudaReadModeNormalizedFloat>  t, float x) 
#line 845 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 850 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 863 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 852 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float tex1D(texture< unsigned char, 1, cudaReadModeNormalizedFloat>  t, float x) 
#line 853 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 858 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 871 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 860 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex1D(texture< char1, 1, cudaReadModeNormalizedFloat>  t, float x) 
#line 861 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 866 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 879 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 868 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex1D(texture< uchar1, 1, cudaReadModeNormalizedFloat>  t, float x) 
#line 869 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 874 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 887 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 876 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex1D(texture< char2, 1, cudaReadModeNormalizedFloat>  t, float x) 
#line 877 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 882 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 895 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 884 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex1D(texture< uchar2, 1, cudaReadModeNormalizedFloat>  t, float x) 
#line 885 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 890 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 903 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 892 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex1D(texture< char4, 1, cudaReadModeNormalizedFloat>  t, float x) 
#line 893 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 898 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 911 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 900 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex1D(texture< uchar4, 1, cudaReadModeNormalizedFloat>  t, float x) 
#line 901 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 906 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 919 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 914 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float tex1D(texture< short, 1, cudaReadModeNormalizedFloat>  t, float x) 
#line 915 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 920 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 933 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 922 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float tex1D(texture< unsigned short, 1, cudaReadModeNormalizedFloat>  t, float x) 
#line 923 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 928 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 941 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 930 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex1D(texture< short1, 1, cudaReadModeNormalizedFloat>  t, float x) 
#line 931 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 936 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 949 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 938 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex1D(texture< ushort1, 1, cudaReadModeNormalizedFloat>  t, float x) 
#line 939 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 944 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 957 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 946 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex1D(texture< short2, 1, cudaReadModeNormalizedFloat>  t, float x) 
#line 947 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 952 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 965 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 954 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex1D(texture< ushort2, 1, cudaReadModeNormalizedFloat>  t, float x) 
#line 955 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 960 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 973 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 962 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex1D(texture< short4, 1, cudaReadModeNormalizedFloat>  t, float x) 
#line 963 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 968 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 981 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 970 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex1D(texture< ushort4, 1, cudaReadModeNormalizedFloat>  t, float x) 
#line 971 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 976 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 989 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 984 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline char tex2D(texture< char, 2, cudaReadModeElementType>  t, float x, float y) 
#line 985 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 993 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1004 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 995 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline signed char tex2D(texture< signed char, 2, cudaReadModeElementType>  t, float x, float y) 
#line 996 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1000 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1011 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 1002 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned char tex2D(texture< unsigned char, 2, cudaReadModeElementType>  t, float x, float y) 
#line 1003 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1007 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1018 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 1009 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline char1 tex2D(texture< char1, 2, cudaReadModeElementType>  t, float x, float y) 
#line 1010 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1014 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1025 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 1016 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline uchar1 tex2D(texture< uchar1, 2, cudaReadModeElementType>  t, float x, float y) 
#line 1017 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1021 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1032 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 1023 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline char2 tex2D(texture< char2, 2, cudaReadModeElementType>  t, float x, float y) 
#line 1024 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1028 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1039 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 1030 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline uchar2 tex2D(texture< uchar2, 2, cudaReadModeElementType>  t, float x, float y) 
#line 1031 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1035 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1046 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 1037 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline char4 tex2D(texture< char4, 2, cudaReadModeElementType>  t, float x, float y) 
#line 1038 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1042 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1053 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 1044 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline uchar4 tex2D(texture< uchar4, 2, cudaReadModeElementType>  t, float x, float y) 
#line 1045 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1049 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1060 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 1057 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline short tex2D(texture< short, 2, cudaReadModeElementType>  t, float x, float y) 
#line 1058 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1062 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1073 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 1064 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned short tex2D(texture< unsigned short, 2, cudaReadModeElementType>  t, float x, float y) 
#line 1065 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1069 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1080 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 1071 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline short1 tex2D(texture< short1, 2, cudaReadModeElementType>  t, float x, float y) 
#line 1072 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1076 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1087 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 1078 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline ushort1 tex2D(texture< ushort1, 2, cudaReadModeElementType>  t, float x, float y) 
#line 1079 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1083 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1094 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 1085 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline short2 tex2D(texture< short2, 2, cudaReadModeElementType>  t, float x, float y) 
#line 1086 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1090 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1101 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 1092 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline ushort2 tex2D(texture< ushort2, 2, cudaReadModeElementType>  t, float x, float y) 
#line 1093 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1097 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1108 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 1099 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline short4 tex2D(texture< short4, 2, cudaReadModeElementType>  t, float x, float y) 
#line 1100 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1104 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1115 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 1106 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline ushort4 tex2D(texture< ushort4, 2, cudaReadModeElementType>  t, float x, float y) 
#line 1107 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1111 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1122 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 1119 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline int tex2D(texture< int, 2, cudaReadModeElementType>  t, float x, float y) 
#line 1120 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1124 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1135 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 1126 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned tex2D(texture< unsigned, 2, cudaReadModeElementType>  t, float x, float y) 
#line 1127 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1131 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1142 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 1133 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline int1 tex2D(texture< int1, 2, cudaReadModeElementType>  t, float x, float y) 
#line 1134 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1138 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1149 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 1140 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline uint1 tex2D(texture< uint1, 2, cudaReadModeElementType>  t, float x, float y) 
#line 1141 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1145 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1156 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 1147 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline int2 tex2D(texture< int2, 2, cudaReadModeElementType>  t, float x, float y) 
#line 1148 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1152 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1163 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 1154 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline uint2 tex2D(texture< uint2, 2, cudaReadModeElementType>  t, float x, float y) 
#line 1155 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1159 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1170 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 1161 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline int4 tex2D(texture< int4, 2, cudaReadModeElementType>  t, float x, float y) 
#line 1162 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1166 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1177 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 1168 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline uint4 tex2D(texture< uint4, 2, cudaReadModeElementType>  t, float x, float y) 
#line 1169 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1173 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1184 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 1183 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline long tex2D(texture< long, 2, cudaReadModeElementType>  t, float x, float y) 
#line 1184 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1188 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1199 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 1190 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned long tex2D(texture< unsigned long, 2, cudaReadModeElementType>  t, float x, float y) 
#line 1191 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1195 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1206 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 1197 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline long1 tex2D(texture< long1, 2, cudaReadModeElementType>  t, float x, float y) 
#line 1198 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1202 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1213 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 1204 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline ulong1 tex2D(texture< ulong1, 2, cudaReadModeElementType>  t, float x, float y) 
#line 1205 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1209 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1220 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 1211 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline long2 tex2D(texture< long2, 2, cudaReadModeElementType>  t, float x, float y) 
#line 1212 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1216 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1227 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 1218 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline ulong2 tex2D(texture< ulong2, 2, cudaReadModeElementType>  t, float x, float y) 
#line 1219 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1223 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1234 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 1225 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline long4 tex2D(texture< long4, 2, cudaReadModeElementType>  t, float x, float y) 
#line 1226 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1230 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1241 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 1232 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline ulong4 tex2D(texture< ulong4, 2, cudaReadModeElementType>  t, float x, float y) 
#line 1233 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1237 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1248 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 1247 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float tex2D(texture< float, 2, cudaReadModeElementType>  t, float x, float y) 
#line 1248 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1252 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1263 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 1254 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex2D(texture< float1, 2, cudaReadModeElementType>  t, float x, float y) 
#line 1255 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1259 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1270 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 1261 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex2D(texture< float2, 2, cudaReadModeElementType>  t, float x, float y) 
#line 1262 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1266 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1277 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 1268 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex2D(texture< float4, 2, cudaReadModeElementType>  t, float x, float y) 
#line 1269 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1273 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1284 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 1281 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float tex2D(texture< char, 2, cudaReadModeNormalizedFloat>  t, float x, float y) 
#line 1282 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1291 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 1304 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 1293 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float tex2D(texture< signed char, 2, cudaReadModeNormalizedFloat>  t, float x, float y) 
#line 1294 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1299 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 1312 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 1301 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float tex2D(texture< unsigned char, 2, cudaReadModeNormalizedFloat>  t, float x, float y) 
#line 1302 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1307 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 1320 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 1309 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex2D(texture< char1, 2, cudaReadModeNormalizedFloat>  t, float x, float y) 
#line 1310 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1315 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 1328 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 1317 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex2D(texture< uchar1, 2, cudaReadModeNormalizedFloat>  t, float x, float y) 
#line 1318 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1323 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 1336 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 1325 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex2D(texture< char2, 2, cudaReadModeNormalizedFloat>  t, float x, float y) 
#line 1326 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1331 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 1344 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 1333 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex2D(texture< uchar2, 2, cudaReadModeNormalizedFloat>  t, float x, float y) 
#line 1334 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1339 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 1352 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 1341 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex2D(texture< char4, 2, cudaReadModeNormalizedFloat>  t, float x, float y) 
#line 1342 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1347 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 1360 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 1349 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex2D(texture< uchar4, 2, cudaReadModeNormalizedFloat>  t, float x, float y) 
#line 1350 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1355 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 1368 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 1363 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float tex2D(texture< short, 2, cudaReadModeNormalizedFloat>  t, float x, float y) 
#line 1364 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1369 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 1382 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 1371 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float tex2D(texture< unsigned short, 2, cudaReadModeNormalizedFloat>  t, float x, float y) 
#line 1372 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1377 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 1390 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 1379 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex2D(texture< short1, 2, cudaReadModeNormalizedFloat>  t, float x, float y) 
#line 1380 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1385 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 1398 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 1387 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex2D(texture< ushort1, 2, cudaReadModeNormalizedFloat>  t, float x, float y) 
#line 1388 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1393 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 1406 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 1395 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex2D(texture< short2, 2, cudaReadModeNormalizedFloat>  t, float x, float y) 
#line 1396 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1401 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 1414 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 1403 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex2D(texture< ushort2, 2, cudaReadModeNormalizedFloat>  t, float x, float y) 
#line 1404 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1409 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 1422 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 1411 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex2D(texture< short4, 2, cudaReadModeNormalizedFloat>  t, float x, float y) 
#line 1412 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1417 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 1430 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 1419 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex2D(texture< ushort4, 2, cudaReadModeNormalizedFloat>  t, float x, float y) 
#line 1420 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1425 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 1438 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 1433 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline char tex1DLayered(texture< char, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1434 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1442 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1453 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 1444 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline signed char tex1DLayered(texture< signed char, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1445 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1449 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1460 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 1451 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned char tex1DLayered(texture< unsigned char, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1452 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1456 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1467 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 1458 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline char1 tex1DLayered(texture< char1, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1459 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1463 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1474 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 1465 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline uchar1 tex1DLayered(texture< uchar1, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1466 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1470 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1481 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 1472 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline char2 tex1DLayered(texture< char2, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1473 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1477 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1488 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 1479 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline uchar2 tex1DLayered(texture< uchar2, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1480 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1484 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1495 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 1486 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline char4 tex1DLayered(texture< char4, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1487 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1491 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1502 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 1493 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline uchar4 tex1DLayered(texture< uchar4, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1494 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1498 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1509 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 1506 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline short tex1DLayered(texture< short, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1507 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1511 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1522 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 1513 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned short tex1DLayered(texture< unsigned short, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1514 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1518 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1529 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 1520 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline short1 tex1DLayered(texture< short1, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1521 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1525 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1536 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 1527 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline ushort1 tex1DLayered(texture< ushort1, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1528 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1532 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1543 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 1534 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline short2 tex1DLayered(texture< short2, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1535 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1539 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1550 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 1541 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline ushort2 tex1DLayered(texture< ushort2, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1542 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1546 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1557 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 1548 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline short4 tex1DLayered(texture< short4, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1549 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1553 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1564 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 1555 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline ushort4 tex1DLayered(texture< ushort4, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1556 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1560 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1571 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 1568 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline int tex1DLayered(texture< int, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1569 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1573 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1584 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 1575 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned tex1DLayered(texture< unsigned, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1576 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1580 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1591 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 1582 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline int1 tex1DLayered(texture< int1, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1583 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1587 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1598 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 1589 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline uint1 tex1DLayered(texture< uint1, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1590 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1594 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1605 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 1596 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline int2 tex1DLayered(texture< int2, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1597 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1601 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1612 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 1603 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline uint2 tex1DLayered(texture< uint2, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1604 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1608 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1619 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 1610 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline int4 tex1DLayered(texture< int4, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1611 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1615 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1626 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 1617 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline uint4 tex1DLayered(texture< uint4, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1618 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1622 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1633 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 1632 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline long tex1DLayered(texture< long, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1633 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1637 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1648 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 1639 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned long tex1DLayered(texture< unsigned long, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1640 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1644 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1655 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 1646 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline long1 tex1DLayered(texture< long1, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1647 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1651 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1662 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 1653 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline ulong1 tex1DLayered(texture< ulong1, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1654 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1658 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1669 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 1660 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline long2 tex1DLayered(texture< long2, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1661 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1665 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1676 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 1667 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline ulong2 tex1DLayered(texture< ulong2, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1668 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1672 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1683 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 1674 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline long4 tex1DLayered(texture< long4, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1675 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1679 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1690 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 1681 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline ulong4 tex1DLayered(texture< ulong4, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1682 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1686 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1697 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 1696 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float tex1DLayered(texture< float, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1697 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1701 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1712 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 1703 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex1DLayered(texture< float1, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1704 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1708 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1719 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 1710 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex1DLayered(texture< float2, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1711 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1715 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1726 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 1717 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex1DLayered(texture< float4, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1718 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1722 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1733 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 1730 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float tex1DLayered(texture< char, 241, cudaReadModeNormalizedFloat>  t, float x, int layer) 
#line 1731 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1740 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 1753 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 1742 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float tex1DLayered(texture< signed char, 241, cudaReadModeNormalizedFloat>  t, float x, int layer) 
#line 1743 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1748 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 1761 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 1750 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float tex1DLayered(texture< unsigned char, 241, cudaReadModeNormalizedFloat>  t, float x, int layer) 
#line 1751 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1756 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 1769 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 1758 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex1DLayered(texture< char1, 241, cudaReadModeNormalizedFloat>  t, float x, int layer) 
#line 1759 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1764 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 1777 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 1766 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex1DLayered(texture< uchar1, 241, cudaReadModeNormalizedFloat>  t, float x, int layer) 
#line 1767 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1772 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 1785 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 1774 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex1DLayered(texture< char2, 241, cudaReadModeNormalizedFloat>  t, float x, int layer) 
#line 1775 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1780 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 1793 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 1782 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex1DLayered(texture< uchar2, 241, cudaReadModeNormalizedFloat>  t, float x, int layer) 
#line 1783 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1788 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 1801 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 1790 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex1DLayered(texture< char4, 241, cudaReadModeNormalizedFloat>  t, float x, int layer) 
#line 1791 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1796 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 1809 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 1798 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex1DLayered(texture< uchar4, 241, cudaReadModeNormalizedFloat>  t, float x, int layer) 
#line 1799 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1804 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 1817 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 1812 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float tex1DLayered(texture< short, 241, cudaReadModeNormalizedFloat>  t, float x, int layer) 
#line 1813 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1818 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 1831 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 1820 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float tex1DLayered(texture< unsigned short, 241, cudaReadModeNormalizedFloat>  t, float x, int layer) 
#line 1821 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1826 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 1839 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 1828 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex1DLayered(texture< short1, 241, cudaReadModeNormalizedFloat>  t, float x, int layer) 
#line 1829 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1834 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 1847 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 1836 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex1DLayered(texture< ushort1, 241, cudaReadModeNormalizedFloat>  t, float x, int layer) 
#line 1837 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1842 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 1855 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 1844 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex1DLayered(texture< short2, 241, cudaReadModeNormalizedFloat>  t, float x, int layer) 
#line 1845 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1850 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 1863 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 1852 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex1DLayered(texture< ushort2, 241, cudaReadModeNormalizedFloat>  t, float x, int layer) 
#line 1853 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1858 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 1871 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 1860 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex1DLayered(texture< short4, 241, cudaReadModeNormalizedFloat>  t, float x, int layer) 
#line 1861 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1866 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 1879 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 1868 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex1DLayered(texture< ushort4, 241, cudaReadModeNormalizedFloat>  t, float x, int layer) 
#line 1869 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1874 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 1887 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 1882 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline char tex2DLayered(texture< char, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 1883 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 1891 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1902 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 1893 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline signed char tex2DLayered(texture< signed char, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 1894 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 1898 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1909 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 1900 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned char tex2DLayered(texture< unsigned char, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 1901 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 1905 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1916 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 1907 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline char1 tex2DLayered(texture< char1, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 1908 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 1912 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1923 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 1914 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline uchar1 tex2DLayered(texture< uchar1, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 1915 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 1919 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1930 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 1921 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline char2 tex2DLayered(texture< char2, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 1922 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 1926 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1937 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 1928 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline uchar2 tex2DLayered(texture< uchar2, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 1929 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 1933 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1944 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 1935 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline char4 tex2DLayered(texture< char4, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 1936 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 1940 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1951 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 1942 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline uchar4 tex2DLayered(texture< uchar4, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 1943 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 1947 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1958 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 1955 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline short tex2DLayered(texture< short, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 1956 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 1960 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1971 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 1962 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned short tex2DLayered(texture< unsigned short, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 1963 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 1967 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1978 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 1969 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline short1 tex2DLayered(texture< short1, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 1970 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 1974 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1985 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 1976 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline ushort1 tex2DLayered(texture< ushort1, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 1977 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 1981 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1992 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 1983 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline short2 tex2DLayered(texture< short2, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 1984 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 1988 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1999 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 1990 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline ushort2 tex2DLayered(texture< ushort2, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 1991 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 1995 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2006 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 1997 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline short4 tex2DLayered(texture< short4, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 1998 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2002 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2013 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 2004 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline ushort4 tex2DLayered(texture< ushort4, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 2005 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2009 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2020 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 2017 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline int tex2DLayered(texture< int, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 2018 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2022 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2033 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 2024 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned tex2DLayered(texture< unsigned, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 2025 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2029 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2040 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 2031 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline int1 tex2DLayered(texture< int1, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 2032 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2036 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2047 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 2038 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline uint1 tex2DLayered(texture< uint1, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 2039 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2043 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2054 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 2045 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline int2 tex2DLayered(texture< int2, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 2046 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2050 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2061 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 2052 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline uint2 tex2DLayered(texture< uint2, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 2053 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2057 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2068 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 2059 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline int4 tex2DLayered(texture< int4, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 2060 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2064 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2075 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 2066 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline uint4 tex2DLayered(texture< uint4, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 2067 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2071 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2082 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 2081 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline long tex2DLayered(texture< long, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 2082 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2086 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2097 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 2088 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned long tex2DLayered(texture< unsigned long, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 2089 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2093 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2104 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 2095 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline long1 tex2DLayered(texture< long1, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 2096 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2100 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2111 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 2102 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline ulong1 tex2DLayered(texture< ulong1, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 2103 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2107 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2118 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 2109 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline long2 tex2DLayered(texture< long2, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 2110 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2114 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2125 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 2116 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline ulong2 tex2DLayered(texture< ulong2, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 2117 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2121 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2132 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 2123 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline long4 tex2DLayered(texture< long4, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 2124 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2128 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2139 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 2130 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline ulong4 tex2DLayered(texture< ulong4, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 2131 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2135 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2146 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 2145 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float tex2DLayered(texture< float, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 2146 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2150 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2161 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 2152 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex2DLayered(texture< float1, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 2153 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2157 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2168 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 2159 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex2DLayered(texture< float2, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 2160 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2164 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2175 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 2166 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex2DLayered(texture< float4, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 2167 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2171 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2182 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 2179 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float tex2DLayered(texture< char, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer) 
#line 2180 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2189 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 2202 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 2191 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float tex2DLayered(texture< signed char, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer) 
#line 2192 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2197 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 2210 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 2199 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float tex2DLayered(texture< unsigned char, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer) 
#line 2200 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2205 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 2218 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 2207 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex2DLayered(texture< char1, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer) 
#line 2208 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2213 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 2226 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 2215 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex2DLayered(texture< uchar1, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer) 
#line 2216 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2221 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 2234 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 2223 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex2DLayered(texture< char2, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer) 
#line 2224 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2229 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 2242 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 2231 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex2DLayered(texture< uchar2, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer) 
#line 2232 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2237 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 2250 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 2239 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex2DLayered(texture< char4, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer) 
#line 2240 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2245 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 2258 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 2247 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex2DLayered(texture< uchar4, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer) 
#line 2248 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2253 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 2266 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 2261 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float tex2DLayered(texture< short, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer) 
#line 2262 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2267 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 2280 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 2269 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float tex2DLayered(texture< unsigned short, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer) 
#line 2270 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2275 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 2288 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 2277 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex2DLayered(texture< short1, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer) 
#line 2278 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2283 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 2296 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 2285 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex2DLayered(texture< ushort1, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer) 
#line 2286 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2291 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 2304 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 2293 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex2DLayered(texture< short2, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer) 
#line 2294 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2299 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 2312 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 2301 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex2DLayered(texture< ushort2, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer) 
#line 2302 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2307 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 2320 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 2309 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex2DLayered(texture< short4, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer) 
#line 2310 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2315 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 2328 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 2317 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex2DLayered(texture< ushort4, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer) 
#line 2318 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2323 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 2336 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 2331 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline char tex3D(texture< char, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2332 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2340 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2351 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 2342 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline signed char tex3D(texture< signed char, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2343 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2347 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2358 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 2349 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned char tex3D(texture< unsigned char, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2350 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2354 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2365 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 2356 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline char1 tex3D(texture< char1, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2357 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2361 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2372 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 2363 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline uchar1 tex3D(texture< uchar1, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2364 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2368 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2379 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 2370 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline char2 tex3D(texture< char2, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2371 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2375 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2386 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 2377 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline uchar2 tex3D(texture< uchar2, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2378 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2382 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2393 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 2384 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline char4 tex3D(texture< char4, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2385 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2389 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2400 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 2391 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline uchar4 tex3D(texture< uchar4, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2392 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2396 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2407 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 2404 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline short tex3D(texture< short, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2405 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2409 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2420 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 2411 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned short tex3D(texture< unsigned short, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2412 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2416 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2427 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 2418 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline short1 tex3D(texture< short1, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2419 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2423 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2434 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 2425 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline ushort1 tex3D(texture< ushort1, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2426 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2430 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2441 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 2432 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline short2 tex3D(texture< short2, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2433 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2437 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2448 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 2439 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline ushort2 tex3D(texture< ushort2, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2440 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2444 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2455 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 2446 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline short4 tex3D(texture< short4, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2447 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2451 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2462 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 2453 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline ushort4 tex3D(texture< ushort4, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2454 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2458 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2469 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 2466 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline int tex3D(texture< int, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2467 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2471 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2482 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 2473 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned tex3D(texture< unsigned, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2474 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2478 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2489 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 2480 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline int1 tex3D(texture< int1, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2481 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2485 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2496 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 2487 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline uint1 tex3D(texture< uint1, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2488 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2492 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2503 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 2494 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline int2 tex3D(texture< int2, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2495 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2499 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2510 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 2501 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline uint2 tex3D(texture< uint2, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2502 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2506 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2517 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 2508 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline int4 tex3D(texture< int4, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2509 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2513 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2524 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 2515 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline uint4 tex3D(texture< uint4, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2516 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2520 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2531 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 2530 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline long tex3D(texture< long, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2531 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2535 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2546 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 2537 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned long tex3D(texture< unsigned long, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2538 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2542 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2553 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 2544 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline long1 tex3D(texture< long1, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2545 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2549 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2560 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 2551 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline ulong1 tex3D(texture< ulong1, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2552 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2556 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2567 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 2558 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline long2 tex3D(texture< long2, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2559 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2563 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2574 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 2565 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline ulong2 tex3D(texture< ulong2, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2566 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2570 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2581 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 2572 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline long4 tex3D(texture< long4, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2573 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2577 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2588 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 2579 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline ulong4 tex3D(texture< ulong4, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2580 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2584 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2595 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 2594 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float tex3D(texture< float, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2595 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2599 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2610 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 2601 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex3D(texture< float1, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2602 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2606 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2617 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 2608 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex3D(texture< float2, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2609 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2613 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2624 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 2615 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex3D(texture< float4, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2616 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2620 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2631 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 2628 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float tex3D(texture< char, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z) 
#line 2629 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2638 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 2651 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 2640 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float tex3D(texture< signed char, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z) 
#line 2641 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2646 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 2659 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 2648 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float tex3D(texture< unsigned char, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z) 
#line 2649 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2654 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 2667 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 2656 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex3D(texture< char1, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z) 
#line 2657 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2662 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 2675 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 2664 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex3D(texture< uchar1, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z) 
#line 2665 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2670 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 2683 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 2672 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex3D(texture< char2, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z) 
#line 2673 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2678 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 2691 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 2680 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex3D(texture< uchar2, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z) 
#line 2681 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2686 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 2699 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 2688 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex3D(texture< char4, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z) 
#line 2689 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2694 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 2707 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 2696 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex3D(texture< uchar4, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z) 
#line 2697 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2702 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 2715 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 2710 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float tex3D(texture< short, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z) 
#line 2711 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2716 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 2729 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 2718 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float tex3D(texture< unsigned short, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z) 
#line 2719 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2724 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 2737 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 2726 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex3D(texture< short1, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z) 
#line 2727 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2732 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 2745 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 2734 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex3D(texture< ushort1, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z) 
#line 2735 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2740 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 2753 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 2742 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex3D(texture< short2, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z) 
#line 2743 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2748 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 2761 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 2750 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex3D(texture< ushort2, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z) 
#line 2751 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2756 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 2769 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 2758 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex3D(texture< short4, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z) 
#line 2759 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2764 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 2777 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 2766 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex3D(texture< ushort4, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z) 
#line 2767 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2772 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 2785 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 2780 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline char texCubemap(texture< char, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2781 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2789 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2800 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 2791 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline signed char texCubemap(texture< signed char, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2792 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2796 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2807 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 2798 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned char texCubemap(texture< unsigned char, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2799 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2803 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2814 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 2805 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline char1 texCubemap(texture< char1, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2806 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2810 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2821 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 2812 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline uchar1 texCubemap(texture< uchar1, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2813 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2817 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2828 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 2819 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline char2 texCubemap(texture< char2, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2820 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2824 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2835 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 2826 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline uchar2 texCubemap(texture< uchar2, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2827 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2831 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2842 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 2833 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline char4 texCubemap(texture< char4, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2834 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2838 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2849 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 2840 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline uchar4 texCubemap(texture< uchar4, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2841 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2845 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2856 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 2853 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline short texCubemap(texture< short, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2854 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2858 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2869 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 2860 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned short texCubemap(texture< unsigned short, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2861 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2865 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2876 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 2867 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline short1 texCubemap(texture< short1, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2868 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2872 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2883 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 2874 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline ushort1 texCubemap(texture< ushort1, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2875 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2879 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2890 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 2881 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline short2 texCubemap(texture< short2, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2882 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2886 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2897 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 2888 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline ushort2 texCubemap(texture< ushort2, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2889 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2893 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2904 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 2895 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline short4 texCubemap(texture< short4, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2896 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2900 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2911 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 2902 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline ushort4 texCubemap(texture< ushort4, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2903 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2907 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2918 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 2915 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline int texCubemap(texture< int, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2916 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2920 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2931 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 2922 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned texCubemap(texture< unsigned, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2923 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2927 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2938 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 2929 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline int1 texCubemap(texture< int1, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2930 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2934 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2945 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 2936 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline uint1 texCubemap(texture< uint1, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2937 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2941 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2952 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 2943 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline int2 texCubemap(texture< int2, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2944 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2948 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2959 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 2950 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline uint2 texCubemap(texture< uint2, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2951 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2955 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2966 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 2957 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline int4 texCubemap(texture< int4, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2958 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2962 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2973 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 2964 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline uint4 texCubemap(texture< uint4, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2965 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2969 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2980 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 2979 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline long texCubemap(texture< long, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2980 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2984 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2995 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 2986 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned long texCubemap(texture< unsigned long, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2987 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2991 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 3002 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 2993 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline long1 texCubemap(texture< long1, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2994 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2998 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 3009 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 3000 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline ulong1 texCubemap(texture< ulong1, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 3001 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 3005 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 3016 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 3007 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline long2 texCubemap(texture< long2, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 3008 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 3012 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 3023 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 3014 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline ulong2 texCubemap(texture< ulong2, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 3015 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 3019 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 3030 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 3021 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline long4 texCubemap(texture< long4, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 3022 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 3026 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 3037 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 3028 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline ulong4 texCubemap(texture< ulong4, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 3029 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 3033 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 3044 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 3043 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float texCubemap(texture< float, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 3044 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 3048 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 3059 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 3050 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float1 texCubemap(texture< float1, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 3051 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 3055 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 3066 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 3057 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float2 texCubemap(texture< float2, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 3058 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 3062 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 3073 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 3064 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float4 texCubemap(texture< float4, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 3065 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 3069 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 3080 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 3077 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float texCubemap(texture< char, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z) 
#line 3078 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 3087 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 3100 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 3089 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float texCubemap(texture< signed char, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z) 
#line 3090 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 3095 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 3108 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 3097 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float texCubemap(texture< unsigned char, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z) 
#line 3098 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 3103 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 3116 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 3105 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float1 texCubemap(texture< char1, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z) 
#line 3106 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 3111 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 3124 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 3113 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float1 texCubemap(texture< uchar1, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z) 
#line 3114 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 3119 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 3132 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 3121 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float2 texCubemap(texture< char2, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z) 
#line 3122 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 3127 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 3140 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 3129 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float2 texCubemap(texture< uchar2, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z) 
#line 3130 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 3135 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 3148 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 3137 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float4 texCubemap(texture< char4, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z) 
#line 3138 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 3143 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 3156 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 3145 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float4 texCubemap(texture< uchar4, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z) 
#line 3146 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 3151 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 3164 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 3159 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float texCubemap(texture< short, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z) 
#line 3160 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 3165 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 3178 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 3167 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float texCubemap(texture< unsigned short, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z) 
#line 3168 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 3173 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 3186 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 3175 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float1 texCubemap(texture< short1, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z) 
#line 3176 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 3181 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 3194 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 3183 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float1 texCubemap(texture< ushort1, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z) 
#line 3184 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 3189 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 3202 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 3191 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float2 texCubemap(texture< short2, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z) 
#line 3192 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 3197 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 3210 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 3199 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float2 texCubemap(texture< ushort2, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z) 
#line 3200 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 3205 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 3218 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 3207 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float4 texCubemap(texture< short4, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z) 
#line 3208 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 3213 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 3226 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 3215 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float4 texCubemap(texture< ushort4, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z) 
#line 3216 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 3221 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 3234 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 3229 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline char texCubemapLayered(texture< char, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3230 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3238 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 3249 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 3240 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline signed char texCubemapLayered(texture< signed char, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3241 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3245 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 3256 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 3247 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned char texCubemapLayered(texture< unsigned char, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3248 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3252 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 3263 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 3254 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline char1 texCubemapLayered(texture< char1, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3255 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3259 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 3270 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 3261 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline uchar1 texCubemapLayered(texture< uchar1, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3262 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3266 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 3277 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 3268 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline char2 texCubemapLayered(texture< char2, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3269 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3273 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 3284 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 3275 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline uchar2 texCubemapLayered(texture< uchar2, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3276 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3280 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 3291 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 3282 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline char4 texCubemapLayered(texture< char4, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3283 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3287 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 3298 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 3289 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline uchar4 texCubemapLayered(texture< uchar4, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3290 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3294 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 3305 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 3302 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline short texCubemapLayered(texture< short, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3303 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3307 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 3318 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 3309 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned short texCubemapLayered(texture< unsigned short, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3310 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3314 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 3325 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 3316 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline short1 texCubemapLayered(texture< short1, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3317 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3321 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 3332 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 3323 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline ushort1 texCubemapLayered(texture< ushort1, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3324 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3328 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 3339 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 3330 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline short2 texCubemapLayered(texture< short2, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3331 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3335 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 3346 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 3337 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline ushort2 texCubemapLayered(texture< ushort2, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3338 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3342 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 3353 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 3344 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline short4 texCubemapLayered(texture< short4, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3345 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3349 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 3360 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 3351 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline ushort4 texCubemapLayered(texture< ushort4, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3352 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3356 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 3367 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 3364 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline int texCubemapLayered(texture< int, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3365 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3369 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 3380 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 3371 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned texCubemapLayered(texture< unsigned, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3372 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3376 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 3387 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 3378 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline int1 texCubemapLayered(texture< int1, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3379 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3383 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 3394 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 3385 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline uint1 texCubemapLayered(texture< uint1, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3386 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3390 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 3401 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 3392 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline int2 texCubemapLayered(texture< int2, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3393 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3397 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 3408 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 3399 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline uint2 texCubemapLayered(texture< uint2, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3400 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3404 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 3415 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 3406 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline int4 texCubemapLayered(texture< int4, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3407 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3411 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 3422 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 3413 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline uint4 texCubemapLayered(texture< uint4, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3414 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3418 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 3429 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 3428 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline long texCubemapLayered(texture< long, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3429 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3433 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 3444 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 3435 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned long texCubemapLayered(texture< unsigned long, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3436 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3440 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 3451 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 3442 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline long1 texCubemapLayered(texture< long1, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3443 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3447 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 3458 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 3449 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline ulong1 texCubemapLayered(texture< ulong1, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3450 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3454 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 3465 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 3456 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline long2 texCubemapLayered(texture< long2, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3457 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3461 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 3472 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 3463 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline ulong2 texCubemapLayered(texture< ulong2, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3464 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3468 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 3479 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 3470 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline long4 texCubemapLayered(texture< long4, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3471 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3475 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 3486 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 3477 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline ulong4 texCubemapLayered(texture< ulong4, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3478 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3482 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 3493 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 3492 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float texCubemapLayered(texture< float, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3493 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3497 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 3508 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 3499 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float1 texCubemapLayered(texture< float1, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3500 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3504 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 3515 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 3506 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float2 texCubemapLayered(texture< float2, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3507 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3511 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 3522 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 3513 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float4 texCubemapLayered(texture< float4, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3514 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3518 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 3529 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 3526 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float texCubemapLayered(texture< char, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer) 
#line 3527 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3536 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 3549 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 3538 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float texCubemapLayered(texture< signed char, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer) 
#line 3539 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3544 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 3557 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 3546 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float texCubemapLayered(texture< unsigned char, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer) 
#line 3547 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3552 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 3565 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 3554 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float1 texCubemapLayered(texture< char1, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer) 
#line 3555 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3560 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 3573 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 3562 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float1 texCubemapLayered(texture< uchar1, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer) 
#line 3563 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3568 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 3581 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 3570 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float2 texCubemapLayered(texture< char2, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer) 
#line 3571 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3576 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 3589 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 3578 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float2 texCubemapLayered(texture< uchar2, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer) 
#line 3579 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3584 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 3597 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 3586 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float4 texCubemapLayered(texture< char4, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer) 
#line 3587 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3592 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 3605 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 3594 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float4 texCubemapLayered(texture< uchar4, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer) 
#line 3595 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3600 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 3613 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 3608 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float texCubemapLayered(texture< short, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer) 
#line 3609 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3614 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 3627 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 3616 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float texCubemapLayered(texture< unsigned short, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer) 
#line 3617 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3622 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 3635 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 3624 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float1 texCubemapLayered(texture< short1, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer) 
#line 3625 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3630 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 3643 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 3632 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float1 texCubemapLayered(texture< ushort1, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer) 
#line 3633 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3638 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 3651 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 3640 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float2 texCubemapLayered(texture< short2, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer) 
#line 3641 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3646 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 3659 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 3648 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float2 texCubemapLayered(texture< ushort2, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer) 
#line 3649 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3654 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 3667 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 3656 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float4 texCubemapLayered(texture< short4, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer) 
#line 3657 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3662 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 3675 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 3664 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float4 texCubemapLayered(texture< ushort4, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer) 
#line 3665 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3670 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 3683 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 3703 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline char4 tex2Dgather(texture< char, 2, cudaReadModeElementType>  t, float x, float y, int comp) 
#line 3704 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3706 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}







#line 3715 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 3708 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline char4 tex2Dgather(texture< signed char, 2, cudaReadModeElementType>  t, float x, float y, int comp) 
#line 3709 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3711 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}







#line 3720 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 3713 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline uchar4 tex2Dgather(texture< unsigned char, 2, cudaReadModeElementType>  t, float x, float y, int comp) 
#line 3714 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3716 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}







#line 3725 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 3718 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline char4 tex2Dgather(texture< char1, 2, cudaReadModeElementType>  t, float x, float y, int comp) 
#line 3719 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3721 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}







#line 3730 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 3723 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline uchar4 tex2Dgather(texture< uchar1, 2, cudaReadModeElementType>  t, float x, float y, int comp) 
#line 3724 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3726 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}







#line 3735 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 3728 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline char4 tex2Dgather(texture< char2, 2, cudaReadModeElementType>  t, float x, float y, int comp) 
#line 3729 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3731 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}







#line 3740 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 3733 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline uchar4 tex2Dgather(texture< uchar2, 2, cudaReadModeElementType>  t, float x, float y, int comp) 
#line 3734 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3736 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}







#line 3745 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 3738 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline char4 tex2Dgather(texture< char3, 2, cudaReadModeElementType>  t, float x, float y, int comp) 
#line 3739 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3741 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}







#line 3750 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 3743 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline uchar4 tex2Dgather(texture< uchar3, 2, cudaReadModeElementType>  t, float x, float y, int comp) 
#line 3744 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3746 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}







#line 3755 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 3748 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline char4 tex2Dgather(texture< char4, 2, cudaReadModeElementType>  t, float x, float y, int comp) 
#line 3749 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3751 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}







#line 3760 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 3753 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline uchar4 tex2Dgather(texture< uchar4, 2, cudaReadModeElementType>  t, float x, float y, int comp) 
#line 3754 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3756 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}







#line 3765 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 3758 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline short4 tex2Dgather(texture< short, 2, cudaReadModeElementType>  t, float x, float y, int comp) 
#line 3759 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3761 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}







#line 3770 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 3763 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline ushort4 tex2Dgather(texture< unsigned short, 2, cudaReadModeElementType>  t, float x, float y, int comp) 
#line 3764 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3766 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}







#line 3775 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 3768 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline short4 tex2Dgather(texture< short1, 2, cudaReadModeElementType>  t, float x, float y, int comp) 
#line 3769 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3771 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}







#line 3780 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 3773 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline ushort4 tex2Dgather(texture< ushort1, 2, cudaReadModeElementType>  t, float x, float y, int comp) 
#line 3774 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3776 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}







#line 3785 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 3778 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline short4 tex2Dgather(texture< short2, 2, cudaReadModeElementType>  t, float x, float y, int comp) 
#line 3779 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3781 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}







#line 3790 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 3783 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline ushort4 tex2Dgather(texture< ushort2, 2, cudaReadModeElementType>  t, float x, float y, int comp) 
#line 3784 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3786 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}







#line 3795 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 3788 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline short4 tex2Dgather(texture< short3, 2, cudaReadModeElementType>  t, float x, float y, int comp) 
#line 3789 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3791 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}







#line 3800 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 3793 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline ushort4 tex2Dgather(texture< ushort3, 2, cudaReadModeElementType>  t, float x, float y, int comp) 
#line 3794 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3796 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}







#line 3805 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 3798 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline short4 tex2Dgather(texture< short4, 2, cudaReadModeElementType>  t, float x, float y, int comp) 
#line 3799 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3801 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}







#line 3810 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 3803 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline ushort4 tex2Dgather(texture< ushort4, 2, cudaReadModeElementType>  t, float x, float y, int comp) 
#line 3804 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3806 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}







#line 3815 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 3808 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline int4 tex2Dgather(texture< int, 2, cudaReadModeElementType>  t, float x, float y, int comp) 
#line 3809 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3811 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}







#line 3820 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 3813 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline uint4 tex2Dgather(texture< unsigned, 2, cudaReadModeElementType>  t, float x, float y, int comp) 
#line 3814 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3816 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}







#line 3825 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 3818 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline int4 tex2Dgather(texture< int1, 2, cudaReadModeElementType>  t, float x, float y, int comp) 
#line 3819 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3821 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}







#line 3830 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 3823 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline uint4 tex2Dgather(texture< uint1, 2, cudaReadModeElementType>  t, float x, float y, int comp) 
#line 3824 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3826 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}







#line 3835 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 3828 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline int4 tex2Dgather(texture< int2, 2, cudaReadModeElementType>  t, float x, float y, int comp) 
#line 3829 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3831 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}







#line 3840 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 3833 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline uint4 tex2Dgather(texture< uint2, 2, cudaReadModeElementType>  t, float x, float y, int comp) 
#line 3834 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3836 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}







#line 3845 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 3838 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline int4 tex2Dgather(texture< int3, 2, cudaReadModeElementType>  t, float x, float y, int comp) 
#line 3839 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3841 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}







#line 3850 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 3843 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline uint4 tex2Dgather(texture< uint3, 2, cudaReadModeElementType>  t, float x, float y, int comp) 
#line 3844 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3846 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}







#line 3855 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 3848 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline int4 tex2Dgather(texture< int4, 2, cudaReadModeElementType>  t, float x, float y, int comp) 
#line 3849 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3851 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}







#line 3860 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 3853 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline uint4 tex2Dgather(texture< uint4, 2, cudaReadModeElementType>  t, float x, float y, int comp) 
#line 3854 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3856 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}







#line 3865 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 3858 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex2Dgather(texture< float, 2, cudaReadModeElementType>  t, float x, float y, int comp) 
#line 3859 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3861 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}







#line 3870 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 3863 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex2Dgather(texture< float1, 2, cudaReadModeElementType>  t, float x, float y, int comp) 
#line 3864 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3866 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}







#line 3875 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 3868 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex2Dgather(texture< float2, 2, cudaReadModeElementType>  t, float x, float y, int comp) 
#line 3869 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3871 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}







#line 3880 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 3873 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex2Dgather(texture< float3, 2, cudaReadModeElementType>  t, float x, float y, int comp) 
#line 3874 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3876 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}







#line 3885 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 3878 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex2Dgather(texture< float4, 2, cudaReadModeElementType>  t, float x, float y, int comp) 
#line 3879 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3881 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}







#line 3890 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 3890 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex2Dgather(texture< char, 2, cudaReadModeNormalizedFloat>  t, float x, float y, int comp) 
#line 3891 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3893 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}







#line 3902 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 3895 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex2Dgather(texture< signed char, 2, cudaReadModeNormalizedFloat>  t, float x, float y, int comp) 
#line 3896 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3898 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}







#line 3907 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 3900 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex2Dgather(texture< unsigned char, 2, cudaReadModeNormalizedFloat>  t, float x, float y, int comp) 
#line 3901 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3903 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}







#line 3912 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 3905 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex2Dgather(texture< char1, 2, cudaReadModeNormalizedFloat>  t, float x, float y, int comp) 
#line 3906 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3908 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}







#line 3917 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 3910 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex2Dgather(texture< uchar1, 2, cudaReadModeNormalizedFloat>  t, float x, float y, int comp) 
#line 3911 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3913 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}







#line 3922 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 3915 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex2Dgather(texture< char2, 2, cudaReadModeNormalizedFloat>  t, float x, float y, int comp) 
#line 3916 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3918 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}







#line 3927 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 3920 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex2Dgather(texture< uchar2, 2, cudaReadModeNormalizedFloat>  t, float x, float y, int comp) 
#line 3921 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3923 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}







#line 3932 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 3925 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex2Dgather(texture< char3, 2, cudaReadModeNormalizedFloat>  t, float x, float y, int comp) 
#line 3926 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3928 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}







#line 3937 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 3930 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex2Dgather(texture< uchar3, 2, cudaReadModeNormalizedFloat>  t, float x, float y, int comp) 
#line 3931 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3933 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}







#line 3942 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 3935 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex2Dgather(texture< char4, 2, cudaReadModeNormalizedFloat>  t, float x, float y, int comp) 
#line 3936 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3938 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}







#line 3947 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 3940 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex2Dgather(texture< uchar4, 2, cudaReadModeNormalizedFloat>  t, float x, float y, int comp) 
#line 3941 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3943 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}







#line 3952 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 3945 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex2Dgather(texture< short, 2, cudaReadModeNormalizedFloat>  t, float x, float y, int comp) 
#line 3946 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3948 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}







#line 3957 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 3950 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex2Dgather(texture< unsigned short, 2, cudaReadModeNormalizedFloat>  t, float x, float y, int comp) 
#line 3951 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3953 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}







#line 3962 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 3955 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex2Dgather(texture< short1, 2, cudaReadModeNormalizedFloat>  t, float x, float y, int comp) 
#line 3956 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3958 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}







#line 3967 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 3960 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex2Dgather(texture< ushort1, 2, cudaReadModeNormalizedFloat>  t, float x, float y, int comp) 
#line 3961 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3963 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}







#line 3972 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 3965 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex2Dgather(texture< short2, 2, cudaReadModeNormalizedFloat>  t, float x, float y, int comp) 
#line 3966 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3968 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}







#line 3977 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 3970 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex2Dgather(texture< ushort2, 2, cudaReadModeNormalizedFloat>  t, float x, float y, int comp) 
#line 3971 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3973 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}







#line 3982 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 3975 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex2Dgather(texture< short3, 2, cudaReadModeNormalizedFloat>  t, float x, float y, int comp) 
#line 3976 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3978 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}







#line 3987 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 3980 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex2Dgather(texture< ushort3, 2, cudaReadModeNormalizedFloat>  t, float x, float y, int comp) 
#line 3981 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3983 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}







#line 3992 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 3985 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex2Dgather(texture< short4, 2, cudaReadModeNormalizedFloat>  t, float x, float y, int comp) 
#line 3986 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3988 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}







#line 3997 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 3990 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex2Dgather(texture< ushort4, 2, cudaReadModeNormalizedFloat>  t, float x, float y, int comp) 
#line 3991 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3993 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}







#line 4002 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 4007 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline char tex1DLod(texture< char, 1, cudaReadModeElementType>  t, float x, float level) 
#line 4008 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4016 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4027 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 4018 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline signed char tex1DLod(texture< signed char, 1, cudaReadModeElementType>  t, float x, float level) 
#line 4019 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4023 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4034 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 4025 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned char tex1DLod(texture< unsigned char, 1, cudaReadModeElementType>  t, float x, float level) 
#line 4026 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4030 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4041 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 4032 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline char1 tex1DLod(texture< char1, 1, cudaReadModeElementType>  t, float x, float level) 
#line 4033 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4037 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4048 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 4039 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline uchar1 tex1DLod(texture< uchar1, 1, cudaReadModeElementType>  t, float x, float level) 
#line 4040 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4044 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4055 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 4046 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline char2 tex1DLod(texture< char2, 1, cudaReadModeElementType>  t, float x, float level) 
#line 4047 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4051 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4062 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 4053 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline uchar2 tex1DLod(texture< uchar2, 1, cudaReadModeElementType>  t, float x, float level) 
#line 4054 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4058 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4069 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 4060 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline char4 tex1DLod(texture< char4, 1, cudaReadModeElementType>  t, float x, float level) 
#line 4061 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4065 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4076 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 4067 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline uchar4 tex1DLod(texture< uchar4, 1, cudaReadModeElementType>  t, float x, float level) 
#line 4068 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4072 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4083 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 4080 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline short tex1DLod(texture< short, 1, cudaReadModeElementType>  t, float x, float level) 
#line 4081 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4085 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4096 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 4087 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned short tex1DLod(texture< unsigned short, 1, cudaReadModeElementType>  t, float x, float level) 
#line 4088 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4092 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4103 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 4094 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline short1 tex1DLod(texture< short1, 1, cudaReadModeElementType>  t, float x, float level) 
#line 4095 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4099 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4110 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 4101 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline ushort1 tex1DLod(texture< ushort1, 1, cudaReadModeElementType>  t, float x, float level) 
#line 4102 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4106 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4117 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 4108 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline short2 tex1DLod(texture< short2, 1, cudaReadModeElementType>  t, float x, float level) 
#line 4109 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4113 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4124 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 4115 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline ushort2 tex1DLod(texture< ushort2, 1, cudaReadModeElementType>  t, float x, float level) 
#line 4116 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4120 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4131 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 4122 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline short4 tex1DLod(texture< short4, 1, cudaReadModeElementType>  t, float x, float level) 
#line 4123 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4127 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4138 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 4129 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline ushort4 tex1DLod(texture< ushort4, 1, cudaReadModeElementType>  t, float x, float level) 
#line 4130 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4134 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4145 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 4142 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline int tex1DLod(texture< int, 1, cudaReadModeElementType>  t, float x, float level) 
#line 4143 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4147 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4158 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 4149 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned tex1DLod(texture< unsigned, 1, cudaReadModeElementType>  t, float x, float level) 
#line 4150 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4154 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4165 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 4156 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline int1 tex1DLod(texture< int1, 1, cudaReadModeElementType>  t, float x, float level) 
#line 4157 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4161 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4172 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 4163 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline uint1 tex1DLod(texture< uint1, 1, cudaReadModeElementType>  t, float x, float level) 
#line 4164 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4168 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4179 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 4170 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline int2 tex1DLod(texture< int2, 1, cudaReadModeElementType>  t, float x, float level) 
#line 4171 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4175 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4186 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 4177 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline uint2 tex1DLod(texture< uint2, 1, cudaReadModeElementType>  t, float x, float level) 
#line 4178 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4182 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4193 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 4184 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline int4 tex1DLod(texture< int4, 1, cudaReadModeElementType>  t, float x, float level) 
#line 4185 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4189 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4200 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 4191 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline uint4 tex1DLod(texture< uint4, 1, cudaReadModeElementType>  t, float x, float level) 
#line 4192 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4196 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4207 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 4212 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline long tex1DLod(texture< long, 1, cudaReadModeElementType>  t, float x, float level) 
#line 4213 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4217 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4228 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 4219 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned long tex1DLod(texture< unsigned long, 1, cudaReadModeElementType>  t, float x, float level) 
#line 4220 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4224 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4235 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 4226 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline long1 tex1DLod(texture< long1, 1, cudaReadModeElementType>  t, float x, float level) 
#line 4227 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4231 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4242 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 4233 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline ulong1 tex1DLod(texture< ulong1, 1, cudaReadModeElementType>  t, float x, float level) 
#line 4234 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4238 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4249 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 4240 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline long2 tex1DLod(texture< long2, 1, cudaReadModeElementType>  t, float x, float level) 
#line 4241 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4245 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4256 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 4247 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline ulong2 tex1DLod(texture< ulong2, 1, cudaReadModeElementType>  t, float x, float level) 
#line 4248 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4252 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4263 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 4254 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline long4 tex1DLod(texture< long4, 1, cudaReadModeElementType>  t, float x, float level) 
#line 4255 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4259 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4270 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 4261 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline ulong4 tex1DLod(texture< ulong4, 1, cudaReadModeElementType>  t, float x, float level) 
#line 4262 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4266 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4277 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 4276 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float tex1DLod(texture< float, 1, cudaReadModeElementType>  t, float x, float level) 
#line 4277 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4281 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4292 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 4283 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex1DLod(texture< float1, 1, cudaReadModeElementType>  t, float x, float level) 
#line 4284 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4288 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4299 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 4290 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex1DLod(texture< float2, 1, cudaReadModeElementType>  t, float x, float level) 
#line 4291 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4295 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4306 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 4297 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex1DLod(texture< float4, 1, cudaReadModeElementType>  t, float x, float level) 
#line 4298 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4302 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4313 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 4310 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float tex1DLod(texture< char, 1, cudaReadModeNormalizedFloat>  t, float x, float level) 
#line 4311 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4320 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 4333 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 4322 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float tex1DLod(texture< signed char, 1, cudaReadModeNormalizedFloat>  t, float x, float level) 
#line 4323 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4328 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 4341 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 4330 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float tex1DLod(texture< unsigned char, 1, cudaReadModeNormalizedFloat>  t, float x, float level) 
#line 4331 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4336 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 4349 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 4338 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex1DLod(texture< char1, 1, cudaReadModeNormalizedFloat>  t, float x, float level) 
#line 4339 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4344 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 4357 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 4346 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex1DLod(texture< uchar1, 1, cudaReadModeNormalizedFloat>  t, float x, float level) 
#line 4347 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4352 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 4365 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 4354 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex1DLod(texture< char2, 1, cudaReadModeNormalizedFloat>  t, float x, float level) 
#line 4355 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4360 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 4373 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 4362 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex1DLod(texture< uchar2, 1, cudaReadModeNormalizedFloat>  t, float x, float level) 
#line 4363 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4368 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 4381 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 4370 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex1DLod(texture< char4, 1, cudaReadModeNormalizedFloat>  t, float x, float level) 
#line 4371 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4376 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 4389 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 4378 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex1DLod(texture< uchar4, 1, cudaReadModeNormalizedFloat>  t, float x, float level) 
#line 4379 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4384 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 4397 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 4392 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float tex1DLod(texture< short, 1, cudaReadModeNormalizedFloat>  t, float x, float level) 
#line 4393 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4398 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 4411 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 4400 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float tex1DLod(texture< unsigned short, 1, cudaReadModeNormalizedFloat>  t, float x, float level) 
#line 4401 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4406 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 4419 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 4408 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex1DLod(texture< short1, 1, cudaReadModeNormalizedFloat>  t, float x, float level) 
#line 4409 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4414 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 4427 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 4416 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex1DLod(texture< ushort1, 1, cudaReadModeNormalizedFloat>  t, float x, float level) 
#line 4417 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4422 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 4435 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 4424 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex1DLod(texture< short2, 1, cudaReadModeNormalizedFloat>  t, float x, float level) 
#line 4425 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4430 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 4443 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 4432 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex1DLod(texture< ushort2, 1, cudaReadModeNormalizedFloat>  t, float x, float level) 
#line 4433 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4438 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 4451 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 4440 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex1DLod(texture< short4, 1, cudaReadModeNormalizedFloat>  t, float x, float level) 
#line 4441 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4446 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 4459 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 4448 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex1DLod(texture< ushort4, 1, cudaReadModeNormalizedFloat>  t, float x, float level) 
#line 4449 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4454 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 4467 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 4462 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline char tex2DLod(texture< char, 2, cudaReadModeElementType>  t, float x, float y, float level) 
#line 4463 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4471 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4482 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 4473 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline signed char tex2DLod(texture< signed char, 2, cudaReadModeElementType>  t, float x, float y, float level) 
#line 4474 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4478 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4489 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 4480 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned char tex2DLod(texture< unsigned char, 2, cudaReadModeElementType>  t, float x, float y, float level) 
#line 4481 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4485 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4496 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 4487 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline char1 tex2DLod(texture< char1, 2, cudaReadModeElementType>  t, float x, float y, float level) 
#line 4488 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4492 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4503 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 4494 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline uchar1 tex2DLod(texture< uchar1, 2, cudaReadModeElementType>  t, float x, float y, float level) 
#line 4495 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4499 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4510 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 4501 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline char2 tex2DLod(texture< char2, 2, cudaReadModeElementType>  t, float x, float y, float level) 
#line 4502 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4506 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4517 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 4508 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline uchar2 tex2DLod(texture< uchar2, 2, cudaReadModeElementType>  t, float x, float y, float level) 
#line 4509 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4513 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4524 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 4515 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline char4 tex2DLod(texture< char4, 2, cudaReadModeElementType>  t, float x, float y, float level) 
#line 4516 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4520 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4531 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 4522 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline uchar4 tex2DLod(texture< uchar4, 2, cudaReadModeElementType>  t, float x, float y, float level) 
#line 4523 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4527 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4538 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 4535 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline short tex2DLod(texture< short, 2, cudaReadModeElementType>  t, float x, float y, float level) 
#line 4536 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4540 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4551 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 4542 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned short tex2DLod(texture< unsigned short, 2, cudaReadModeElementType>  t, float x, float y, float level) 
#line 4543 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4547 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4558 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 4549 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline short1 tex2DLod(texture< short1, 2, cudaReadModeElementType>  t, float x, float y, float level) 
#line 4550 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4554 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4565 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 4556 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline ushort1 tex2DLod(texture< ushort1, 2, cudaReadModeElementType>  t, float x, float y, float level) 
#line 4557 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4561 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4572 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 4563 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline short2 tex2DLod(texture< short2, 2, cudaReadModeElementType>  t, float x, float y, float level) 
#line 4564 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4568 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4579 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 4570 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline ushort2 tex2DLod(texture< ushort2, 2, cudaReadModeElementType>  t, float x, float y, float level) 
#line 4571 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4575 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4586 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 4577 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline short4 tex2DLod(texture< short4, 2, cudaReadModeElementType>  t, float x, float y, float level) 
#line 4578 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4582 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4593 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 4584 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline ushort4 tex2DLod(texture< ushort4, 2, cudaReadModeElementType>  t, float x, float y, float level) 
#line 4585 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4589 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4600 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 4597 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline int tex2DLod(texture< int, 2, cudaReadModeElementType>  t, float x, float y, float level) 
#line 4598 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4602 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4613 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 4604 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned tex2DLod(texture< unsigned, 2, cudaReadModeElementType>  t, float x, float y, float level) 
#line 4605 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4609 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4620 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 4611 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline int1 tex2DLod(texture< int1, 2, cudaReadModeElementType>  t, float x, float y, float level) 
#line 4612 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4616 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4627 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 4618 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline uint1 tex2DLod(texture< uint1, 2, cudaReadModeElementType>  t, float x, float y, float level) 
#line 4619 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4623 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4634 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 4625 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline int2 tex2DLod(texture< int2, 2, cudaReadModeElementType>  t, float x, float y, float level) 
#line 4626 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4630 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4641 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 4632 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline uint2 tex2DLod(texture< uint2, 2, cudaReadModeElementType>  t, float x, float y, float level) 
#line 4633 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4637 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4648 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 4639 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline int4 tex2DLod(texture< int4, 2, cudaReadModeElementType>  t, float x, float y, float level) 
#line 4640 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4644 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4655 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 4646 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline uint4 tex2DLod(texture< uint4, 2, cudaReadModeElementType>  t, float x, float y, float level) 
#line 4647 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4651 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4662 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 4661 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline long tex2DLod(texture< long, 2, cudaReadModeElementType>  t, float x, float y, float level) 
#line 4662 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4666 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4677 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 4668 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned long tex2DLod(texture< unsigned long, 2, cudaReadModeElementType>  t, float x, float y, float level) 
#line 4669 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4673 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4684 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 4675 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline long1 tex2DLod(texture< long1, 2, cudaReadModeElementType>  t, float x, float y, float level) 
#line 4676 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4680 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4691 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 4682 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline ulong1 tex2DLod(texture< ulong1, 2, cudaReadModeElementType>  t, float x, float y, float level) 
#line 4683 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4687 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4698 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 4689 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline long2 tex2DLod(texture< long2, 2, cudaReadModeElementType>  t, float x, float y, float level) 
#line 4690 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4694 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4705 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 4696 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline ulong2 tex2DLod(texture< ulong2, 2, cudaReadModeElementType>  t, float x, float y, float level) 
#line 4697 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4701 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4712 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 4703 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline long4 tex2DLod(texture< long4, 2, cudaReadModeElementType>  t, float x, float y, float level) 
#line 4704 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4708 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4719 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 4710 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline ulong4 tex2DLod(texture< ulong4, 2, cudaReadModeElementType>  t, float x, float y, float level) 
#line 4711 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4715 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4726 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 4725 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float tex2DLod(texture< float, 2, cudaReadModeElementType>  t, float x, float y, float level) 
#line 4726 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4730 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4741 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 4732 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex2DLod(texture< float1, 2, cudaReadModeElementType>  t, float x, float y, float level) 
#line 4733 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4737 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4748 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 4739 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex2DLod(texture< float2, 2, cudaReadModeElementType>  t, float x, float y, float level) 
#line 4740 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4744 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4755 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 4746 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex2DLod(texture< float4, 2, cudaReadModeElementType>  t, float x, float y, float level) 
#line 4747 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4751 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4762 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 4759 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float tex2DLod(texture< char, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float level) 
#line 4760 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4769 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 4782 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 4771 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float tex2DLod(texture< signed char, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float level) 
#line 4772 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4777 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 4790 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 4779 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float tex2DLod(texture< unsigned char, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float level) 
#line 4780 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4785 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 4798 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 4787 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex2DLod(texture< char1, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float level) 
#line 4788 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4793 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 4806 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 4795 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex2DLod(texture< uchar1, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float level) 
#line 4796 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4801 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 4814 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 4803 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex2DLod(texture< char2, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float level) 
#line 4804 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4809 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 4822 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 4811 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex2DLod(texture< uchar2, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float level) 
#line 4812 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4817 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 4830 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 4819 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex2DLod(texture< char4, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float level) 
#line 4820 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4825 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 4838 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 4827 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex2DLod(texture< uchar4, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float level) 
#line 4828 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4833 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 4846 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 4841 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float tex2DLod(texture< short, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float level) 
#line 4842 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4847 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 4860 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 4849 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float tex2DLod(texture< unsigned short, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float level) 
#line 4850 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4855 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 4868 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 4857 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex2DLod(texture< short1, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float level) 
#line 4858 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4863 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 4876 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 4865 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex2DLod(texture< ushort1, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float level) 
#line 4866 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4871 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 4884 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 4873 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex2DLod(texture< short2, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float level) 
#line 4874 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4879 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 4892 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 4881 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex2DLod(texture< ushort2, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float level) 
#line 4882 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4887 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 4900 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 4889 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex2DLod(texture< short4, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float level) 
#line 4890 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4895 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 4908 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 4897 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex2DLod(texture< ushort4, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float level) 
#line 4898 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4903 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 4916 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 4911 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline char tex1DLayeredLod(texture< char, 241, cudaReadModeElementType>  t, float x, int layer, float level) 
#line 4912 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 4920 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4931 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 4922 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline signed char tex1DLayeredLod(texture< signed char, 241, cudaReadModeElementType>  t, float x, int layer, float level) 
#line 4923 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 4927 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4938 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 4929 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned char tex1DLayeredLod(texture< unsigned char, 241, cudaReadModeElementType>  t, float x, int layer, float level) 
#line 4930 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 4934 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4945 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 4936 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline char1 tex1DLayeredLod(texture< char1, 241, cudaReadModeElementType>  t, float x, int layer, float level) 
#line 4937 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 4941 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4952 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 4943 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline uchar1 tex1DLayeredLod(texture< uchar1, 241, cudaReadModeElementType>  t, float x, int layer, float level) 
#line 4944 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 4948 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4959 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 4950 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline char2 tex1DLayeredLod(texture< char2, 241, cudaReadModeElementType>  t, float x, int layer, float level) 
#line 4951 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 4955 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4966 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 4957 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline uchar2 tex1DLayeredLod(texture< uchar2, 241, cudaReadModeElementType>  t, float x, int layer, float level) 
#line 4958 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 4962 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4973 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 4964 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline char4 tex1DLayeredLod(texture< char4, 241, cudaReadModeElementType>  t, float x, int layer, float level) 
#line 4965 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 4969 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4980 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 4971 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline uchar4 tex1DLayeredLod(texture< uchar4, 241, cudaReadModeElementType>  t, float x, int layer, float level) 
#line 4972 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 4976 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4987 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 4984 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline short tex1DLayeredLod(texture< short, 241, cudaReadModeElementType>  t, float x, int layer, float level) 
#line 4985 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 4989 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5000 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 4991 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned short tex1DLayeredLod(texture< unsigned short, 241, cudaReadModeElementType>  t, float x, int layer, float level) 
#line 4992 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 4996 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5007 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 4998 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline short1 tex1DLayeredLod(texture< short1, 241, cudaReadModeElementType>  t, float x, int layer, float level) 
#line 4999 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5003 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5014 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 5005 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline ushort1 tex1DLayeredLod(texture< ushort1, 241, cudaReadModeElementType>  t, float x, int layer, float level) 
#line 5006 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5010 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5021 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 5012 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline short2 tex1DLayeredLod(texture< short2, 241, cudaReadModeElementType>  t, float x, int layer, float level) 
#line 5013 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5017 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5028 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 5019 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline ushort2 tex1DLayeredLod(texture< ushort2, 241, cudaReadModeElementType>  t, float x, int layer, float level) 
#line 5020 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5024 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5035 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 5026 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline short4 tex1DLayeredLod(texture< short4, 241, cudaReadModeElementType>  t, float x, int layer, float level) 
#line 5027 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5031 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5042 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 5033 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline ushort4 tex1DLayeredLod(texture< ushort4, 241, cudaReadModeElementType>  t, float x, int layer, float level) 
#line 5034 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5038 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5049 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 5046 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline int tex1DLayeredLod(texture< int, 241, cudaReadModeElementType>  t, float x, int layer, float level) 
#line 5047 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5051 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5062 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 5053 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned tex1DLayeredLod(texture< unsigned, 241, cudaReadModeElementType>  t, float x, int layer, float level) 
#line 5054 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5058 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5069 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 5060 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline int1 tex1DLayeredLod(texture< int1, 241, cudaReadModeElementType>  t, float x, int layer, float level) 
#line 5061 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5065 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5076 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 5067 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline uint1 tex1DLayeredLod(texture< uint1, 241, cudaReadModeElementType>  t, float x, int layer, float level) 
#line 5068 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5072 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5083 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 5074 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline int2 tex1DLayeredLod(texture< int2, 241, cudaReadModeElementType>  t, float x, int layer, float level) 
#line 5075 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5079 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5090 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 5081 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline uint2 tex1DLayeredLod(texture< uint2, 241, cudaReadModeElementType>  t, float x, int layer, float level) 
#line 5082 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5086 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5097 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 5088 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline int4 tex1DLayeredLod(texture< int4, 241, cudaReadModeElementType>  t, float x, int layer, float level) 
#line 5089 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5093 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5104 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 5095 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline uint4 tex1DLayeredLod(texture< uint4, 241, cudaReadModeElementType>  t, float x, int layer, float level) 
#line 5096 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5100 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5111 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 5110 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline long tex1DLayeredLod(texture< long, 241, cudaReadModeElementType>  t, float x, int layer, float level) 
#line 5111 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5115 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5126 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 5117 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned long tex1DLayeredLod(texture< unsigned long, 241, cudaReadModeElementType>  t, float x, int layer, float level) 
#line 5118 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5122 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5133 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 5124 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline long1 tex1DLayeredLod(texture< long1, 241, cudaReadModeElementType>  t, float x, int layer, float level) 
#line 5125 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5129 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5140 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 5131 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline ulong1 tex1DLayeredLod(texture< ulong1, 241, cudaReadModeElementType>  t, float x, int layer, float level) 
#line 5132 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5136 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5147 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 5138 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline long2 tex1DLayeredLod(texture< long2, 241, cudaReadModeElementType>  t, float x, int layer, float level) 
#line 5139 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5143 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5154 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 5145 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline ulong2 tex1DLayeredLod(texture< ulong2, 241, cudaReadModeElementType>  t, float x, int layer, float level) 
#line 5146 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5150 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5161 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 5152 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline long4 tex1DLayeredLod(texture< long4, 241, cudaReadModeElementType>  t, float x, int layer, float level) 
#line 5153 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5157 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5168 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 5159 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline ulong4 tex1DLayeredLod(texture< ulong4, 241, cudaReadModeElementType>  t, float x, int layer, float level) 
#line 5160 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5164 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5175 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 5174 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float tex1DLayeredLod(texture< float, 241, cudaReadModeElementType>  t, float x, int layer, float level) 
#line 5175 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5179 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5190 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 5181 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex1DLayeredLod(texture< float1, 241, cudaReadModeElementType>  t, float x, int layer, float level) 
#line 5182 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5186 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5197 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 5188 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex1DLayeredLod(texture< float2, 241, cudaReadModeElementType>  t, float x, int layer, float level) 
#line 5189 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5193 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5204 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 5195 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex1DLayeredLod(texture< float4, 241, cudaReadModeElementType>  t, float x, int layer, float level) 
#line 5196 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5200 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5211 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 5208 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float tex1DLayeredLod(texture< char, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float level) 
#line 5209 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5218 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 5231 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 5220 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float tex1DLayeredLod(texture< signed char, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float level) 
#line 5221 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5226 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 5239 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 5228 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float tex1DLayeredLod(texture< unsigned char, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float level) 
#line 5229 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5234 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 5247 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 5236 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex1DLayeredLod(texture< char1, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float level) 
#line 5237 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5242 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 5255 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 5244 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex1DLayeredLod(texture< uchar1, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float level) 
#line 5245 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5250 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 5263 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 5252 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex1DLayeredLod(texture< char2, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float level) 
#line 5253 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5258 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 5271 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 5260 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex1DLayeredLod(texture< uchar2, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float level) 
#line 5261 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5266 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 5279 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 5268 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex1DLayeredLod(texture< char4, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float level) 
#line 5269 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5274 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 5287 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 5276 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex1DLayeredLod(texture< uchar4, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float level) 
#line 5277 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5282 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 5295 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 5290 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float tex1DLayeredLod(texture< short, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float level) 
#line 5291 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5296 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 5309 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 5298 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float tex1DLayeredLod(texture< unsigned short, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float level) 
#line 5299 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5304 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 5317 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 5306 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex1DLayeredLod(texture< short1, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float level) 
#line 5307 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5312 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 5325 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 5314 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex1DLayeredLod(texture< ushort1, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float level) 
#line 5315 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5320 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 5333 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 5322 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex1DLayeredLod(texture< short2, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float level) 
#line 5323 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5328 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 5341 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 5330 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex1DLayeredLod(texture< ushort2, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float level) 
#line 5331 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5336 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 5349 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 5338 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex1DLayeredLod(texture< short4, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float level) 
#line 5339 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5344 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 5357 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 5346 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex1DLayeredLod(texture< ushort4, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float level) 
#line 5347 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5352 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 5365 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 5360 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline char tex2DLayeredLod(texture< char, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level) 
#line 5361 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5369 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5380 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 5371 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline signed char tex2DLayeredLod(texture< signed char, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level) 
#line 5372 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5376 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5387 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 5378 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned char tex2DLayeredLod(texture< unsigned char, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level) 
#line 5379 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5383 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5394 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 5385 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline char1 tex2DLayeredLod(texture< char1, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level) 
#line 5386 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5390 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5401 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 5392 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline uchar1 tex2DLayeredLod(texture< uchar1, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level) 
#line 5393 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5397 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5408 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 5399 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline char2 tex2DLayeredLod(texture< char2, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level) 
#line 5400 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5404 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5415 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 5406 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline uchar2 tex2DLayeredLod(texture< uchar2, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level) 
#line 5407 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5411 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5422 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 5413 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline char4 tex2DLayeredLod(texture< char4, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level) 
#line 5414 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5418 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5429 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 5420 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline uchar4 tex2DLayeredLod(texture< uchar4, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level) 
#line 5421 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5425 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5436 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 5433 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline short tex2DLayeredLod(texture< short, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level) 
#line 5434 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5438 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5449 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 5440 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned short tex2DLayeredLod(texture< unsigned short, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level) 
#line 5441 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5445 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5456 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 5447 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline short1 tex2DLayeredLod(texture< short1, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level) 
#line 5448 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5452 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5463 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 5454 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline ushort1 tex2DLayeredLod(texture< ushort1, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level) 
#line 5455 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5459 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5470 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 5461 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline short2 tex2DLayeredLod(texture< short2, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level) 
#line 5462 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5466 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5477 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 5468 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline ushort2 tex2DLayeredLod(texture< ushort2, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level) 
#line 5469 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5473 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5484 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 5475 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline short4 tex2DLayeredLod(texture< short4, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level) 
#line 5476 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5480 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5491 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 5482 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline ushort4 tex2DLayeredLod(texture< ushort4, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level) 
#line 5483 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5487 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5498 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 5495 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline int tex2DLayeredLod(texture< int, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level) 
#line 5496 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5500 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5511 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 5502 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned tex2DLayeredLod(texture< unsigned, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level) 
#line 5503 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5507 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5518 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 5509 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline int1 tex2DLayeredLod(texture< int1, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level) 
#line 5510 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5514 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5525 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 5516 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline uint1 tex2DLayeredLod(texture< uint1, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level) 
#line 5517 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5521 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5532 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 5523 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline int2 tex2DLayeredLod(texture< int2, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level) 
#line 5524 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5528 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5539 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 5530 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline uint2 tex2DLayeredLod(texture< uint2, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level) 
#line 5531 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5535 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5546 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 5537 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline int4 tex2DLayeredLod(texture< int4, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level) 
#line 5538 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5542 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5553 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 5544 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline uint4 tex2DLayeredLod(texture< uint4, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level) 
#line 5545 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5549 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5560 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 5559 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline long tex2DLayeredLod(texture< long, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level) 
#line 5560 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5564 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5575 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 5566 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned long tex2DLayeredLod(texture< unsigned long, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level) 
#line 5567 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5571 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5582 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 5573 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline long1 tex2DLayeredLod(texture< long1, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level) 
#line 5574 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5578 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5589 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 5580 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline ulong1 tex2DLayeredLod(texture< ulong1, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level) 
#line 5581 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5585 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5596 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 5587 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline long2 tex2DLayeredLod(texture< long2, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level) 
#line 5588 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5592 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5603 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 5594 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline ulong2 tex2DLayeredLod(texture< ulong2, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level) 
#line 5595 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5599 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5610 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 5601 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline long4 tex2DLayeredLod(texture< long4, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level) 
#line 5602 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5606 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5617 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 5608 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline ulong4 tex2DLayeredLod(texture< ulong4, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level) 
#line 5609 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5613 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5624 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 5623 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float tex2DLayeredLod(texture< float, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level) 
#line 5624 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5628 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5639 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 5630 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex2DLayeredLod(texture< float1, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level) 
#line 5631 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5635 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5646 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 5637 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex2DLayeredLod(texture< float2, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level) 
#line 5638 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5642 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5653 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 5644 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex2DLayeredLod(texture< float4, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level) 
#line 5645 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5649 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5660 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 5657 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float tex2DLayeredLod(texture< char, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float level) 
#line 5658 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5667 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 5680 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 5669 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float tex2DLayeredLod(texture< signed char, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float level) 
#line 5670 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5675 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 5688 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 5677 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float tex2DLayeredLod(texture< unsigned char, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float level) 
#line 5678 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5683 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 5696 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 5685 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex2DLayeredLod(texture< char1, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float level) 
#line 5686 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5691 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 5704 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 5693 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex2DLayeredLod(texture< uchar1, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float level) 
#line 5694 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5699 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 5712 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 5701 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex2DLayeredLod(texture< char2, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float level) 
#line 5702 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5707 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 5720 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 5709 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex2DLayeredLod(texture< uchar2, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float level) 
#line 5710 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5715 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 5728 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 5717 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex2DLayeredLod(texture< char4, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float level) 
#line 5718 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5723 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 5736 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 5725 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex2DLayeredLod(texture< uchar4, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float level) 
#line 5726 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5731 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 5744 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 5739 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float tex2DLayeredLod(texture< short, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float level) 
#line 5740 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5745 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 5758 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 5747 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float tex2DLayeredLod(texture< unsigned short, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float level) 
#line 5748 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5753 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 5766 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 5755 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex2DLayeredLod(texture< short1, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float level) 
#line 5756 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5761 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 5774 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 5763 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex2DLayeredLod(texture< ushort1, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float level) 
#line 5764 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5769 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 5782 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 5771 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex2DLayeredLod(texture< short2, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float level) 
#line 5772 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5777 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 5790 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 5779 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex2DLayeredLod(texture< ushort2, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float level) 
#line 5780 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5785 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 5798 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 5787 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex2DLayeredLod(texture< short4, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float level) 
#line 5788 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5793 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 5806 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 5795 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex2DLayeredLod(texture< ushort4, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float level) 
#line 5796 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5801 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 5814 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 5809 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline char tex3DLod(texture< char, 3, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 5810 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 5818 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5829 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 5820 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline signed char tex3DLod(texture< signed char, 3, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 5821 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 5825 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5836 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 5827 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned char tex3DLod(texture< unsigned char, 3, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 5828 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 5832 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5843 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 5834 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline char1 tex3DLod(texture< char1, 3, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 5835 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 5839 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5850 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 5841 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline uchar1 tex3DLod(texture< uchar1, 3, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 5842 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 5846 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5857 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 5848 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline char2 tex3DLod(texture< char2, 3, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 5849 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 5853 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5864 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 5855 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline uchar2 tex3DLod(texture< uchar2, 3, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 5856 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 5860 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5871 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 5862 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline char4 tex3DLod(texture< char4, 3, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 5863 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 5867 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5878 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 5869 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline uchar4 tex3DLod(texture< uchar4, 3, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 5870 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 5874 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5885 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 5882 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline short tex3DLod(texture< short, 3, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 5883 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 5887 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5898 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 5889 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned short tex3DLod(texture< unsigned short, 3, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 5890 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 5894 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5905 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 5896 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline short1 tex3DLod(texture< short1, 3, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 5897 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 5901 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5912 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 5903 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline ushort1 tex3DLod(texture< ushort1, 3, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 5904 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 5908 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5919 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 5910 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline short2 tex3DLod(texture< short2, 3, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 5911 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 5915 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5926 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 5917 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline ushort2 tex3DLod(texture< ushort2, 3, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 5918 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 5922 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5933 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 5924 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline short4 tex3DLod(texture< short4, 3, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 5925 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 5929 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5940 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 5931 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline ushort4 tex3DLod(texture< ushort4, 3, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 5932 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 5936 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5947 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 5944 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline int tex3DLod(texture< int, 3, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 5945 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 5949 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5960 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 5951 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned tex3DLod(texture< unsigned, 3, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 5952 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 5956 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5967 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 5958 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline int1 tex3DLod(texture< int1, 3, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 5959 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 5963 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5974 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 5965 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline uint1 tex3DLod(texture< uint1, 3, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 5966 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 5970 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5981 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 5972 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline int2 tex3DLod(texture< int2, 3, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 5973 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 5977 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5988 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 5979 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline uint2 tex3DLod(texture< uint2, 3, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 5980 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 5984 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5995 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 5986 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline int4 tex3DLod(texture< int4, 3, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 5987 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 5991 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6002 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 5993 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline uint4 tex3DLod(texture< uint4, 3, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 5994 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 5998 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6009 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 6008 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline long tex3DLod(texture< long, 3, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6009 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6013 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6024 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 6015 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned long tex3DLod(texture< unsigned long, 3, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6016 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6020 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6031 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 6022 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline long1 tex3DLod(texture< long1, 3, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6023 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6027 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6038 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 6029 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline ulong1 tex3DLod(texture< ulong1, 3, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6030 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6034 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6045 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 6036 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline long2 tex3DLod(texture< long2, 3, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6037 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6041 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6052 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 6043 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline ulong2 tex3DLod(texture< ulong2, 3, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6044 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6048 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6059 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 6050 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline long4 tex3DLod(texture< long4, 3, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6051 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6055 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6066 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 6057 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline ulong4 tex3DLod(texture< ulong4, 3, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6058 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6062 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6073 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 6072 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float tex3DLod(texture< float, 3, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6073 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6077 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6088 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 6079 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex3DLod(texture< float1, 3, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6080 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6084 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6095 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 6086 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex3DLod(texture< float2, 3, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6087 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6091 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6102 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 6093 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex3DLod(texture< float4, 3, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6094 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6098 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6109 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 6106 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float tex3DLod(texture< char, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level) 
#line 6107 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6116 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 6129 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 6118 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float tex3DLod(texture< signed char, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level) 
#line 6119 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6124 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 6137 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 6126 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float tex3DLod(texture< unsigned char, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level) 
#line 6127 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6132 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 6145 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 6134 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex3DLod(texture< char1, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level) 
#line 6135 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6140 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 6153 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 6142 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex3DLod(texture< uchar1, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level) 
#line 6143 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6148 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 6161 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 6150 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex3DLod(texture< char2, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level) 
#line 6151 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6156 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 6169 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 6158 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex3DLod(texture< uchar2, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level) 
#line 6159 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6164 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 6177 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 6166 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex3DLod(texture< char4, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level) 
#line 6167 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6172 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 6185 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 6174 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex3DLod(texture< uchar4, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level) 
#line 6175 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6180 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 6193 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 6188 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float tex3DLod(texture< short, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level) 
#line 6189 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6194 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 6207 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 6196 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float tex3DLod(texture< unsigned short, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level) 
#line 6197 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6202 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 6215 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 6204 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex3DLod(texture< short1, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level) 
#line 6205 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6210 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 6223 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 6212 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex3DLod(texture< ushort1, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level) 
#line 6213 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6218 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 6231 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 6220 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex3DLod(texture< short2, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level) 
#line 6221 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6226 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 6239 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 6228 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex3DLod(texture< ushort2, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level) 
#line 6229 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6234 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 6247 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 6236 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex3DLod(texture< short4, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level) 
#line 6237 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6242 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 6255 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 6244 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex3DLod(texture< ushort4, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level) 
#line 6245 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6250 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 6263 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 6258 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline char texCubemapLod(texture< char, 12, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6259 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6267 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6278 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 6269 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline signed char texCubemapLod(texture< signed char, 12, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6270 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6274 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6285 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 6276 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned char texCubemapLod(texture< unsigned char, 12, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6277 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6281 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6292 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 6283 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline char1 texCubemapLod(texture< char1, 12, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6284 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6288 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6299 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 6290 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline uchar1 texCubemapLod(texture< uchar1, 12, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6291 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6295 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6306 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 6297 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline char2 texCubemapLod(texture< char2, 12, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6298 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6302 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6313 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 6304 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline uchar2 texCubemapLod(texture< uchar2, 12, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6305 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6309 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6320 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 6311 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline char4 texCubemapLod(texture< char4, 12, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6312 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6316 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6327 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 6318 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline uchar4 texCubemapLod(texture< uchar4, 12, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6319 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6323 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6334 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 6331 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline short texCubemapLod(texture< short, 12, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6332 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6336 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6347 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 6338 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned short texCubemapLod(texture< unsigned short, 12, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6339 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6343 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6354 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 6345 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline short1 texCubemapLod(texture< short1, 12, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6346 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6350 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6361 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 6352 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline ushort1 texCubemapLod(texture< ushort1, 12, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6353 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6357 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6368 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 6359 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline short2 texCubemapLod(texture< short2, 12, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6360 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6364 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6375 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 6366 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline ushort2 texCubemapLod(texture< ushort2, 12, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6367 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6371 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6382 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 6373 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline short4 texCubemapLod(texture< short4, 12, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6374 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6378 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6389 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 6380 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline ushort4 texCubemapLod(texture< ushort4, 12, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6381 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6385 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6396 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 6393 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline int texCubemapLod(texture< int, 12, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6394 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6398 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6409 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 6400 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned texCubemapLod(texture< unsigned, 12, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6401 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6405 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6416 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 6407 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline int1 texCubemapLod(texture< int1, 12, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6408 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6412 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6423 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 6414 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline uint1 texCubemapLod(texture< uint1, 12, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6415 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6419 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6430 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 6421 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline int2 texCubemapLod(texture< int2, 12, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6422 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6426 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6437 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 6428 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline uint2 texCubemapLod(texture< uint2, 12, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6429 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6433 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6444 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 6435 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline int4 texCubemapLod(texture< int4, 12, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6436 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6440 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6451 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 6442 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline uint4 texCubemapLod(texture< uint4, 12, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6443 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6447 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6458 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 6457 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline long texCubemapLod(texture< long, 12, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6458 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6462 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6473 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 6464 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned long texCubemapLod(texture< unsigned long, 12, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6465 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6469 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6480 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 6471 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline long1 texCubemapLod(texture< long1, 12, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6472 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6476 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6487 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 6478 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline ulong1 texCubemapLod(texture< ulong1, 12, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6479 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6483 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6494 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 6485 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline long2 texCubemapLod(texture< long2, 12, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6486 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6490 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6501 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 6492 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline ulong2 texCubemapLod(texture< ulong2, 12, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6493 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6497 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6508 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 6499 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline long4 texCubemapLod(texture< long4, 12, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6500 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6504 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6515 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 6506 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline ulong4 texCubemapLod(texture< ulong4, 12, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6507 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6511 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6522 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 6521 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float texCubemapLod(texture< float, 12, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6522 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6526 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6537 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 6528 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float1 texCubemapLod(texture< float1, 12, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6529 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6533 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6544 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 6535 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float2 texCubemapLod(texture< float2, 12, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6536 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6540 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6551 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 6542 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float4 texCubemapLod(texture< float4, 12, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6543 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6547 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6558 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 6555 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float texCubemapLod(texture< char, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level) 
#line 6556 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6565 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 6578 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 6567 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float texCubemapLod(texture< signed char, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level) 
#line 6568 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6573 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 6586 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 6575 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float texCubemapLod(texture< unsigned char, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level) 
#line 6576 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6581 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 6594 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 6583 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float1 texCubemapLod(texture< char1, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level) 
#line 6584 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6589 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 6602 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 6591 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float1 texCubemapLod(texture< uchar1, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level) 
#line 6592 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6597 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 6610 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 6599 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float2 texCubemapLod(texture< char2, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level) 
#line 6600 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6605 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 6618 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 6607 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float2 texCubemapLod(texture< uchar2, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level) 
#line 6608 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6613 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 6626 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 6615 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float4 texCubemapLod(texture< char4, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level) 
#line 6616 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6621 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 6634 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 6623 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float4 texCubemapLod(texture< uchar4, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level) 
#line 6624 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6629 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 6642 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 6637 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float texCubemapLod(texture< short, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level) 
#line 6638 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6643 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 6656 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 6645 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float texCubemapLod(texture< unsigned short, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level) 
#line 6646 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6651 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 6664 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 6653 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float1 texCubemapLod(texture< short1, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level) 
#line 6654 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6659 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 6672 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 6661 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float1 texCubemapLod(texture< ushort1, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level) 
#line 6662 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6667 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 6680 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 6669 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float2 texCubemapLod(texture< short2, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level) 
#line 6670 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6675 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 6688 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 6677 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float2 texCubemapLod(texture< ushort2, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level) 
#line 6678 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6683 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 6696 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 6685 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float4 texCubemapLod(texture< short4, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level) 
#line 6686 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6691 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 6704 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 6693 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float4 texCubemapLod(texture< ushort4, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level) 
#line 6694 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6699 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 6712 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 6707 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline char texCubemapLayeredLod(texture< char, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level) 
#line 6708 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 6716 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6727 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 6718 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline signed char texCubemapLayeredLod(texture< signed char, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level) 
#line 6719 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 6723 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6734 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 6725 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned char texCubemapLayeredLod(texture< unsigned char, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level) 
#line 6726 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 6730 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6741 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 6732 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline char1 texCubemapLayeredLod(texture< char1, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level) 
#line 6733 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 6737 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6748 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 6739 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline uchar1 texCubemapLayeredLod(texture< uchar1, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level) 
#line 6740 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 6744 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6755 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 6746 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline char2 texCubemapLayeredLod(texture< char2, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level) 
#line 6747 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 6751 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6762 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 6753 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline uchar2 texCubemapLayeredLod(texture< uchar2, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level) 
#line 6754 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 6758 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6769 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 6760 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline char4 texCubemapLayeredLod(texture< char4, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level) 
#line 6761 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 6765 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6776 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 6767 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline uchar4 texCubemapLayeredLod(texture< uchar4, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level) 
#line 6768 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 6772 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6783 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 6780 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline short texCubemapLayeredLod(texture< short, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level) 
#line 6781 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 6785 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6796 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 6787 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned short texCubemapLayeredLod(texture< unsigned short, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level) 
#line 6788 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 6792 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6803 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 6794 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline short1 texCubemapLayeredLod(texture< short1, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level) 
#line 6795 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 6799 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6810 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 6801 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline ushort1 texCubemapLayeredLod(texture< ushort1, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level) 
#line 6802 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 6806 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6817 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 6808 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline short2 texCubemapLayeredLod(texture< short2, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level) 
#line 6809 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 6813 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6824 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 6815 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline ushort2 texCubemapLayeredLod(texture< ushort2, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level) 
#line 6816 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 6820 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6831 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 6822 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline short4 texCubemapLayeredLod(texture< short4, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level) 
#line 6823 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 6827 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6838 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 6829 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline ushort4 texCubemapLayeredLod(texture< ushort4, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level) 
#line 6830 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 6834 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6845 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 6842 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline int texCubemapLayeredLod(texture< int, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level) 
#line 6843 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 6847 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6858 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 6849 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned texCubemapLayeredLod(texture< unsigned, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level) 
#line 6850 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 6854 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6865 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 6856 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline int1 texCubemapLayeredLod(texture< int1, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level) 
#line 6857 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 6861 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6872 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 6863 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline uint1 texCubemapLayeredLod(texture< uint1, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level) 
#line 6864 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 6868 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6879 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 6870 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline int2 texCubemapLayeredLod(texture< int2, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level) 
#line 6871 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 6875 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6886 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 6877 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline uint2 texCubemapLayeredLod(texture< uint2, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level) 
#line 6878 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 6882 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6893 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 6884 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline int4 texCubemapLayeredLod(texture< int4, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level) 
#line 6885 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 6889 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6900 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 6891 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline uint4 texCubemapLayeredLod(texture< uint4, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level) 
#line 6892 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 6896 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6907 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 6906 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline long texCubemapLayeredLod(texture< long, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level) 
#line 6907 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 6911 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6922 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 6913 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned long texCubemapLayeredLod(texture< unsigned long, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level) 
#line 6914 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 6918 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6929 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 6920 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline long1 texCubemapLayeredLod(texture< long1, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level) 
#line 6921 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 6925 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6936 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 6927 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline ulong1 texCubemapLayeredLod(texture< ulong1, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level) 
#line 6928 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 6932 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6943 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 6934 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline long2 texCubemapLayeredLod(texture< long2, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level) 
#line 6935 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 6939 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6950 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 6941 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline ulong2 texCubemapLayeredLod(texture< ulong2, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level) 
#line 6942 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 6946 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6957 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 6948 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline long4 texCubemapLayeredLod(texture< long4, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level) 
#line 6949 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 6953 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6964 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 6955 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline ulong4 texCubemapLayeredLod(texture< ulong4, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level) 
#line 6956 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 6960 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6971 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 6970 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float texCubemapLayeredLod(texture< float, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level) 
#line 6971 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 6975 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6986 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 6977 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float1 texCubemapLayeredLod(texture< float1, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level) 
#line 6978 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 6982 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6993 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 6984 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float2 texCubemapLayeredLod(texture< float2, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level) 
#line 6985 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 6989 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7000 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 6991 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float4 texCubemapLayeredLod(texture< float4, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level) 
#line 6992 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 6996 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7007 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 7004 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float texCubemapLayeredLod(texture< char, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer, float level) 
#line 7005 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 7014 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 7027 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 7016 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float texCubemapLayeredLod(texture< signed char, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer, float level) 
#line 7017 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 7022 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 7035 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 7024 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float texCubemapLayeredLod(texture< unsigned char, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer, float level) 
#line 7025 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 7030 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 7043 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 7032 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float1 texCubemapLayeredLod(texture< char1, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer, float level) 
#line 7033 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 7038 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 7051 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 7040 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float1 texCubemapLayeredLod(texture< uchar1, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer, float level) 
#line 7041 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 7046 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 7059 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 7048 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float2 texCubemapLayeredLod(texture< char2, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer, float level) 
#line 7049 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 7054 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 7067 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 7056 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float2 texCubemapLayeredLod(texture< uchar2, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer, float level) 
#line 7057 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 7062 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 7075 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 7064 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float4 texCubemapLayeredLod(texture< char4, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer, float level) 
#line 7065 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 7070 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 7083 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 7072 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float4 texCubemapLayeredLod(texture< uchar4, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer, float level) 
#line 7073 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 7078 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 7091 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 7086 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float texCubemapLayeredLod(texture< short, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer, float level) 
#line 7087 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 7092 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 7105 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 7094 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float texCubemapLayeredLod(texture< unsigned short, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer, float level) 
#line 7095 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 7100 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 7113 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 7102 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float1 texCubemapLayeredLod(texture< short1, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer, float level) 
#line 7103 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 7108 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 7121 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 7110 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float1 texCubemapLayeredLod(texture< ushort1, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer, float level) 
#line 7111 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 7116 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 7129 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 7118 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float2 texCubemapLayeredLod(texture< short2, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer, float level) 
#line 7119 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 7124 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 7137 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 7126 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float2 texCubemapLayeredLod(texture< ushort2, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer, float level) 
#line 7127 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 7132 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 7145 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 7134 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float4 texCubemapLayeredLod(texture< short4, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer, float level) 
#line 7135 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 7140 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 7153 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 7142 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float4 texCubemapLayeredLod(texture< ushort4, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer, float level) 
#line 7143 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 7148 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 7161 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 7157 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline char tex1DGrad(texture< char, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy) 
#line 7158 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7166 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7177 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 7168 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline signed char tex1DGrad(texture< signed char, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy) 
#line 7169 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7173 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7184 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 7175 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned char tex1DGrad(texture< unsigned char, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy) 
#line 7176 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7180 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7191 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 7182 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline char1 tex1DGrad(texture< char1, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy) 
#line 7183 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7187 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7198 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 7189 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline uchar1 tex1DGrad(texture< uchar1, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy) 
#line 7190 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7194 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7205 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 7196 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline char2 tex1DGrad(texture< char2, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy) 
#line 7197 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7201 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7212 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 7203 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline uchar2 tex1DGrad(texture< uchar2, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy) 
#line 7204 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7208 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7219 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 7210 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline char4 tex1DGrad(texture< char4, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy) 
#line 7211 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7215 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7226 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 7217 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline uchar4 tex1DGrad(texture< uchar4, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy) 
#line 7218 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7222 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7233 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 7230 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline short tex1DGrad(texture< short, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy) 
#line 7231 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7235 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7246 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 7237 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned short tex1DGrad(texture< unsigned short, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy) 
#line 7238 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7242 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7253 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 7244 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline short1 tex1DGrad(texture< short1, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy) 
#line 7245 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7249 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7260 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 7251 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline ushort1 tex1DGrad(texture< ushort1, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy) 
#line 7252 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7256 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7267 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 7258 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline short2 tex1DGrad(texture< short2, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy) 
#line 7259 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7263 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7274 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 7265 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline ushort2 tex1DGrad(texture< ushort2, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy) 
#line 7266 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7270 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7281 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 7272 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline short4 tex1DGrad(texture< short4, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy) 
#line 7273 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7277 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7288 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 7279 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline ushort4 tex1DGrad(texture< ushort4, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy) 
#line 7280 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7284 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7295 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 7292 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline int tex1DGrad(texture< int, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy) 
#line 7293 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7297 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7308 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 7299 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned tex1DGrad(texture< unsigned, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy) 
#line 7300 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7304 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7315 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 7306 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline int1 tex1DGrad(texture< int1, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy) 
#line 7307 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7311 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7322 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 7313 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline uint1 tex1DGrad(texture< uint1, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy) 
#line 7314 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7318 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7329 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 7320 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline int2 tex1DGrad(texture< int2, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy) 
#line 7321 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7325 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7336 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 7327 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline uint2 tex1DGrad(texture< uint2, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy) 
#line 7328 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7332 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7343 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 7334 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline int4 tex1DGrad(texture< int4, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy) 
#line 7335 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7339 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7350 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 7341 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline uint4 tex1DGrad(texture< uint4, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy) 
#line 7342 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7346 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7357 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 7362 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline long tex1DGrad(texture< long, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy) 
#line 7363 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7367 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7378 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 7369 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned long tex1DGrad(texture< unsigned long, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy) 
#line 7370 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7374 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7385 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 7376 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline long1 tex1DGrad(texture< long1, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy) 
#line 7377 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7381 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7392 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 7383 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline ulong1 tex1DGrad(texture< ulong1, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy) 
#line 7384 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7388 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7399 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 7390 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline long2 tex1DGrad(texture< long2, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy) 
#line 7391 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7395 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7406 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 7397 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline ulong2 tex1DGrad(texture< ulong2, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy) 
#line 7398 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7402 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7413 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 7404 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline long4 tex1DGrad(texture< long4, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy) 
#line 7405 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7409 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7420 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 7411 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline ulong4 tex1DGrad(texture< ulong4, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy) 
#line 7412 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7416 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7427 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 7426 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float tex1DGrad(texture< float, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy) 
#line 7427 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7431 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7442 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 7433 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex1DGrad(texture< float1, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy) 
#line 7434 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7438 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7449 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 7440 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex1DGrad(texture< float2, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy) 
#line 7441 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7445 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7456 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 7447 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex1DGrad(texture< float4, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy) 
#line 7448 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7452 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7463 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 7460 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float tex1DGrad(texture< char, 1, cudaReadModeNormalizedFloat>  t, float x, float dPdx, float dPdy) 
#line 7461 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7470 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 7483 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 7472 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float tex1DGrad(texture< signed char, 1, cudaReadModeNormalizedFloat>  t, float x, float dPdx, float dPdy) 
#line 7473 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7478 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 7491 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 7480 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float tex1DGrad(texture< unsigned char, 1, cudaReadModeNormalizedFloat>  t, float x, float dPdx, float dPdy) 
#line 7481 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7486 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 7499 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 7488 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex1DGrad(texture< char1, 1, cudaReadModeNormalizedFloat>  t, float x, float dPdx, float dPdy) 
#line 7489 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7494 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 7507 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 7496 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex1DGrad(texture< uchar1, 1, cudaReadModeNormalizedFloat>  t, float x, float dPdx, float dPdy) 
#line 7497 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7502 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 7515 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 7504 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex1DGrad(texture< char2, 1, cudaReadModeNormalizedFloat>  t, float x, float dPdx, float dPdy) 
#line 7505 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7510 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 7523 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 7512 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex1DGrad(texture< uchar2, 1, cudaReadModeNormalizedFloat>  t, float x, float dPdx, float dPdy) 
#line 7513 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7518 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 7531 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 7520 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex1DGrad(texture< char4, 1, cudaReadModeNormalizedFloat>  t, float x, float dPdx, float dPdy) 
#line 7521 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7526 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 7539 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 7528 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex1DGrad(texture< uchar4, 1, cudaReadModeNormalizedFloat>  t, float x, float dPdx, float dPdy) 
#line 7529 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7534 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 7547 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 7542 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float tex1DGrad(texture< short, 1, cudaReadModeNormalizedFloat>  t, float x, float dPdx, float dPdy) 
#line 7543 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7548 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 7561 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 7550 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float tex1DGrad(texture< unsigned short, 1, cudaReadModeNormalizedFloat>  t, float x, float dPdx, float dPdy) 
#line 7551 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7556 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 7569 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 7558 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex1DGrad(texture< short1, 1, cudaReadModeNormalizedFloat>  t, float x, float dPdx, float dPdy) 
#line 7559 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7564 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 7577 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 7566 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex1DGrad(texture< ushort1, 1, cudaReadModeNormalizedFloat>  t, float x, float dPdx, float dPdy) 
#line 7567 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7572 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 7585 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 7574 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex1DGrad(texture< short2, 1, cudaReadModeNormalizedFloat>  t, float x, float dPdx, float dPdy) 
#line 7575 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7580 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 7593 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 7582 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex1DGrad(texture< ushort2, 1, cudaReadModeNormalizedFloat>  t, float x, float dPdx, float dPdy) 
#line 7583 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7588 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 7601 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 7590 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex1DGrad(texture< short4, 1, cudaReadModeNormalizedFloat>  t, float x, float dPdx, float dPdy) 
#line 7591 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7596 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 7609 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 7598 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex1DGrad(texture< ushort4, 1, cudaReadModeNormalizedFloat>  t, float x, float dPdx, float dPdy) 
#line 7599 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7604 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 7617 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 7612 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline char tex2DGrad(texture< char, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 7613 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 7621 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7632 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 7623 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline signed char tex2DGrad(texture< signed char, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 7624 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 7628 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7639 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 7630 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned char tex2DGrad(texture< unsigned char, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 7631 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 7635 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7646 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 7637 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline char1 tex2DGrad(texture< char1, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 7638 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 7642 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7653 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 7644 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline uchar1 tex2DGrad(texture< uchar1, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 7645 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 7649 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7660 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 7651 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline char2 tex2DGrad(texture< char2, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 7652 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 7656 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7667 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 7658 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline uchar2 tex2DGrad(texture< uchar2, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 7659 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 7663 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7674 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 7665 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline char4 tex2DGrad(texture< char4, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 7666 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 7670 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7681 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 7672 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline uchar4 tex2DGrad(texture< uchar4, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 7673 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 7677 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7688 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 7685 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline short tex2DGrad(texture< short, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 7686 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 7690 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7701 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 7692 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned short tex2DGrad(texture< unsigned short, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 7693 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 7697 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7708 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 7699 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline short1 tex2DGrad(texture< short1, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 7700 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 7704 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7715 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 7706 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline ushort1 tex2DGrad(texture< ushort1, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 7707 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 7711 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7722 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 7713 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline short2 tex2DGrad(texture< short2, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 7714 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 7718 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7729 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 7720 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline ushort2 tex2DGrad(texture< ushort2, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 7721 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 7725 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7736 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 7727 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline short4 tex2DGrad(texture< short4, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 7728 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 7732 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7743 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 7734 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline ushort4 tex2DGrad(texture< ushort4, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 7735 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 7739 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7750 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 7747 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline int tex2DGrad(texture< int, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 7748 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 7752 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7763 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 7754 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned tex2DGrad(texture< unsigned, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 7755 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 7759 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7770 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 7761 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline int1 tex2DGrad(texture< int1, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 7762 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 7766 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7777 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 7768 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline uint1 tex2DGrad(texture< uint1, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 7769 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 7773 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7784 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 7775 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline int2 tex2DGrad(texture< int2, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 7776 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 7780 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7791 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 7782 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline uint2 tex2DGrad(texture< uint2, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 7783 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 7787 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7798 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 7789 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline int4 tex2DGrad(texture< int4, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 7790 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 7794 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7805 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 7796 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline uint4 tex2DGrad(texture< uint4, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 7797 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 7801 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7812 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 7811 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline long tex2DGrad(texture< long, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 7812 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 7816 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7827 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 7818 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned long tex2DGrad(texture< unsigned long, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 7819 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 7823 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7834 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 7825 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline long1 tex2DGrad(texture< long1, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 7826 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 7830 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7841 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 7832 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline ulong1 tex2DGrad(texture< ulong1, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 7833 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 7837 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7848 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 7839 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline long2 tex2DGrad(texture< long2, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 7840 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 7844 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7855 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 7846 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline ulong2 tex2DGrad(texture< ulong2, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 7847 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 7851 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7862 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 7853 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline long4 tex2DGrad(texture< long4, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 7854 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 7858 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7869 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 7860 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline ulong4 tex2DGrad(texture< ulong4, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 7861 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 7865 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7876 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 7875 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float tex2DGrad(texture< float, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 7876 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 7880 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7891 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 7882 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex2DGrad(texture< float1, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 7883 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 7887 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7898 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 7889 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex2DGrad(texture< float2, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 7890 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 7894 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7905 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 7896 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex2DGrad(texture< float4, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 7897 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 7901 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7912 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 7909 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float tex2DGrad(texture< char, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 7910 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 7919 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 7932 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 7921 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float tex2DGrad(texture< signed char, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 7922 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 7927 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 7940 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 7929 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float tex2DGrad(texture< unsigned char, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 7930 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 7935 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 7948 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 7937 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex2DGrad(texture< char1, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 7938 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 7943 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 7956 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 7945 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex2DGrad(texture< uchar1, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 7946 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 7951 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 7964 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 7953 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex2DGrad(texture< char2, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 7954 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 7959 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 7972 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 7961 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex2DGrad(texture< uchar2, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 7962 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 7967 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 7980 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 7969 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex2DGrad(texture< char4, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 7970 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 7975 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 7988 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 7977 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex2DGrad(texture< uchar4, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 7978 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 7983 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 7996 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 7991 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float tex2DGrad(texture< short, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 7992 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 7997 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 8010 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 7999 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float tex2DGrad(texture< unsigned short, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 8000 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 8005 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 8018 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 8007 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex2DGrad(texture< short1, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 8008 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 8013 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 8026 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 8015 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex2DGrad(texture< ushort1, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 8016 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 8021 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 8034 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 8023 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex2DGrad(texture< short2, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 8024 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 8029 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 8042 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 8031 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex2DGrad(texture< ushort2, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 8032 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 8037 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 8050 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 8039 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex2DGrad(texture< short4, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 8040 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 8045 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 8058 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 8047 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex2DGrad(texture< ushort4, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 8048 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 8053 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 8066 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 8061 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline char tex1DLayeredGrad(texture< char, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy) 
#line 8062 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8070 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8081 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 8072 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline signed char tex1DLayeredGrad(texture< signed char, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy) 
#line 8073 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8077 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8088 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 8079 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned char tex1DLayeredGrad(texture< unsigned char, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy) 
#line 8080 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8084 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8095 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 8086 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline char1 tex1DLayeredGrad(texture< char1, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy) 
#line 8087 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8091 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8102 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 8093 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline uchar1 tex1DLayeredGrad(texture< uchar1, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy) 
#line 8094 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8098 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8109 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 8100 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline char2 tex1DLayeredGrad(texture< char2, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy) 
#line 8101 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8105 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8116 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 8107 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline uchar2 tex1DLayeredGrad(texture< uchar2, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy) 
#line 8108 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8112 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8123 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 8114 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline char4 tex1DLayeredGrad(texture< char4, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy) 
#line 8115 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8119 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8130 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 8121 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline uchar4 tex1DLayeredGrad(texture< uchar4, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy) 
#line 8122 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8126 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8137 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 8134 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline short tex1DLayeredGrad(texture< short, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy) 
#line 8135 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8139 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8150 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 8141 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned short tex1DLayeredGrad(texture< unsigned short, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy) 
#line 8142 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8146 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8157 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 8148 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline short1 tex1DLayeredGrad(texture< short1, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy) 
#line 8149 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8153 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8164 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 8155 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline ushort1 tex1DLayeredGrad(texture< ushort1, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy) 
#line 8156 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8160 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8171 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 8162 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline short2 tex1DLayeredGrad(texture< short2, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy) 
#line 8163 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8167 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8178 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 8169 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline ushort2 tex1DLayeredGrad(texture< ushort2, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy) 
#line 8170 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8174 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8185 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 8176 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline short4 tex1DLayeredGrad(texture< short4, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy) 
#line 8177 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8181 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8192 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 8183 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline ushort4 tex1DLayeredGrad(texture< ushort4, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy) 
#line 8184 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8188 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8199 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 8196 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline int tex1DLayeredGrad(texture< int, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy) 
#line 8197 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8201 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8212 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 8203 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned tex1DLayeredGrad(texture< unsigned, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy) 
#line 8204 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8208 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8219 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 8210 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline int1 tex1DLayeredGrad(texture< int1, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy) 
#line 8211 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8215 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8226 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 8217 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline uint1 tex1DLayeredGrad(texture< uint1, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy) 
#line 8218 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8222 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8233 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 8224 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline int2 tex1DLayeredGrad(texture< int2, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy) 
#line 8225 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8229 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8240 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 8231 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline uint2 tex1DLayeredGrad(texture< uint2, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy) 
#line 8232 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8236 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8247 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 8238 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline int4 tex1DLayeredGrad(texture< int4, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy) 
#line 8239 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8243 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8254 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 8245 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline uint4 tex1DLayeredGrad(texture< uint4, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy) 
#line 8246 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8250 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8261 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 8260 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline long tex1DLayeredGrad(texture< long, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy) 
#line 8261 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8265 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8276 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 8267 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned long tex1DLayeredGrad(texture< unsigned long, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy) 
#line 8268 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8272 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8283 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 8274 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline long1 tex1DLayeredGrad(texture< long1, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy) 
#line 8275 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8279 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8290 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 8281 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline ulong1 tex1DLayeredGrad(texture< ulong1, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy) 
#line 8282 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8286 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8297 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 8288 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline long2 tex1DLayeredGrad(texture< long2, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy) 
#line 8289 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8293 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8304 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 8295 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline ulong2 tex1DLayeredGrad(texture< ulong2, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy) 
#line 8296 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8300 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8311 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 8302 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline long4 tex1DLayeredGrad(texture< long4, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy) 
#line 8303 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8307 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8318 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 8309 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline ulong4 tex1DLayeredGrad(texture< ulong4, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy) 
#line 8310 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8314 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8325 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 8324 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float tex1DLayeredGrad(texture< float, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy) 
#line 8325 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8329 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8340 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 8331 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex1DLayeredGrad(texture< float1, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy) 
#line 8332 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8336 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8347 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 8338 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex1DLayeredGrad(texture< float2, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy) 
#line 8339 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8343 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8354 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 8345 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex1DLayeredGrad(texture< float4, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy) 
#line 8346 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8350 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8361 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 8358 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float tex1DLayeredGrad(texture< char, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float dPdx, float dPdy) 
#line 8359 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8368 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 8381 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 8370 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float tex1DLayeredGrad(texture< signed char, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float dPdx, float dPdy) 
#line 8371 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8376 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 8389 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 8378 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float tex1DLayeredGrad(texture< unsigned char, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float dPdx, float dPdy) 
#line 8379 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8384 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 8397 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 8386 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex1DLayeredGrad(texture< char1, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float dPdx, float dPdy) 
#line 8387 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8392 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 8405 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 8394 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex1DLayeredGrad(texture< uchar1, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float dPdx, float dPdy) 
#line 8395 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8400 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 8413 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 8402 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex1DLayeredGrad(texture< char2, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float dPdx, float dPdy) 
#line 8403 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8408 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 8421 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 8410 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex1DLayeredGrad(texture< uchar2, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float dPdx, float dPdy) 
#line 8411 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8416 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 8429 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 8418 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex1DLayeredGrad(texture< char4, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float dPdx, float dPdy) 
#line 8419 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8424 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 8437 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 8426 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex1DLayeredGrad(texture< uchar4, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float dPdx, float dPdy) 
#line 8427 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8432 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 8445 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 8440 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float tex1DLayeredGrad(texture< short, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float dPdx, float dPdy) 
#line 8441 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8446 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 8459 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 8448 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float tex1DLayeredGrad(texture< unsigned short, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float dPdx, float dPdy) 
#line 8449 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8454 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 8467 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 8456 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex1DLayeredGrad(texture< short1, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float dPdx, float dPdy) 
#line 8457 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8462 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 8475 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 8464 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex1DLayeredGrad(texture< ushort1, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float dPdx, float dPdy) 
#line 8465 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8470 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 8483 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 8472 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex1DLayeredGrad(texture< short2, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float dPdx, float dPdy) 
#line 8473 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8478 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 8491 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 8480 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex1DLayeredGrad(texture< ushort2, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float dPdx, float dPdy) 
#line 8481 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8486 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 8499 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 8488 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex1DLayeredGrad(texture< short4, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float dPdx, float dPdy) 
#line 8489 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8494 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 8507 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 8496 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex1DLayeredGrad(texture< ushort4, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float dPdx, float dPdy) 
#line 8497 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8502 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 8515 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 8510 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline char tex2DLayeredGrad(texture< char, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8511 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8519 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8530 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 8521 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline signed char tex2DLayeredGrad(texture< signed char, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8522 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8526 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8537 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 8528 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned char tex2DLayeredGrad(texture< unsigned char, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8529 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8533 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8544 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 8535 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline char1 tex2DLayeredGrad(texture< char1, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8536 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8540 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8551 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 8542 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline uchar1 tex2DLayeredGrad(texture< uchar1, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8543 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8547 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8558 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 8549 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline char2 tex2DLayeredGrad(texture< char2, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8550 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8554 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8565 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 8556 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline uchar2 tex2DLayeredGrad(texture< uchar2, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8557 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8561 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8572 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 8563 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline char4 tex2DLayeredGrad(texture< char4, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8564 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8568 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8579 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 8570 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline uchar4 tex2DLayeredGrad(texture< uchar4, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8571 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8575 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8586 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 8583 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline short tex2DLayeredGrad(texture< short, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8584 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8588 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8599 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 8590 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned short tex2DLayeredGrad(texture< unsigned short, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8591 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8595 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8606 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 8597 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline short1 tex2DLayeredGrad(texture< short1, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8598 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8602 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8613 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 8604 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline ushort1 tex2DLayeredGrad(texture< ushort1, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8605 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8609 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8620 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 8611 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline short2 tex2DLayeredGrad(texture< short2, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8612 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8616 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8627 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 8618 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline ushort2 tex2DLayeredGrad(texture< ushort2, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8619 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8623 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8634 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 8625 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline short4 tex2DLayeredGrad(texture< short4, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8626 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8630 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8641 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 8632 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline ushort4 tex2DLayeredGrad(texture< ushort4, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8633 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8637 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8648 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 8645 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline int tex2DLayeredGrad(texture< int, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8646 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8650 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8661 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 8652 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned tex2DLayeredGrad(texture< unsigned, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8653 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8657 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8668 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 8659 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline int1 tex2DLayeredGrad(texture< int1, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8660 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8664 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8675 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 8666 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline uint1 tex2DLayeredGrad(texture< uint1, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8667 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8671 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8682 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 8673 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline int2 tex2DLayeredGrad(texture< int2, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8674 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8678 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8689 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 8680 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline uint2 tex2DLayeredGrad(texture< uint2, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8681 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8685 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8696 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 8687 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline int4 tex2DLayeredGrad(texture< int4, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8688 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8692 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8703 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 8694 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline uint4 tex2DLayeredGrad(texture< uint4, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8695 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8699 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8710 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 8709 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline long tex2DLayeredGrad(texture< long, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8710 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8714 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8725 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 8716 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned long tex2DLayeredGrad(texture< unsigned long, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8717 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8721 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8732 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 8723 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline long1 tex2DLayeredGrad(texture< long1, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8724 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8728 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8739 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 8730 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline ulong1 tex2DLayeredGrad(texture< ulong1, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8731 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8735 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8746 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 8737 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline long2 tex2DLayeredGrad(texture< long2, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8738 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8742 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8753 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 8744 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline ulong2 tex2DLayeredGrad(texture< ulong2, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8745 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8749 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8760 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 8751 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline long4 tex2DLayeredGrad(texture< long4, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8752 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8756 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8767 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 8758 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline ulong4 tex2DLayeredGrad(texture< ulong4, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8759 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8763 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8774 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 8773 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float tex2DLayeredGrad(texture< float, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8774 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8778 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8789 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 8780 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex2DLayeredGrad(texture< float1, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8781 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8785 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8796 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 8787 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex2DLayeredGrad(texture< float2, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8788 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8792 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8803 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 8794 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex2DLayeredGrad(texture< float4, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8795 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8799 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8810 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 8807 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float tex2DLayeredGrad(texture< char, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8808 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8817 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 8830 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 8819 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float tex2DLayeredGrad(texture< signed char, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8820 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8825 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 8838 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 8827 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float tex2DLayeredGrad(texture< unsigned char, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8828 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8833 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 8846 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 8835 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex2DLayeredGrad(texture< char1, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8836 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8841 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 8854 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 8843 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex2DLayeredGrad(texture< uchar1, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8844 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8849 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 8862 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 8851 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex2DLayeredGrad(texture< char2, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8852 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8857 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 8870 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 8859 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex2DLayeredGrad(texture< uchar2, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8860 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8865 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 8878 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 8867 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex2DLayeredGrad(texture< char4, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8868 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8873 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 8886 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 8875 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex2DLayeredGrad(texture< uchar4, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8876 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8881 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 8894 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 8889 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float tex2DLayeredGrad(texture< short, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8890 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8895 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 8908 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 8897 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float tex2DLayeredGrad(texture< unsigned short, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8898 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8903 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 8916 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 8905 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex2DLayeredGrad(texture< short1, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8906 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8911 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 8924 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 8913 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex2DLayeredGrad(texture< ushort1, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8914 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8919 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 8932 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 8921 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex2DLayeredGrad(texture< short2, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8922 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8927 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 8940 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 8929 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex2DLayeredGrad(texture< ushort2, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8930 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8935 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 8948 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 8937 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex2DLayeredGrad(texture< short4, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8938 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8943 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 8956 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 8945 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex2DLayeredGrad(texture< ushort4, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8946 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8951 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 8964 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 8959 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline char tex3DGrad(texture< char, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 8960 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 8968 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8979 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 8970 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline signed char tex3DGrad(texture< signed char, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 8971 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 8975 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8986 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 8977 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned char tex3DGrad(texture< unsigned char, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 8978 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 8982 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8993 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 8984 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline char1 tex3DGrad(texture< char1, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 8985 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 8989 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 9000 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 8991 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline uchar1 tex3DGrad(texture< uchar1, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 8992 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 8996 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 9007 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 8998 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline char2 tex3DGrad(texture< char2, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 8999 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9003 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 9014 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 9005 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline uchar2 tex3DGrad(texture< uchar2, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9006 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9010 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 9021 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 9012 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline char4 tex3DGrad(texture< char4, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9013 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9017 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 9028 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 9019 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline uchar4 tex3DGrad(texture< uchar4, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9020 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9024 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 9035 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 9032 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline short tex3DGrad(texture< short, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9033 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9037 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 9048 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 9039 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned short tex3DGrad(texture< unsigned short, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9040 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9044 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 9055 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 9046 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline short1 tex3DGrad(texture< short1, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9047 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9051 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 9062 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 9053 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline ushort1 tex3DGrad(texture< ushort1, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9054 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9058 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 9069 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 9060 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline short2 tex3DGrad(texture< short2, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9061 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9065 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 9076 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 9067 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline ushort2 tex3DGrad(texture< ushort2, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9068 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9072 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 9083 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 9074 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline short4 tex3DGrad(texture< short4, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9075 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9079 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 9090 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 9081 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline ushort4 tex3DGrad(texture< ushort4, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9082 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9086 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 9097 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 9094 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline int tex3DGrad(texture< int, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9095 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9099 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 9110 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 9101 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned tex3DGrad(texture< unsigned, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9102 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9106 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 9117 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 9108 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline int1 tex3DGrad(texture< int1, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9109 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9113 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 9124 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 9115 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline uint1 tex3DGrad(texture< uint1, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9116 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9120 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 9131 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 9122 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline int2 tex3DGrad(texture< int2, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9123 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9127 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 9138 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 9129 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline uint2 tex3DGrad(texture< uint2, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9130 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9134 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 9145 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 9136 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline int4 tex3DGrad(texture< int4, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9137 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9141 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 9152 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 9143 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline uint4 tex3DGrad(texture< uint4, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9144 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9148 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 9159 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 9158 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline long tex3DGrad(texture< long, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9159 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9163 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 9174 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 9165 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned long tex3DGrad(texture< unsigned long, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9166 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9170 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 9181 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 9172 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline long1 tex3DGrad(texture< long1, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9173 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9177 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 9188 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 9179 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline ulong1 tex3DGrad(texture< ulong1, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9180 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9184 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 9195 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 9186 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline long2 tex3DGrad(texture< long2, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9187 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9191 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 9202 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 9193 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline ulong2 tex3DGrad(texture< ulong2, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9194 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9198 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 9209 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 9200 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline long4 tex3DGrad(texture< long4, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9201 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9205 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 9216 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 9207 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline ulong4 tex3DGrad(texture< ulong4, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9208 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9212 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 9223 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 9222 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float tex3DGrad(texture< float, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9223 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9227 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 9238 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 9229 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex3DGrad(texture< float1, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9230 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9234 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 9245 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 9236 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex3DGrad(texture< float2, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9237 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9241 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 9252 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 9243 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex3DGrad(texture< float4, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9244 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9248 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 9259 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 9256 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float tex3DGrad(texture< char, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9257 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9266 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 9279 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 9268 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float tex3DGrad(texture< signed char, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9269 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9274 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 9287 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 9276 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float tex3DGrad(texture< unsigned char, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9277 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9282 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 9295 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 9284 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex3DGrad(texture< char1, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9285 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9290 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 9303 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 9292 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex3DGrad(texture< uchar1, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9293 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9298 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 9311 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 9300 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex3DGrad(texture< char2, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9301 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9306 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 9319 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 9308 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex3DGrad(texture< uchar2, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9309 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9314 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 9327 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 9316 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex3DGrad(texture< char4, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9317 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9322 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 9335 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 9324 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex3DGrad(texture< uchar4, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9325 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9330 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 9343 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 9338 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float tex3DGrad(texture< short, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9339 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9344 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 9357 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 9346 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float tex3DGrad(texture< unsigned short, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9347 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9352 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 9365 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 9354 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex3DGrad(texture< short1, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9355 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9360 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 9373 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 9362 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex3DGrad(texture< ushort1, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9363 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9368 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 9381 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 9370 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex3DGrad(texture< short2, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9371 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9376 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 9389 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 9378 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex3DGrad(texture< ushort2, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9379 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9384 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 9397 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 9386 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex3DGrad(texture< short4, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9387 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9392 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 9405 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 9394 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex3DGrad(texture< ushort4, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9395 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9400 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 9413 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_fetch_functions.hpp"
#line 70 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
extern "C" { void __tex_1d_v4f32_s32(cudaTextureObject_t, int, float *, float *, float *, float *); } 
#line 71 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
extern "C" { void __tex_1d_v4f32_f32(cudaTextureObject_t, float, float *, float *, float *, float *); } 
#line 72 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
extern "C" { void __tex_1d_level_v4f32_f32(cudaTextureObject_t, float, float, float *, float *, float *, float *); } 
#line 73 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
extern "C" { void __tex_1d_grad_v4f32_f32(cudaTextureObject_t, float, float, float, float *, float *, float *, float *); } 
#line 74 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
extern "C" { void __tex_1d_v4s32_s32(cudaTextureObject_t, int, int *, int *, int *, int *); } 
#line 75 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
extern "C" { void __tex_1d_v4s32_f32(cudaTextureObject_t, float, int *, int *, int *, int *); } 
#line 76 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
extern "C" { void __tex_1d_level_v4s32_f32(cudaTextureObject_t, float, float, int *, int *, int *, int *); } 
#line 77 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
extern "C" { void __tex_1d_grad_v4s32_f32(cudaTextureObject_t, float, float, float, int *, int *, int *, int *); } 
#line 78 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
extern "C" { void __tex_1d_v4u32_s32(cudaTextureObject_t, int, unsigned *, unsigned *, unsigned *, unsigned *); } 
#line 79 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
extern "C" { void __tex_1d_v4u32_f32(cudaTextureObject_t, float, unsigned *, unsigned *, unsigned *, unsigned *); } 
#line 80 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
extern "C" { void __tex_1d_level_v4u32_f32(cudaTextureObject_t, float, float, unsigned *, unsigned *, unsigned *, unsigned *); } 
#line 81 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
extern "C" { void __tex_1d_grad_v4u32_f32(cudaTextureObject_t, float, float, float, unsigned *, unsigned *, unsigned *, unsigned *); } 
#line 83 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
extern "C" { void __tex_1d_array_v4f32_s32(cudaTextureObject_t, int, int, float *, float *, float *, float *); } 
#line 84 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
extern "C" { void __tex_1d_array_v4f32_f32(cudaTextureObject_t, int, float, float *, float *, float *, float *); } 
#line 85 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
extern "C" { void __tex_1d_array_level_v4f32_f32(cudaTextureObject_t, int, float, float, float *, float *, float *, float *); } 
#line 86 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
extern "C" { void __tex_1d_array_grad_v4f32_f32(cudaTextureObject_t, int, float, float, float, float *, float *, float *, float *); } 
#line 87 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
extern "C" { void __tex_1d_array_v4s32_s32(cudaTextureObject_t, int, int, int *, int *, int *, int *); } 
#line 88 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
extern "C" { void __tex_1d_array_v4s32_f32(cudaTextureObject_t, int, float, int *, int *, int *, int *); } 
#line 89 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
extern "C" { void __tex_1d_array_level_v4s32_f32(cudaTextureObject_t, int, float, float, int *, int *, int *, int *); } 
#line 90 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
extern "C" { void __tex_1d_array_grad_v4s32_f32(cudaTextureObject_t, int, float, float, float, int *, int *, int *, int *); } 
#line 91 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
extern "C" { void __tex_1d_array_v4u32_s32(cudaTextureObject_t, int, int, unsigned *, unsigned *, unsigned *, unsigned *); } 
#line 92 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
extern "C" { void __tex_1d_array_v4u32_f32(cudaTextureObject_t, int, float, unsigned *, unsigned *, unsigned *, unsigned *); } 
#line 93 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
extern "C" { void __tex_1d_array_level_v4u32_f32(cudaTextureObject_t, int, float, float, unsigned *, unsigned *, unsigned *, unsigned *); } 
#line 94 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
extern "C" { void __tex_1d_array_grad_v4u32_f32(cudaTextureObject_t, int, float, float, float, unsigned *, unsigned *, unsigned *, unsigned *); } 
#line 96 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
extern "C" { void __tex_2d_v4f32_s32(cudaTextureObject_t, int, int, float *, float *, float *, float *); } 
#line 97 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
extern "C" { void __tex_2d_v4f32_f32(cudaTextureObject_t, float, float, float *, float *, float *, float *); } 
#line 98 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
extern "C" { void __tex_2d_level_v4f32_f32(cudaTextureObject_t, float, float, float, float *, float *, float *, float *); } 
#line 99 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
extern "C" { void __tex_2d_grad_v4f32_f32(cudaTextureObject_t, float, float, float, float, float, float, float *, float *, float *, float *); } 
#line 100 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
extern "C" { void __tex_2d_v4s32_s32(cudaTextureObject_t, int, int, int *, int *, int *, int *); } 
#line 101 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
extern "C" { void __tex_2d_v4s32_f32(cudaTextureObject_t, float, float, int *, int *, int *, int *); } 
#line 102 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
extern "C" { void __tex_2d_level_v4s32_f32(cudaTextureObject_t, float, float, float, int *, int *, int *, int *); } 
#line 103 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
extern "C" { void __tex_2d_grad_v4s32_f32(cudaTextureObject_t, float, float, float, float, float, float, int *, int *, int *, int *); } 
#line 104 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
extern "C" { void __tex_2d_v4u32_s32(cudaTextureObject_t, int, int, unsigned *, unsigned *, unsigned *, unsigned *); } 
#line 105 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
extern "C" { void __tex_2d_v4u32_f32(cudaTextureObject_t, float, float, unsigned *, unsigned *, unsigned *, unsigned *); } 
#line 106 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
extern "C" { void __tex_2d_level_v4u32_f32(cudaTextureObject_t, float, float, float, unsigned *, unsigned *, unsigned *, unsigned *); } 
#line 107 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
extern "C" { void __tex_2d_grad_v4u32_f32(cudaTextureObject_t, float, float, float, float, float, float, unsigned *, unsigned *, unsigned *, unsigned *); } 
#line 109 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
extern "C" { void __tex_2d_array_v4f32_s32(cudaTextureObject_t, int, int, int, float *, float *, float *, float *); } 
#line 110 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
extern "C" { void __tex_2d_array_v4f32_f32(cudaTextureObject_t, int, float, float, float *, float *, float *, float *); } 
#line 111 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
extern "C" { void __tex_2d_array_level_v4f32_f32(cudaTextureObject_t, int, float, float, float, float *, float *, float *, float *); } 
#line 112 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
extern "C" { void __tex_2d_array_grad_v4f32_f32(cudaTextureObject_t, int, float, float, float, float, float, float, float *, float *, float *, float *); } 
#line 113 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
extern "C" { void __tex_2d_array_v4s32_s32(cudaTextureObject_t, int, int, int, int *, int *, int *, int *); } 
#line 114 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
extern "C" { void __tex_2d_array_v4s32_f32(cudaTextureObject_t, int, float, float, int *, int *, int *, int *); } 
#line 115 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
extern "C" { void __tex_2d_array_level_v4s32_f32(cudaTextureObject_t, int, float, float, float, int *, int *, int *, int *); } 
#line 116 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
extern "C" { void __tex_2d_array_grad_v4s32_f32(cudaTextureObject_t, int, float, float, float, float, float, float, int *, int *, int *, int *); } 
#line 117 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
extern "C" { void __tex_2d_array_v4u32_s32(cudaTextureObject_t, int, int, int, unsigned *, unsigned *, unsigned *, unsigned *); } 
#line 118 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
extern "C" { void __tex_2d_array_v4u32_f32(cudaTextureObject_t, int, float, float, unsigned *, unsigned *, unsigned *, unsigned *); } 
#line 119 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
extern "C" { void __tex_2d_array_level_v4u32_f32(cudaTextureObject_t, int, float, float, float, unsigned *, unsigned *, unsigned *, unsigned *); } 
#line 120 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
extern "C" { void __tex_2d_array_grad_v4u32_f32(cudaTextureObject_t, int, float, float, float, float, float, float, unsigned *, unsigned *, unsigned *, unsigned *); } 
#line 122 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
extern "C" { void __tex_3d_v4f32_s32(cudaTextureObject_t, int, int, int, float *, float *, float *, float *); } 
#line 123 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
extern "C" { void __tex_3d_v4f32_f32(cudaTextureObject_t, float, float, float, float *, float *, float *, float *); } 
#line 124 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
extern "C" { void __tex_3d_level_v4f32_f32(cudaTextureObject_t, float, float, float, float, float *, float *, float *, float *); } 
#line 125 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
extern "C" { void __tex_3d_grad_v4f32_f32(cudaTextureObject_t, float, float, float, float, float, float, float, float, float, float *, float *, float *, float *); } 
#line 126 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
extern "C" { void __tex_3d_v4s32_s32(cudaTextureObject_t, int, int, int, int *, int *, int *, int *); } 
#line 127 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
extern "C" { void __tex_3d_v4s32_f32(cudaTextureObject_t, float, float, float, int *, int *, int *, int *); } 
#line 128 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
extern "C" { void __tex_3d_level_v4s32_f32(cudaTextureObject_t, float, float, float, float, int *, int *, int *, int *); } 
#line 129 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
extern "C" { void __tex_3d_grad_v4s32_f32(cudaTextureObject_t, float, float, float, float, float, float, float, float, float, int *, int *, int *, int *); } 
#line 130 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
extern "C" { void __tex_3d_v4u32_s32(cudaTextureObject_t, int, int, int, unsigned *, unsigned *, unsigned *, unsigned *); } 
#line 131 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
extern "C" { void __tex_3d_v4u32_f32(cudaTextureObject_t, float, float, float, unsigned *, unsigned *, unsigned *, unsigned *); } 
#line 132 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
extern "C" { void __tex_3d_level_v4u32_f32(cudaTextureObject_t, float, float, float, float, unsigned *, unsigned *, unsigned *, unsigned *); } 
#line 133 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
extern "C" { void __tex_3d_grad_v4u32_f32(cudaTextureObject_t, float, float, float, float, float, float, float, float, float, unsigned *, unsigned *, unsigned *, unsigned *); } 
#line 135 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
extern "C" { void __tex_cube_v4f32_f32(cudaTextureObject_t, float, float, float, float *, float *, float *, float *); } 
#line 136 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
extern "C" { void __tex_cube_level_v4f32_f32(cudaTextureObject_t, float, float, float, float, float *, float *, float *, float *); } 
#line 137 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
extern "C" { void __tex_cube_v4s32_f32(cudaTextureObject_t, float, float, float, int *, int *, int *, int *); } 
#line 138 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
extern "C" { void __tex_cube_level_v4s32_f32(cudaTextureObject_t, float, float, float, float, int *, int *, int *, int *); } 
#line 139 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
extern "C" { void __tex_cube_v4u32_f32(cudaTextureObject_t, float, float, float, unsigned *, unsigned *, unsigned *, unsigned *); } 
#line 140 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
extern "C" { void __tex_cube_level_v4u32_f32(cudaTextureObject_t, float, float, float, float, unsigned *, unsigned *, unsigned *, unsigned *); } 
#line 142 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
extern "C" { void __tex_cube_array_v4f32_f32(cudaTextureObject_t, int, float, float, float, float *, float *, float *, float *); } 
#line 143 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
extern "C" { void __tex_cube_array_level_v4f32_f32(cudaTextureObject_t, int, float, float, float, float, float *, float *, float *, float *); } 
#line 144 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
extern "C" { void __tex_cube_array_v4s32_f32(cudaTextureObject_t, int, float, float, float, int *, int *, int *, int *); } 
#line 145 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
extern "C" { void __tex_cube_array_level_v4s32_f32(cudaTextureObject_t, int, float, float, float, float, int *, int *, int *, int *); } 
#line 146 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
extern "C" { void __tex_cube_array_v4u32_f32(cudaTextureObject_t, int, float, float, float, unsigned *, unsigned *, unsigned *, unsigned *); } 
#line 147 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
extern "C" { void __tex_cube_array_level_v4u32_f32(cudaTextureObject_t, int, float, float, float, float, unsigned *, unsigned *, unsigned *, unsigned *); } 
#line 149 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
extern "C" { void __tld4_r_2d_v4f32_f32(cudaTextureObject_t, float, float, float *, float *, float *, float *); } 
#line 150 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
extern "C" { void __tld4_g_2d_v4f32_f32(cudaTextureObject_t, float, float, float *, float *, float *, float *); } 
#line 151 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
extern "C" { void __tld4_b_2d_v4f32_f32(cudaTextureObject_t, float, float, float *, float *, float *, float *); } 
#line 152 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
extern "C" { void __tld4_a_2d_v4f32_f32(cudaTextureObject_t, float, float, float *, float *, float *, float *); } 
#line 153 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
extern "C" { void __tld4_r_2d_v4s32_f32(cudaTextureObject_t, float, float, int *, int *, int *, int *); } 
#line 154 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
extern "C" { void __tld4_g_2d_v4s32_f32(cudaTextureObject_t, float, float, int *, int *, int *, int *); } 
#line 155 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
extern "C" { void __tld4_b_2d_v4s32_f32(cudaTextureObject_t, float, float, int *, int *, int *, int *); } 
#line 156 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
extern "C" { void __tld4_a_2d_v4s32_f32(cudaTextureObject_t, float, float, int *, int *, int *, int *); } 
#line 157 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
extern "C" { void __tld4_r_2d_v4u32_f32(cudaTextureObject_t, float, float, unsigned *, unsigned *, unsigned *, unsigned *); } 
#line 158 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
extern "C" { void __tld4_g_2d_v4u32_f32(cudaTextureObject_t, float, float, unsigned *, unsigned *, unsigned *, unsigned *); } 
#line 159 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
extern "C" { void __tld4_b_2d_v4u32_f32(cudaTextureObject_t, float, float, unsigned *, unsigned *, unsigned *, unsigned *); } 
#line 160 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
extern "C" { void __tld4_a_2d_v4u32_f32(cudaTextureObject_t, float, float, unsigned *, unsigned *, unsigned *, unsigned *); } 
#line 169 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1Dfetch(char * retVal, cudaTextureObject_t texObject, int x); 
#line 170 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1Dfetch(signed char * retVal, cudaTextureObject_t texObject, int x); 
#line 172 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1Dfetch(char1 * retVal, cudaTextureObject_t texObject, int x); 
#line 174 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1Dfetch(char2 * retVal, cudaTextureObject_t texObject, int x); 
#line 176 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1Dfetch(char4 * retVal, cudaTextureObject_t texObject, int x); 
#line 178 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1Dfetch(unsigned char * retVal, cudaTextureObject_t texObject, int x); 
#line 180 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1Dfetch(uchar1 * retVal, cudaTextureObject_t texObject, int x); 
#line 182 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1Dfetch(uchar2 * retVal, cudaTextureObject_t texObject, int x); 
#line 184 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1Dfetch(uchar4 * retVal, cudaTextureObject_t texObject, int x); 
#line 192 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1Dfetch(short * retVal, cudaTextureObject_t texObject, int x); 
#line 194 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1Dfetch(short1 * retVal, cudaTextureObject_t texObject, int x); 
#line 196 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1Dfetch(short2 * retVal, cudaTextureObject_t texObject, int x); 
#line 198 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1Dfetch(short4 * retVal, cudaTextureObject_t texObject, int x); 
#line 200 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1Dfetch(unsigned short * retVal, cudaTextureObject_t texObject, int x); 
#line 202 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1Dfetch(ushort1 * retVal, cudaTextureObject_t texObject, int x); 
#line 204 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1Dfetch(ushort2 * retVal, cudaTextureObject_t texObject, int x); 
#line 206 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1Dfetch(ushort4 * retVal, cudaTextureObject_t texObject, int x); 
#line 214 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1Dfetch(int * retVal, cudaTextureObject_t texObject, int x); 
#line 216 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1Dfetch(int1 * retVal, cudaTextureObject_t texObject, int x); 
#line 218 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1Dfetch(int2 * retVal, cudaTextureObject_t texObject, int x); 
#line 220 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1Dfetch(int4 * retVal, cudaTextureObject_t texObject, int x); 
#line 222 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1Dfetch(unsigned * retVal, cudaTextureObject_t texObject, int x); 
#line 224 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1Dfetch(uint1 * retVal, cudaTextureObject_t texObject, int x); 
#line 226 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1Dfetch(uint2 * retVal, cudaTextureObject_t texObject, int x); 
#line 228 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1Dfetch(uint4 * retVal, cudaTextureObject_t texObject, int x); 
#line 238 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1Dfetch(long * retVal, cudaTextureObject_t texObject, int x); 
#line 240 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1Dfetch(long1 * retVal, cudaTextureObject_t texObject, int x); 
#line 242 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1Dfetch(long2 * retVal, cudaTextureObject_t texObject, int x); 
#line 244 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1Dfetch(long4 * retVal, cudaTextureObject_t texObject, int x); 
#line 246 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1Dfetch(unsigned long * retVal, cudaTextureObject_t texObject, int x); 
#line 248 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1Dfetch(ulong1 * retVal, cudaTextureObject_t texObject, int x); 
#line 250 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1Dfetch(ulong2 * retVal, cudaTextureObject_t texObject, int x); 
#line 252 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1Dfetch(ulong4 * retVal, cudaTextureObject_t texObject, int x); 
#line 263 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1Dfetch(float * retVal, cudaTextureObject_t texObject, int x); 
#line 265 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1Dfetch(float1 * retVal, cudaTextureObject_t texObject, int x); 
#line 267 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1Dfetch(float2 * retVal, cudaTextureObject_t texObject, int x); 
#line 269 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1Dfetch(float4 * retVal, cudaTextureObject_t texObject, int x); 
#line 277 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
template< class T> static __forceinline T 
#line 278 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
tex1Dfetch(::cudaTextureObject_t texObject, int x) 
#line 279 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;
#line 283 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
::exit(___);}











#line 296 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
#line 291 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1D(char * retVal, cudaTextureObject_t texObject, float x); 
#line 292 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1D(signed char * retVal, cudaTextureObject_t texObject, float x); 
#line 294 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1D(char1 * retVal, cudaTextureObject_t texObject, float x); 
#line 296 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1D(char2 * retVal, cudaTextureObject_t texObject, float x); 
#line 298 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1D(char4 * retVal, cudaTextureObject_t texObject, float x); 
#line 300 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1D(unsigned char * retVal, cudaTextureObject_t texObject, float x); 
#line 302 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1D(uchar1 * retVal, cudaTextureObject_t texObject, float x); 
#line 304 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1D(uchar2 * retVal, cudaTextureObject_t texObject, float x); 
#line 306 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1D(uchar4 * retVal, cudaTextureObject_t texObject, float x); 
#line 314 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1D(short * retVal, cudaTextureObject_t texObject, float x); 
#line 316 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1D(short1 * retVal, cudaTextureObject_t texObject, float x); 
#line 318 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1D(short2 * retVal, cudaTextureObject_t texObject, float x); 
#line 320 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1D(short4 * retVal, cudaTextureObject_t texObject, float x); 
#line 322 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1D(unsigned short * retVal, cudaTextureObject_t texObject, float x); 
#line 324 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1D(ushort1 * retVal, cudaTextureObject_t texObject, float x); 
#line 326 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1D(ushort2 * retVal, cudaTextureObject_t texObject, float x); 
#line 328 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1D(ushort4 * retVal, cudaTextureObject_t texObject, float x); 
#line 336 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1D(int * retVal, cudaTextureObject_t texObject, float x); 
#line 338 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1D(int1 * retVal, cudaTextureObject_t texObject, float x); 
#line 340 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1D(int2 * retVal, cudaTextureObject_t texObject, float x); 
#line 342 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1D(int4 * retVal, cudaTextureObject_t texObject, float x); 
#line 344 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1D(unsigned * retVal, cudaTextureObject_t texObject, float x); 
#line 346 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1D(uint1 * retVal, cudaTextureObject_t texObject, float x); 
#line 348 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1D(uint2 * retVal, cudaTextureObject_t texObject, float x); 
#line 350 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1D(uint4 * retVal, cudaTextureObject_t texObject, float x); 
#line 360 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1D(long * retVal, cudaTextureObject_t texObject, float x); 
#line 362 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1D(long1 * retVal, cudaTextureObject_t texObject, float x); 
#line 364 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1D(long2 * retVal, cudaTextureObject_t texObject, float x); 
#line 366 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1D(long4 * retVal, cudaTextureObject_t texObject, float x); 
#line 368 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1D(unsigned long * retVal, cudaTextureObject_t texObject, float x); 
#line 370 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1D(ulong1 * retVal, cudaTextureObject_t texObject, float x); 
#line 372 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1D(ulong2 * retVal, cudaTextureObject_t texObject, float x); 
#line 374 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1D(ulong4 * retVal, cudaTextureObject_t texObject, float x); 
#line 385 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1D(float * retVal, cudaTextureObject_t texObject, float x); 
#line 387 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1D(float1 * retVal, cudaTextureObject_t texObject, float x); 
#line 389 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1D(float2 * retVal, cudaTextureObject_t texObject, float x); 
#line 391 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1D(float4 * retVal, cudaTextureObject_t texObject, float x); 
#line 399 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
template< class T> static __forceinline T 
#line 400 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
tex1D(::cudaTextureObject_t texObject, float x) 
#line 401 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;
#line 405 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
::exit(___);}











#line 418 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
#line 413 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2D(char * retVal, cudaTextureObject_t texObject, float x, float y); 
#line 414 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2D(signed char * retVal, cudaTextureObject_t texObject, float x, float y); 
#line 416 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2D(char1 * retVal, cudaTextureObject_t texObject, float x, float y); 
#line 418 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2D(char2 * retVal, cudaTextureObject_t texObject, float x, float y); 
#line 420 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2D(char4 * retVal, cudaTextureObject_t texObject, float x, float y); 
#line 422 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2D(unsigned char * retVal, cudaTextureObject_t texObject, float x, float y); 
#line 424 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2D(uchar1 * retVal, cudaTextureObject_t texObject, float x, float y); 
#line 426 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2D(uchar2 * retVal, cudaTextureObject_t texObject, float x, float y); 
#line 428 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2D(uchar4 * retVal, cudaTextureObject_t texObject, float x, float y); 
#line 436 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2D(short * retVal, cudaTextureObject_t texObject, float x, float y); 
#line 438 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2D(short1 * retVal, cudaTextureObject_t texObject, float x, float y); 
#line 440 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2D(short2 * retVal, cudaTextureObject_t texObject, float x, float y); 
#line 442 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2D(short4 * retVal, cudaTextureObject_t texObject, float x, float y); 
#line 444 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2D(unsigned short * retVal, cudaTextureObject_t texObject, float x, float y); 
#line 446 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2D(ushort1 * retVal, cudaTextureObject_t texObject, float x, float y); 
#line 448 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2D(ushort2 * retVal, cudaTextureObject_t texObject, float x, float y); 
#line 450 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2D(ushort4 * retVal, cudaTextureObject_t texObject, float x, float y); 
#line 458 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2D(int * retVal, cudaTextureObject_t texObject, float x, float y); 
#line 460 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2D(int1 * retVal, cudaTextureObject_t texObject, float x, float y); 
#line 462 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2D(int2 * retVal, cudaTextureObject_t texObject, float x, float y); 
#line 464 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2D(int4 * retVal, cudaTextureObject_t texObject, float x, float y); 
#line 466 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2D(unsigned * retVal, cudaTextureObject_t texObject, float x, float y); 
#line 468 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2D(uint1 * retVal, cudaTextureObject_t texObject, float x, float y); 
#line 470 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2D(uint2 * retVal, cudaTextureObject_t texObject, float x, float y); 
#line 472 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2D(uint4 * retVal, cudaTextureObject_t texObject, float x, float y); 
#line 482 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2D(long * retVal, cudaTextureObject_t texObject, float x, float y); 
#line 484 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2D(long1 * retVal, cudaTextureObject_t texObject, float x, float y); 
#line 486 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2D(long2 * retVal, cudaTextureObject_t texObject, float x, float y); 
#line 488 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2D(long4 * retVal, cudaTextureObject_t texObject, float x, float y); 
#line 490 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2D(unsigned long * retVal, cudaTextureObject_t texObject, float x, float y); 
#line 492 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2D(ulong1 * retVal, cudaTextureObject_t texObject, float x, float y); 
#line 494 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2D(ulong2 * retVal, cudaTextureObject_t texObject, float x, float y); 
#line 496 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2D(ulong4 * retVal, cudaTextureObject_t texObject, float x, float y); 
#line 507 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2D(float * retVal, cudaTextureObject_t texObject, float x, float y); 
#line 509 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2D(float1 * retVal, cudaTextureObject_t texObject, float x, float y); 
#line 511 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2D(float2 * retVal, cudaTextureObject_t texObject, float x, float y); 
#line 513 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2D(float4 * retVal, cudaTextureObject_t texObject, float x, float y); 
#line 521 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
template< class T> static __forceinline T 
#line 522 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
tex2D(::cudaTextureObject_t texObject, float x, float y) 
#line 523 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;
#line 527 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
::exit(___);}











#line 540 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
#line 535 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3D(char * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 536 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3D(signed char * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 538 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3D(char1 * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 540 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3D(char2 * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 542 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3D(char4 * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 544 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3D(unsigned char * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 546 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3D(uchar1 * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 548 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3D(uchar2 * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 550 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3D(uchar4 * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 558 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3D(short * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 560 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3D(short1 * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 562 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3D(short2 * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 564 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3D(short4 * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 566 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3D(unsigned short * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 568 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3D(ushort1 * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 570 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3D(ushort2 * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 572 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3D(ushort4 * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 580 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3D(int * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 582 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3D(int1 * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 584 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3D(int2 * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 586 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3D(int4 * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 588 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3D(unsigned * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 590 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3D(uint1 * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 592 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3D(uint2 * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 594 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3D(uint4 * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 604 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3D(long * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 606 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3D(long1 * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 608 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3D(long2 * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 610 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3D(long4 * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 612 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3D(unsigned long * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 614 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3D(ulong1 * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 616 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3D(ulong2 * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 618 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3D(ulong4 * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 629 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3D(float * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 631 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3D(float1 * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 633 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3D(float2 * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 635 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3D(float4 * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 643 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
template< class T> static __forceinline T 
#line 644 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
tex3D(::cudaTextureObject_t texObject, float x, float y, float z) 
#line 645 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;(void)z;
#line 649 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
::exit(___);}











#line 662 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
#line 657 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayered(char * retVal, cudaTextureObject_t texObject, float x, int layer); 
#line 658 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayered(signed char * retVal, cudaTextureObject_t texObject, float x, int layer); 
#line 660 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayered(char1 * retVal, cudaTextureObject_t texObject, float x, int layer); 
#line 662 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayered(char2 * retVal, cudaTextureObject_t texObject, float x, int layer); 
#line 664 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayered(char4 * retVal, cudaTextureObject_t texObject, float x, int layer); 
#line 666 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayered(unsigned char * retVal, cudaTextureObject_t texObject, float x, int layer); 
#line 668 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayered(uchar1 * retVal, cudaTextureObject_t texObject, float x, int layer); 
#line 670 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayered(uchar2 * retVal, cudaTextureObject_t texObject, float x, int layer); 
#line 672 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayered(uchar4 * retVal, cudaTextureObject_t texObject, float x, int layer); 
#line 680 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayered(short * retVal, cudaTextureObject_t texObject, float x, int layer); 
#line 682 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayered(short1 * retVal, cudaTextureObject_t texObject, float x, int layer); 
#line 684 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayered(short2 * retVal, cudaTextureObject_t texObject, float x, int layer); 
#line 686 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayered(short4 * retVal, cudaTextureObject_t texObject, float x, int layer); 
#line 688 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayered(unsigned short * retVal, cudaTextureObject_t texObject, float x, int layer); 
#line 690 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayered(ushort1 * retVal, cudaTextureObject_t texObject, float x, int layer); 
#line 692 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayered(ushort2 * retVal, cudaTextureObject_t texObject, float x, int layer); 
#line 694 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayered(ushort4 * retVal, cudaTextureObject_t texObject, float x, int layer); 
#line 702 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayered(int * retVal, cudaTextureObject_t texObject, float x, int layer); 
#line 704 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayered(int1 * retVal, cudaTextureObject_t texObject, float x, int layer); 
#line 706 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayered(int2 * retVal, cudaTextureObject_t texObject, float x, int layer); 
#line 708 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayered(int4 * retVal, cudaTextureObject_t texObject, float x, int layer); 
#line 710 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayered(unsigned * retVal, cudaTextureObject_t texObject, float x, int layer); 
#line 712 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayered(uint1 * retVal, cudaTextureObject_t texObject, float x, int layer); 
#line 714 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayered(uint2 * retVal, cudaTextureObject_t texObject, float x, int layer); 
#line 716 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayered(uint4 * retVal, cudaTextureObject_t texObject, float x, int layer); 
#line 726 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayered(long * retVal, cudaTextureObject_t texObject, float x, int layer); 
#line 728 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayered(long1 * retVal, cudaTextureObject_t texObject, float x, int layer); 
#line 730 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayered(long2 * retVal, cudaTextureObject_t texObject, float x, int layer); 
#line 732 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayered(long4 * retVal, cudaTextureObject_t texObject, float x, int layer); 
#line 734 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayered(unsigned long * retVal, cudaTextureObject_t texObject, float x, int layer); 
#line 736 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayered(ulong1 * retVal, cudaTextureObject_t texObject, float x, int layer); 
#line 738 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayered(ulong2 * retVal, cudaTextureObject_t texObject, float x, int layer); 
#line 740 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayered(ulong4 * retVal, cudaTextureObject_t texObject, float x, int layer); 
#line 751 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayered(float * retVal, cudaTextureObject_t texObject, float x, int layer); 
#line 753 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayered(float1 * retVal, cudaTextureObject_t texObject, float x, int layer); 
#line 755 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayered(float2 * retVal, cudaTextureObject_t texObject, float x, int layer); 
#line 757 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayered(float4 * retVal, cudaTextureObject_t texObject, float x, int layer); 
#line 765 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
template< class T> static __forceinline T 
#line 766 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
tex1DLayered(::cudaTextureObject_t texObject, float x, int layer) 
#line 767 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;(void)layer;
#line 771 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
::exit(___);}











#line 784 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
#line 779 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayered(char * retVal, cudaTextureObject_t texObject, float x, float y, int layer); 
#line 780 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayered(signed char * retVal, cudaTextureObject_t texObject, float x, float y, int layer); 
#line 782 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayered(char1 * retVal, cudaTextureObject_t texObject, float x, float y, int layer); 
#line 784 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayered(char2 * retVal, cudaTextureObject_t texObject, float x, float y, int layer); 
#line 786 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayered(char4 * retVal, cudaTextureObject_t texObject, float x, float y, int layer); 
#line 788 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayered(unsigned char * retVal, cudaTextureObject_t texObject, float x, float y, int layer); 
#line 790 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayered(uchar1 * retVal, cudaTextureObject_t texObject, float x, float y, int layer); 
#line 792 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayered(uchar2 * retVal, cudaTextureObject_t texObject, float x, float y, int layer); 
#line 794 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayered(uchar4 * retVal, cudaTextureObject_t texObject, float x, float y, int layer); 
#line 802 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayered(short * retVal, cudaTextureObject_t texObject, float x, float y, int layer); 
#line 804 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayered(short1 * retVal, cudaTextureObject_t texObject, float x, float y, int layer); 
#line 806 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayered(short2 * retVal, cudaTextureObject_t texObject, float x, float y, int layer); 
#line 808 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayered(short4 * retVal, cudaTextureObject_t texObject, float x, float y, int layer); 
#line 810 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayered(unsigned short * retVal, cudaTextureObject_t texObject, float x, float y, int layer); 
#line 812 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayered(ushort1 * retVal, cudaTextureObject_t texObject, float x, float y, int layer); 
#line 814 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayered(ushort2 * retVal, cudaTextureObject_t texObject, float x, float y, int layer); 
#line 816 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayered(ushort4 * retVal, cudaTextureObject_t texObject, float x, float y, int layer); 
#line 824 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayered(int * retVal, cudaTextureObject_t texObject, float x, float y, int layer); 
#line 826 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayered(int1 * retVal, cudaTextureObject_t texObject, float x, float y, int layer); 
#line 828 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayered(int2 * retVal, cudaTextureObject_t texObject, float x, float y, int layer); 
#line 830 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayered(int4 * retVal, cudaTextureObject_t texObject, float x, float y, int layer); 
#line 832 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayered(unsigned * retVal, cudaTextureObject_t texObject, float x, float y, int layer); 
#line 834 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayered(uint1 * retVal, cudaTextureObject_t texObject, float x, float y, int layer); 
#line 836 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayered(uint2 * retVal, cudaTextureObject_t texObject, float x, float y, int layer); 
#line 838 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayered(uint4 * retVal, cudaTextureObject_t texObject, float x, float y, int layer); 
#line 848 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayered(long * retVal, cudaTextureObject_t texObject, float x, float y, int layer); 
#line 850 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayered(long1 * retVal, cudaTextureObject_t texObject, float x, float y, int layer); 
#line 852 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayered(long2 * retVal, cudaTextureObject_t texObject, float x, float y, int layer); 
#line 854 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayered(long4 * retVal, cudaTextureObject_t texObject, float x, float y, int layer); 
#line 856 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayered(unsigned long * retVal, cudaTextureObject_t texObject, float x, float y, int layer); 
#line 858 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayered(ulong1 * retVal, cudaTextureObject_t texObject, float x, float y, int layer); 
#line 860 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayered(ulong2 * retVal, cudaTextureObject_t texObject, float x, float y, int layer); 
#line 862 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayered(ulong4 * retVal, cudaTextureObject_t texObject, float x, float y, int layer); 
#line 873 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayered(float * retVal, cudaTextureObject_t texObject, float x, float y, int layer); 
#line 875 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayered(float1 * retVal, cudaTextureObject_t texObject, float x, float y, int layer); 
#line 877 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayered(float2 * retVal, cudaTextureObject_t texObject, float x, float y, int layer); 
#line 879 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayered(float4 * retVal, cudaTextureObject_t texObject, float x, float y, int layer); 
#line 887 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
template< class T> static __forceinline T 
#line 888 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
tex2DLayered(::cudaTextureObject_t texObject, float x, float y, int layer) 
#line 889 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;(void)layer;
#line 893 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
::exit(___);}











#line 906 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
#line 901 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemap(char * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 902 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemap(signed char * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 904 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemap(char1 * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 906 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemap(char2 * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 908 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemap(char4 * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 910 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemap(unsigned char * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 912 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemap(uchar1 * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 914 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemap(uchar2 * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 916 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemap(uchar4 * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 924 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemap(short * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 926 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemap(short1 * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 928 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemap(short2 * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 930 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemap(short4 * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 932 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemap(unsigned short * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 934 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemap(ushort1 * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 936 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemap(ushort2 * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 938 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemap(ushort4 * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 946 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemap(int * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 948 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemap(int1 * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 950 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemap(int2 * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 952 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemap(int4 * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 954 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemap(unsigned * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 956 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemap(uint1 * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 958 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemap(uint2 * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 960 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemap(uint4 * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 970 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemap(long * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 972 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemap(long1 * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 974 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemap(long2 * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 976 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemap(long4 * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 978 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemap(unsigned long * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 980 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemap(ulong1 * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 982 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemap(ulong2 * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 984 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemap(ulong4 * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 995 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemap(float * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 997 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemap(float1 * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 999 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemap(float2 * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 1001 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemap(float4 * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 1009 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
template< class T> static __forceinline T 
#line 1010 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
texCubemap(::cudaTextureObject_t texObject, float x, float y, float z) 
#line 1011 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;(void)z;
#line 1015 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
::exit(___);}











#line 1028 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
#line 1023 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayered(char * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer); 
#line 1024 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayered(signed char * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer); 
#line 1026 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayered(char1 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer); 
#line 1028 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayered(char2 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer); 
#line 1030 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayered(char4 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer); 
#line 1032 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayered(unsigned char * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer); 
#line 1034 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayered(uchar1 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer); 
#line 1036 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayered(uchar2 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer); 
#line 1038 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayered(uchar4 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer); 
#line 1046 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayered(short * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer); 
#line 1048 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayered(short1 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer); 
#line 1050 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayered(short2 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer); 
#line 1052 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayered(short4 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer); 
#line 1054 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayered(unsigned short * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer); 
#line 1056 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayered(ushort1 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer); 
#line 1058 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayered(ushort2 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer); 
#line 1060 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayered(ushort4 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer); 
#line 1068 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayered(int * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer); 
#line 1070 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayered(int1 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer); 
#line 1072 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayered(int2 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer); 
#line 1074 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayered(int4 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer); 
#line 1076 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayered(unsigned * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer); 
#line 1078 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayered(uint1 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer); 
#line 1080 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayered(uint2 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer); 
#line 1082 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayered(uint4 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer); 
#line 1092 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayered(long * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer); 
#line 1094 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayered(long1 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer); 
#line 1096 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayered(long2 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer); 
#line 1098 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayered(long4 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer); 
#line 1100 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayered(unsigned long * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer); 
#line 1102 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayered(ulong1 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer); 
#line 1104 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayered(ulong2 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer); 
#line 1106 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayered(ulong4 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer); 
#line 1117 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayered(float * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer); 
#line 1119 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayered(float1 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer); 
#line 1121 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayered(float2 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer); 
#line 1123 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayered(float4 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer); 
#line 1131 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
template< class T> static __forceinline T 
#line 1132 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
texCubemapLayered(::cudaTextureObject_t texObject, float x, float y, float z, int layer) 
#line 1133 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
#line 1137 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
::exit(___);}











#line 1150 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
#line 1145 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2Dgather(char * retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0); 
#line 1147 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2Dgather(signed char * retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0); 
#line 1149 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2Dgather(char1 * retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0); 
#line 1151 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2Dgather(char2 * retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0); 
#line 1153 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2Dgather(char4 * retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0); 
#line 1155 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2Dgather(unsigned char * retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0); 
#line 1157 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2Dgather(uchar1 * retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0); 
#line 1159 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2Dgather(uchar2 * retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0); 
#line 1161 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2Dgather(uchar4 * retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0); 
#line 1169 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2Dgather(short * retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0); 
#line 1171 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2Dgather(short1 * retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0); 
#line 1173 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2Dgather(short2 * retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0); 
#line 1175 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2Dgather(short4 * retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0); 
#line 1177 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2Dgather(unsigned short * retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0); 
#line 1179 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2Dgather(ushort1 * retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0); 
#line 1181 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2Dgather(ushort2 * retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0); 
#line 1183 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2Dgather(ushort4 * retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0); 
#line 1191 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2Dgather(int * retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0); 
#line 1193 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2Dgather(int1 * retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0); 
#line 1195 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2Dgather(int2 * retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0); 
#line 1197 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2Dgather(int4 * retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0); 
#line 1199 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2Dgather(unsigned * retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0); 
#line 1201 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2Dgather(uint1 * retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0); 
#line 1203 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2Dgather(uint2 * retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0); 
#line 1205 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2Dgather(uint4 * retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0); 
#line 1213 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2Dgather(long * retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0); 
#line 1215 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2Dgather(long1 * retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0); 
#line 1217 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2Dgather(long2 * retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0); 
#line 1219 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2Dgather(long4 * retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0); 
#line 1221 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2Dgather(unsigned long * retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0); 
#line 1223 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2Dgather(ulong1 * retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0); 
#line 1225 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2Dgather(ulong2 * retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0); 
#line 1227 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2Dgather(ulong4 * retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0); 
#line 1235 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2Dgather(float * retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0); 
#line 1237 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2Dgather(float1 * retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0); 
#line 1239 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2Dgather(float2 * retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0); 
#line 1241 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2Dgather(float4 * retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0); 
#line 1249 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
template< class T> static __forceinline T 
#line 1250 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
tex2Dgather(::cudaTextureObject_t to, float x, float y, int comp = 0) 
#line 1251 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)to;(void)x;(void)y;(void)comp;
#line 1255 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
::exit(___);}











#line 1268 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
#line 1263 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLod(char * retVal, cudaTextureObject_t texObject, float x, float level); 
#line 1264 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLod(signed char * retVal, cudaTextureObject_t texObject, float x, float level); 
#line 1266 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLod(char1 * retVal, cudaTextureObject_t texObject, float x, float level); 
#line 1268 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLod(char2 * retVal, cudaTextureObject_t texObject, float x, float level); 
#line 1270 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLod(char4 * retVal, cudaTextureObject_t texObject, float x, float level); 
#line 1272 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLod(unsigned char * retVal, cudaTextureObject_t texObject, float x, float level); 
#line 1274 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLod(uchar1 * retVal, cudaTextureObject_t texObject, float x, float level); 
#line 1276 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLod(uchar2 * retVal, cudaTextureObject_t texObject, float x, float level); 
#line 1278 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLod(uchar4 * retVal, cudaTextureObject_t texObject, float x, float level); 
#line 1286 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLod(short * retVal, cudaTextureObject_t texObject, float x, float level); 
#line 1288 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLod(short1 * retVal, cudaTextureObject_t texObject, float x, float level); 
#line 1290 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLod(short2 * retVal, cudaTextureObject_t texObject, float x, float level); 
#line 1292 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLod(short4 * retVal, cudaTextureObject_t texObject, float x, float level); 
#line 1294 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLod(unsigned short * retVal, cudaTextureObject_t texObject, float x, float level); 
#line 1296 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLod(ushort1 * retVal, cudaTextureObject_t texObject, float x, float level); 
#line 1298 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLod(ushort2 * retVal, cudaTextureObject_t texObject, float x, float level); 
#line 1300 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLod(ushort4 * retVal, cudaTextureObject_t texObject, float x, float level); 
#line 1308 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLod(int * retVal, cudaTextureObject_t texObject, float x, float level); 
#line 1310 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLod(int1 * retVal, cudaTextureObject_t texObject, float x, float level); 
#line 1312 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLod(int2 * retVal, cudaTextureObject_t texObject, float x, float level); 
#line 1314 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLod(int4 * retVal, cudaTextureObject_t texObject, float x, float level); 
#line 1316 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLod(unsigned * retVal, cudaTextureObject_t texObject, float x, float level); 
#line 1318 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLod(uint1 * retVal, cudaTextureObject_t texObject, float x, float level); 
#line 1320 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLod(uint2 * retVal, cudaTextureObject_t texObject, float x, float level); 
#line 1322 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLod(uint4 * retVal, cudaTextureObject_t texObject, float x, float level); 
#line 1332 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLod(long * retVal, cudaTextureObject_t texObject, float x, float level); 
#line 1334 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLod(long1 * retVal, cudaTextureObject_t texObject, float x, float level); 
#line 1336 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLod(long2 * retVal, cudaTextureObject_t texObject, float x, float level); 
#line 1338 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLod(long4 * retVal, cudaTextureObject_t texObject, float x, float level); 
#line 1340 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLod(unsigned long * retVal, cudaTextureObject_t texObject, float x, float level); 
#line 1342 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLod(ulong1 * retVal, cudaTextureObject_t texObject, float x, float level); 
#line 1344 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLod(ulong2 * retVal, cudaTextureObject_t texObject, float x, float level); 
#line 1346 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLod(ulong4 * retVal, cudaTextureObject_t texObject, float x, float level); 
#line 1357 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLod(float * retVal, cudaTextureObject_t texObject, float x, float level); 
#line 1359 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLod(float1 * retVal, cudaTextureObject_t texObject, float x, float level); 
#line 1361 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLod(float2 * retVal, cudaTextureObject_t texObject, float x, float level); 
#line 1363 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLod(float4 * retVal, cudaTextureObject_t texObject, float x, float level); 
#line 1371 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
template< class T> static __forceinline T 
#line 1372 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
tex1DLod(::cudaTextureObject_t texObject, float x, float level) 
#line 1373 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;(void)level;
#line 1377 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
::exit(___);}











#line 1390 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
#line 1385 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLod(char * retVal, cudaTextureObject_t texObject, float x, float y, float level); 
#line 1386 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLod(signed char * retVal, cudaTextureObject_t texObject, float x, float y, float level); 
#line 1388 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLod(char1 * retVal, cudaTextureObject_t texObject, float x, float y, float level); 
#line 1390 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLod(char2 * retVal, cudaTextureObject_t texObject, float x, float y, float level); 
#line 1392 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLod(char4 * retVal, cudaTextureObject_t texObject, float x, float y, float level); 
#line 1394 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLod(unsigned char * retVal, cudaTextureObject_t texObject, float x, float y, float level); 
#line 1396 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLod(uchar1 * retVal, cudaTextureObject_t texObject, float x, float y, float level); 
#line 1398 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLod(uchar2 * retVal, cudaTextureObject_t texObject, float x, float y, float level); 
#line 1400 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLod(uchar4 * retVal, cudaTextureObject_t texObject, float x, float y, float level); 
#line 1408 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLod(short * retVal, cudaTextureObject_t texObject, float x, float y, float level); 
#line 1410 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLod(short1 * retVal, cudaTextureObject_t texObject, float x, float y, float level); 
#line 1412 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLod(short2 * retVal, cudaTextureObject_t texObject, float x, float y, float level); 
#line 1414 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLod(short4 * retVal, cudaTextureObject_t texObject, float x, float y, float level); 
#line 1416 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLod(unsigned short * retVal, cudaTextureObject_t texObject, float x, float y, float level); 
#line 1418 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLod(ushort1 * retVal, cudaTextureObject_t texObject, float x, float y, float level); 
#line 1420 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLod(ushort2 * retVal, cudaTextureObject_t texObject, float x, float y, float level); 
#line 1422 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLod(ushort4 * retVal, cudaTextureObject_t texObject, float x, float y, float level); 
#line 1430 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLod(int * retVal, cudaTextureObject_t texObject, float x, float y, float level); 
#line 1432 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLod(int1 * retVal, cudaTextureObject_t texObject, float x, float y, float level); 
#line 1434 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLod(int2 * retVal, cudaTextureObject_t texObject, float x, float y, float level); 
#line 1436 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLod(int4 * retVal, cudaTextureObject_t texObject, float x, float y, float level); 
#line 1438 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLod(unsigned * retVal, cudaTextureObject_t texObject, float x, float y, float level); 
#line 1440 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLod(uint1 * retVal, cudaTextureObject_t texObject, float x, float y, float level); 
#line 1442 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLod(uint2 * retVal, cudaTextureObject_t texObject, float x, float y, float level); 
#line 1444 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLod(uint4 * retVal, cudaTextureObject_t texObject, float x, float y, float level); 
#line 1454 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLod(long * retVal, cudaTextureObject_t texObject, float x, float y, float level); 
#line 1456 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLod(long1 * retVal, cudaTextureObject_t texObject, float x, float y, float level); 
#line 1458 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLod(long2 * retVal, cudaTextureObject_t texObject, float x, float y, float level); 
#line 1460 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLod(long4 * retVal, cudaTextureObject_t texObject, float x, float y, float level); 
#line 1462 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLod(unsigned long * retVal, cudaTextureObject_t texObject, float x, float y, float level); 
#line 1464 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLod(ulong1 * retVal, cudaTextureObject_t texObject, float x, float y, float level); 
#line 1466 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLod(ulong2 * retVal, cudaTextureObject_t texObject, float x, float y, float level); 
#line 1468 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLod(ulong4 * retVal, cudaTextureObject_t texObject, float x, float y, float level); 
#line 1479 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLod(float * retVal, cudaTextureObject_t texObject, float x, float y, float level); 
#line 1481 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLod(float1 * retVal, cudaTextureObject_t texObject, float x, float y, float level); 
#line 1483 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLod(float2 * retVal, cudaTextureObject_t texObject, float x, float y, float level); 
#line 1485 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLod(float4 * retVal, cudaTextureObject_t texObject, float x, float y, float level); 
#line 1493 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
template< class T> static __forceinline T 
#line 1494 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
tex2DLod(::cudaTextureObject_t texObject, float x, float y, float level) 
#line 1495 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;(void)level;
#line 1499 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
::exit(___);}











#line 1512 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
#line 1507 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3DLod(char * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1508 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3DLod(signed char * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1510 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3DLod(char1 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1512 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3DLod(char2 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1514 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3DLod(char4 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1516 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3DLod(unsigned char * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1518 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3DLod(uchar1 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1520 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3DLod(uchar2 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1522 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3DLod(uchar4 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1530 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3DLod(short * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1532 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3DLod(short1 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1534 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3DLod(short2 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1536 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3DLod(short4 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1538 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3DLod(unsigned short * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1540 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3DLod(ushort1 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1542 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3DLod(ushort2 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1544 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3DLod(ushort4 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1552 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3DLod(int * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1554 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3DLod(int1 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1556 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3DLod(int2 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1558 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3DLod(int4 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1560 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3DLod(unsigned * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1562 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3DLod(uint1 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1564 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3DLod(uint2 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1566 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3DLod(uint4 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1576 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3DLod(long * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1578 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3DLod(long1 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1580 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3DLod(long2 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1582 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3DLod(long4 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1584 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3DLod(unsigned long * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1586 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3DLod(ulong1 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1588 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3DLod(ulong2 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1590 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3DLod(ulong4 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1601 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3DLod(float * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1603 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3DLod(float1 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1605 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3DLod(float2 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1607 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3DLod(float4 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1615 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
template< class T> static __forceinline T 
#line 1616 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
tex3DLod(::cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 1617 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 1621 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
::exit(___);}











#line 1634 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
#line 1629 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredLod(char * retVal, cudaTextureObject_t texObject, float x, int layer, float level); 
#line 1630 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredLod(signed char * retVal, cudaTextureObject_t texObject, float x, int layer, float level); 
#line 1632 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredLod(char1 * retVal, cudaTextureObject_t texObject, float x, int layer, float level); 
#line 1634 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredLod(char2 * retVal, cudaTextureObject_t texObject, float x, int layer, float level); 
#line 1636 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredLod(char4 * retVal, cudaTextureObject_t texObject, float x, int layer, float level); 
#line 1638 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredLod(unsigned char * retVal, cudaTextureObject_t texObject, float x, int layer, float level); 
#line 1640 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredLod(uchar1 * retVal, cudaTextureObject_t texObject, float x, int layer, float level); 
#line 1642 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredLod(uchar2 * retVal, cudaTextureObject_t texObject, float x, int layer, float level); 
#line 1644 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredLod(uchar4 * retVal, cudaTextureObject_t texObject, float x, int layer, float level); 
#line 1652 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredLod(short * retVal, cudaTextureObject_t texObject, float x, int layer, float level); 
#line 1654 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredLod(short1 * retVal, cudaTextureObject_t texObject, float x, int layer, float level); 
#line 1656 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredLod(short2 * retVal, cudaTextureObject_t texObject, float x, int layer, float level); 
#line 1658 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredLod(short4 * retVal, cudaTextureObject_t texObject, float x, int layer, float level); 
#line 1660 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredLod(unsigned short * retVal, cudaTextureObject_t texObject, float x, int layer, float level); 
#line 1662 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredLod(ushort1 * retVal, cudaTextureObject_t texObject, float x, int layer, float level); 
#line 1664 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredLod(ushort2 * retVal, cudaTextureObject_t texObject, float x, int layer, float level); 
#line 1666 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredLod(ushort4 * retVal, cudaTextureObject_t texObject, float x, int layer, float level); 
#line 1674 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredLod(int * retVal, cudaTextureObject_t texObject, float x, int layer, float level); 
#line 1676 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredLod(int1 * retVal, cudaTextureObject_t texObject, float x, int layer, float level); 
#line 1678 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredLod(int2 * retVal, cudaTextureObject_t texObject, float x, int layer, float level); 
#line 1680 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredLod(int4 * retVal, cudaTextureObject_t texObject, float x, int layer, float level); 
#line 1682 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredLod(unsigned * retVal, cudaTextureObject_t texObject, float x, int layer, float level); 
#line 1684 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredLod(uint1 * retVal, cudaTextureObject_t texObject, float x, int layer, float level); 
#line 1686 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredLod(uint2 * retVal, cudaTextureObject_t texObject, float x, int layer, float level); 
#line 1688 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredLod(uint4 * retVal, cudaTextureObject_t texObject, float x, int layer, float level); 
#line 1698 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredLod(long * retVal, cudaTextureObject_t texObject, float x, int layer, float level); 
#line 1700 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredLod(long1 * retVal, cudaTextureObject_t texObject, float x, int layer, float level); 
#line 1702 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredLod(long2 * retVal, cudaTextureObject_t texObject, float x, int layer, float level); 
#line 1704 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredLod(long4 * retVal, cudaTextureObject_t texObject, float x, int layer, float level); 
#line 1706 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredLod(unsigned long * retVal, cudaTextureObject_t texObject, float x, int layer, float level); 
#line 1708 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredLod(ulong1 * retVal, cudaTextureObject_t texObject, float x, int layer, float level); 
#line 1710 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredLod(ulong2 * retVal, cudaTextureObject_t texObject, float x, int layer, float level); 
#line 1712 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredLod(ulong4 * retVal, cudaTextureObject_t texObject, float x, int layer, float level); 
#line 1723 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredLod(float * retVal, cudaTextureObject_t texObject, float x, int layer, float level); 
#line 1725 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredLod(float1 * retVal, cudaTextureObject_t texObject, float x, int layer, float level); 
#line 1727 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredLod(float2 * retVal, cudaTextureObject_t texObject, float x, int layer, float level); 
#line 1729 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredLod(float4 * retVal, cudaTextureObject_t texObject, float x, int layer, float level); 
#line 1737 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
template< class T> static __forceinline T 
#line 1738 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
tex1DLayeredLod(::cudaTextureObject_t texObject, float x, int layer, float level) 
#line 1739 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;(void)layer;(void)level;
#line 1743 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
::exit(___);}











#line 1756 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
#line 1751 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredLod(char * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level); 
#line 1752 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredLod(signed char * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level); 
#line 1754 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredLod(char1 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level); 
#line 1756 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredLod(char2 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level); 
#line 1758 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredLod(char4 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level); 
#line 1760 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredLod(unsigned char * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level); 
#line 1762 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredLod(uchar1 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level); 
#line 1764 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredLod(uchar2 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level); 
#line 1766 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredLod(uchar4 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level); 
#line 1774 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredLod(short * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level); 
#line 1776 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredLod(short1 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level); 
#line 1778 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredLod(short2 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level); 
#line 1780 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredLod(short4 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level); 
#line 1782 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredLod(unsigned short * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level); 
#line 1784 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredLod(ushort1 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level); 
#line 1786 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredLod(ushort2 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level); 
#line 1788 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredLod(ushort4 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level); 
#line 1796 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredLod(int * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level); 
#line 1798 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredLod(int1 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level); 
#line 1800 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredLod(int2 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level); 
#line 1802 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredLod(int4 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level); 
#line 1804 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredLod(unsigned * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level); 
#line 1806 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredLod(uint1 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level); 
#line 1808 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredLod(uint2 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level); 
#line 1810 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredLod(uint4 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level); 
#line 1820 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredLod(long * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level); 
#line 1822 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredLod(long1 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level); 
#line 1824 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredLod(long2 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level); 
#line 1826 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredLod(long4 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level); 
#line 1828 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredLod(unsigned long * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level); 
#line 1830 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredLod(ulong1 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level); 
#line 1832 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredLod(ulong2 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level); 
#line 1834 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredLod(ulong4 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level); 
#line 1845 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredLod(float * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level); 
#line 1847 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredLod(float1 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level); 
#line 1849 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredLod(float2 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level); 
#line 1851 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredLod(float4 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level); 
#line 1859 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
template< class T> static __forceinline T 
#line 1860 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
tex2DLayeredLod(::cudaTextureObject_t texObject, float x, float y, int layer, float level) 
#line 1861 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
#line 1865 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
::exit(___);}











#line 1878 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
#line 1873 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLod(char * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1874 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLod(signed char * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1876 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLod(char1 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1878 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLod(char2 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1880 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLod(char4 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1882 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLod(unsigned char * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1884 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLod(uchar1 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1886 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLod(uchar2 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1888 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLod(uchar4 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1896 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLod(short * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1898 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLod(short1 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1900 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLod(short2 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1902 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLod(short4 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1904 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLod(unsigned short * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1906 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLod(ushort1 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1908 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLod(ushort2 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1910 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLod(ushort4 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1918 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLod(int * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1920 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLod(int1 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1922 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLod(int2 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1924 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLod(int4 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1926 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLod(unsigned * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1928 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLod(uint1 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1930 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLod(uint2 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1932 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLod(uint4 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1942 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLod(long * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1944 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLod(long1 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1946 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLod(long2 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1948 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLod(long4 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1950 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLod(unsigned long * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1952 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLod(ulong1 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1954 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLod(ulong2 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1956 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLod(ulong4 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1967 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLod(float * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1969 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLod(float1 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1971 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLod(float2 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1973 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLod(float4 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1981 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
template< class T> static __forceinline T 
#line 1982 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
texCubemapLod(::cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 1983 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 1987 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
::exit(___);}











#line 2000 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
#line 1995 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayeredLod(char * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level); 
#line 1996 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayeredLod(signed char * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level); 
#line 1998 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayeredLod(char1 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level); 
#line 2000 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayeredLod(char2 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level); 
#line 2002 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayeredLod(char4 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level); 
#line 2004 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayeredLod(unsigned char * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level); 
#line 2006 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayeredLod(uchar1 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level); 
#line 2008 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayeredLod(uchar2 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level); 
#line 2010 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayeredLod(uchar4 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level); 
#line 2018 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayeredLod(short * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level); 
#line 2020 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayeredLod(short1 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level); 
#line 2022 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayeredLod(short2 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level); 
#line 2024 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayeredLod(short4 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level); 
#line 2026 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayeredLod(unsigned short * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level); 
#line 2028 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayeredLod(ushort1 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level); 
#line 2030 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayeredLod(ushort2 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level); 
#line 2032 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayeredLod(ushort4 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level); 
#line 2040 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayeredLod(int * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level); 
#line 2042 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayeredLod(int1 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level); 
#line 2044 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayeredLod(int2 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level); 
#line 2046 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayeredLod(int4 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level); 
#line 2048 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayeredLod(unsigned * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level); 
#line 2050 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayeredLod(uint1 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level); 
#line 2052 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayeredLod(uint2 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level); 
#line 2054 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayeredLod(uint4 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level); 
#line 2064 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayeredLod(long * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level); 
#line 2066 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayeredLod(long1 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level); 
#line 2068 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayeredLod(long2 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level); 
#line 2070 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayeredLod(long4 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level); 
#line 2072 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayeredLod(unsigned long * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level); 
#line 2074 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayeredLod(ulong1 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level); 
#line 2076 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayeredLod(ulong2 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level); 
#line 2078 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayeredLod(ulong4 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level); 
#line 2089 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayeredLod(float * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level); 
#line 2091 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayeredLod(float1 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level); 
#line 2093 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayeredLod(float2 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level); 
#line 2095 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayeredLod(float4 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level); 
#line 2103 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
template< class T> static __forceinline T 
#line 2104 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
texCubemapLayeredLod(::cudaTextureObject_t texObject, float x, float y, float z, int layer, float level) 
#line 2105 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 2109 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
::exit(___);}











#line 2122 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
#line 2117 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DGrad(char * retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy); 
#line 2118 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DGrad(signed char * retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy); 
#line 2120 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DGrad(char1 * retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy); 
#line 2122 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DGrad(char2 * retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy); 
#line 2124 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DGrad(char4 * retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy); 
#line 2126 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DGrad(unsigned char * retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy); 
#line 2128 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DGrad(uchar1 * retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy); 
#line 2130 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DGrad(uchar2 * retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy); 
#line 2132 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DGrad(uchar4 * retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy); 
#line 2140 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DGrad(short * retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy); 
#line 2142 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DGrad(short1 * retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy); 
#line 2144 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DGrad(short2 * retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy); 
#line 2146 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DGrad(short4 * retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy); 
#line 2148 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DGrad(unsigned short * retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy); 
#line 2150 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DGrad(ushort1 * retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy); 
#line 2152 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DGrad(ushort2 * retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy); 
#line 2154 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DGrad(ushort4 * retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy); 
#line 2162 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DGrad(int * retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy); 
#line 2164 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DGrad(int1 * retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy); 
#line 2166 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DGrad(int2 * retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy); 
#line 2168 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DGrad(int4 * retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy); 
#line 2170 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DGrad(unsigned * retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy); 
#line 2172 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DGrad(uint1 * retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy); 
#line 2174 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DGrad(uint2 * retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy); 
#line 2176 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DGrad(uint4 * retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy); 
#line 2186 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DGrad(long * retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy); 
#line 2188 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DGrad(long1 * retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy); 
#line 2190 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DGrad(long2 * retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy); 
#line 2192 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DGrad(long4 * retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy); 
#line 2194 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DGrad(unsigned long * retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy); 
#line 2196 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DGrad(ulong1 * retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy); 
#line 2198 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DGrad(ulong2 * retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy); 
#line 2200 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DGrad(ulong4 * retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy); 
#line 2211 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DGrad(float * retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy); 
#line 2213 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DGrad(float1 * retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy); 
#line 2215 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DGrad(float2 * retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy); 
#line 2217 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DGrad(float4 * retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy); 
#line 2225 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
template< class T> static __forceinline T 
#line 2226 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
tex1DGrad(::cudaTextureObject_t texObject, float x, float dPdx, float dPdy) 
#line 2227 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
#line 2231 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
::exit(___);}











#line 2244 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
#line 2239 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DGrad(char * retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy); 
#line 2240 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DGrad(signed char * retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy); 
#line 2242 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DGrad(char1 * retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy); 
#line 2244 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DGrad(char2 * retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy); 
#line 2246 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DGrad(char4 * retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy); 
#line 2248 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DGrad(unsigned char * retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy); 
#line 2250 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DGrad(uchar1 * retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy); 
#line 2252 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DGrad(uchar2 * retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy); 
#line 2254 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DGrad(uchar4 * retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy); 
#line 2262 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DGrad(short * retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy); 
#line 2264 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DGrad(short1 * retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy); 
#line 2266 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DGrad(short2 * retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy); 
#line 2268 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DGrad(short4 * retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy); 
#line 2270 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DGrad(unsigned short * retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy); 
#line 2272 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DGrad(ushort1 * retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy); 
#line 2274 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DGrad(ushort2 * retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy); 
#line 2276 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DGrad(ushort4 * retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy); 
#line 2284 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DGrad(int * retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy); 
#line 2286 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DGrad(int1 * retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy); 
#line 2288 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DGrad(int2 * retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy); 
#line 2290 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DGrad(int4 * retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy); 
#line 2292 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DGrad(unsigned * retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy); 
#line 2294 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DGrad(uint1 * retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy); 
#line 2296 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DGrad(uint2 * retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy); 
#line 2298 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DGrad(uint4 * retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy); 
#line 2308 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DGrad(long * retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy); 
#line 2310 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DGrad(long1 * retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy); 
#line 2312 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DGrad(long2 * retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy); 
#line 2314 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DGrad(long4 * retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy); 
#line 2316 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DGrad(unsigned long * retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy); 
#line 2318 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DGrad(ulong1 * retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy); 
#line 2320 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DGrad(ulong2 * retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy); 
#line 2322 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DGrad(ulong4 * retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy); 
#line 2333 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DGrad(float * retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy); 
#line 2335 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DGrad(float1 * retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy); 
#line 2337 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DGrad(float2 * retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy); 
#line 2339 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DGrad(float4 * retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy); 
#line 2347 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
template< class T> static __forceinline T 
#line 2348 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
tex2DGrad(::cudaTextureObject_t texObject, float x, float y, ::float2 dPdx, ::float2 dPdy) 
#line 2349 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 2353 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
::exit(___);}











#line 2366 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
#line 2361 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3DGrad(char * retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 2362 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3DGrad(signed char * retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 2364 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3DGrad(char1 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 2366 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3DGrad(char2 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 2368 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3DGrad(char4 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 2370 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3DGrad(unsigned char * retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 2372 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3DGrad(uchar1 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 2374 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3DGrad(uchar2 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 2376 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3DGrad(uchar4 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 2384 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3DGrad(short * retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 2386 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3DGrad(short1 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 2388 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3DGrad(short2 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 2390 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3DGrad(short4 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 2392 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3DGrad(unsigned short * retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 2394 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3DGrad(ushort1 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 2396 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3DGrad(ushort2 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 2398 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3DGrad(ushort4 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 2406 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3DGrad(int * retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 2408 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3DGrad(int1 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 2410 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3DGrad(int2 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 2412 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3DGrad(int4 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 2414 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3DGrad(unsigned * retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 2416 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3DGrad(uint1 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 2418 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3DGrad(uint2 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 2420 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3DGrad(uint4 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 2430 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3DGrad(long * retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 2432 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3DGrad(long1 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 2434 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3DGrad(long2 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 2436 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3DGrad(long4 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 2438 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3DGrad(unsigned long * retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 2440 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3DGrad(ulong1 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 2442 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3DGrad(ulong2 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 2444 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3DGrad(ulong4 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 2455 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3DGrad(float * retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 2457 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3DGrad(float1 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 2459 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3DGrad(float2 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 2461 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3DGrad(float4 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 2469 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
template< class T> static __forceinline T 
#line 2470 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
tex3DGrad(::cudaTextureObject_t texObject, float x, float y, float z, ::float4 dPdx, ::float4 dPdy) 
#line 2471 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 2475 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
::exit(___);}











#line 2488 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
#line 2483 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredGrad(char * retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy); 
#line 2484 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredGrad(signed char * retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy); 
#line 2486 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredGrad(char1 * retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy); 
#line 2488 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredGrad(char2 * retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy); 
#line 2490 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredGrad(char4 * retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy); 
#line 2492 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredGrad(unsigned char * retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy); 
#line 2494 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredGrad(uchar1 * retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy); 
#line 2496 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredGrad(uchar2 * retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy); 
#line 2498 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredGrad(uchar4 * retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy); 
#line 2506 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredGrad(short * retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy); 
#line 2508 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredGrad(short1 * retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy); 
#line 2510 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredGrad(short2 * retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy); 
#line 2512 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredGrad(short4 * retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy); 
#line 2514 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredGrad(unsigned short * retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy); 
#line 2516 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredGrad(ushort1 * retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy); 
#line 2518 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredGrad(ushort2 * retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy); 
#line 2520 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredGrad(ushort4 * retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy); 
#line 2528 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredGrad(int * retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy); 
#line 2530 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredGrad(int1 * retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy); 
#line 2532 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredGrad(int2 * retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy); 
#line 2534 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredGrad(int4 * retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy); 
#line 2536 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredGrad(unsigned * retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy); 
#line 2538 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredGrad(uint1 * retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy); 
#line 2540 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredGrad(uint2 * retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy); 
#line 2542 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredGrad(uint4 * retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy); 
#line 2552 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredGrad(long * retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy); 
#line 2554 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredGrad(long1 * retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy); 
#line 2556 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredGrad(long2 * retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy); 
#line 2558 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredGrad(long4 * retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy); 
#line 2560 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredGrad(unsigned long * retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy); 
#line 2562 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredGrad(ulong1 * retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy); 
#line 2564 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredGrad(ulong2 * retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy); 
#line 2566 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredGrad(ulong4 * retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy); 
#line 2577 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredGrad(float * retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy); 
#line 2579 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredGrad(float1 * retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy); 
#line 2581 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredGrad(float2 * retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy); 
#line 2583 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredGrad(float4 * retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy); 
#line 2591 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
template< class T> static __forceinline T 
#line 2592 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
tex1DLayeredGrad(::cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy) 
#line 2593 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 2597 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
::exit(___);}











#line 2610 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
#line 2605 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredGrad(char * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 2606 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredGrad(signed char * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 2608 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredGrad(char1 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 2610 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredGrad(char2 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 2612 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredGrad(char4 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 2614 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredGrad(unsigned char * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 2616 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredGrad(uchar1 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 2618 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredGrad(uchar2 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 2620 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredGrad(uchar4 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 2628 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredGrad(short * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 2630 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredGrad(short1 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 2632 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredGrad(short2 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 2634 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredGrad(short4 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 2636 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredGrad(unsigned short * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 2638 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredGrad(ushort1 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 2640 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredGrad(ushort2 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 2642 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredGrad(ushort4 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 2650 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredGrad(int * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 2652 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredGrad(int1 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 2654 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredGrad(int2 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 2656 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredGrad(int4 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 2658 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredGrad(unsigned * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 2660 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredGrad(uint1 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 2662 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredGrad(uint2 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 2664 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredGrad(uint4 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 2674 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredGrad(long * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 2676 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredGrad(long1 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 2678 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredGrad(long2 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 2680 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredGrad(long4 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 2682 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredGrad(unsigned long * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 2684 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredGrad(ulong1 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 2686 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredGrad(ulong2 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 2688 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredGrad(ulong4 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 2699 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredGrad(float * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 2701 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredGrad(float1 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 2703 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredGrad(float2 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 2705 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredGrad(float4 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 2713 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
template< class T> static __forceinline T 
#line 2714 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
tex2DLayeredGrad(::cudaTextureObject_t texObject, float x, float y, int layer, ::float2 dPdx, ::float2 dPdy) 
#line 2715 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 2719 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
::exit(___);}











#line 2732 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.h"
#line 75 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1Dfetch(char *retVal, cudaTextureObject_t texObject, int x) 
#line 76 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 85 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 98 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 86 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1Dfetch(signed char *retVal, cudaTextureObject_t texObject, int x) 
#line 87 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 91 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 104 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 93 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1Dfetch(char1 *retVal, cudaTextureObject_t texObject, int x) 
#line 94 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 98 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 111 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 100 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1Dfetch(char2 *retVal, cudaTextureObject_t texObject, int x) 
#line 101 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 105 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 118 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 107 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1Dfetch(char4 *retVal, cudaTextureObject_t texObject, int x) 
#line 108 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 112 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 125 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 114 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1Dfetch(unsigned char *retVal, cudaTextureObject_t texObject, int x) 
#line 115 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 119 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 132 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 121 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1Dfetch(uchar1 *retVal, cudaTextureObject_t texObject, int x) 
#line 122 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 126 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 139 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 128 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1Dfetch(uchar2 *retVal, cudaTextureObject_t texObject, int x) 
#line 129 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 133 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 146 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 135 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1Dfetch(uchar4 *retVal, cudaTextureObject_t texObject, int x) 
#line 136 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 140 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 153 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 148 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1Dfetch(short *retVal, cudaTextureObject_t texObject, int x) 
#line 149 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 153 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 166 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 155 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1Dfetch(short1 *retVal, cudaTextureObject_t texObject, int x) 
#line 156 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 160 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 173 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 162 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1Dfetch(short2 *retVal, cudaTextureObject_t texObject, int x) 
#line 163 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 167 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 180 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 169 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1Dfetch(short4 *retVal, cudaTextureObject_t texObject, int x) 
#line 170 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 174 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 187 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 176 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1Dfetch(unsigned short *retVal, cudaTextureObject_t texObject, int x) 
#line 177 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 181 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 194 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 183 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1Dfetch(ushort1 *retVal, cudaTextureObject_t texObject, int x) 
#line 184 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 188 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 201 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 190 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1Dfetch(ushort2 *retVal, cudaTextureObject_t texObject, int x) 
#line 191 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 195 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 208 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 197 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1Dfetch(ushort4 *retVal, cudaTextureObject_t texObject, int x) 
#line 198 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 202 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 215 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 210 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1Dfetch(int *retVal, cudaTextureObject_t texObject, int x) 
#line 211 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 215 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 228 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 217 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1Dfetch(int1 *retVal, cudaTextureObject_t texObject, int x) 
#line 218 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 222 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 235 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 224 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1Dfetch(int2 *retVal, cudaTextureObject_t texObject, int x) 
#line 225 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 229 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 242 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 231 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1Dfetch(int4 *retVal, cudaTextureObject_t texObject, int x) 
#line 232 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 236 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 249 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 238 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1Dfetch(unsigned *retVal, cudaTextureObject_t texObject, int x) 
#line 239 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 243 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 256 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 245 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1Dfetch(uint1 *retVal, cudaTextureObject_t texObject, int x) 
#line 246 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 250 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 263 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 252 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1Dfetch(uint2 *retVal, cudaTextureObject_t texObject, int x) 
#line 253 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 257 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 270 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 259 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1Dfetch(uint4 *retVal, cudaTextureObject_t texObject, int x) 
#line 260 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 264 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 277 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 274 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1Dfetch(long *retVal, cudaTextureObject_t texObject, int x) 
#line 275 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 279 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 292 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 281 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1Dfetch(long1 *retVal, cudaTextureObject_t texObject, int x) 
#line 282 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 286 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 299 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 288 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1Dfetch(long2 *retVal, cudaTextureObject_t texObject, int x) 
#line 289 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 293 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 306 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 295 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1Dfetch(long4 *retVal, cudaTextureObject_t texObject, int x) 
#line 296 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 300 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 313 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 302 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1Dfetch(unsigned long *retVal, cudaTextureObject_t texObject, int x) 
#line 303 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 307 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 320 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 309 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1Dfetch(ulong1 *retVal, cudaTextureObject_t texObject, int x) 
#line 310 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 314 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 327 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 316 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1Dfetch(ulong2 *retVal, cudaTextureObject_t texObject, int x) 
#line 317 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 321 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 334 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 323 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1Dfetch(ulong4 *retVal, cudaTextureObject_t texObject, int x) 
#line 324 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 328 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 341 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 339 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1Dfetch(float *retVal, cudaTextureObject_t texObject, int x) 
#line 340 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 344 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 357 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 346 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1Dfetch(float1 *retVal, cudaTextureObject_t texObject, int x) 
#line 347 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 351 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 364 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 353 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1Dfetch(float2 *retVal, cudaTextureObject_t texObject, int x) 
#line 354 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 358 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 371 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 360 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1Dfetch(float4 *retVal, cudaTextureObject_t texObject, int x) 
#line 361 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 365 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 378 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 373 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1D(char *retVal, cudaTextureObject_t texObject, float x) 
#line 374 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 383 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 396 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 384 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1D(signed char *retVal, cudaTextureObject_t texObject, float x) 
#line 385 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 389 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 402 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 391 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1D(char1 *retVal, cudaTextureObject_t texObject, float x) 
#line 392 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 396 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 409 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 398 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1D(char2 *retVal, cudaTextureObject_t texObject, float x) 
#line 399 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 403 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 416 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 405 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1D(char4 *retVal, cudaTextureObject_t texObject, float x) 
#line 406 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 410 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 423 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 412 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1D(unsigned char *retVal, cudaTextureObject_t texObject, float x) 
#line 413 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 417 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 430 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 419 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1D(uchar1 *retVal, cudaTextureObject_t texObject, float x) 
#line 420 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 424 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 437 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 426 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1D(uchar2 *retVal, cudaTextureObject_t texObject, float x) 
#line 427 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 431 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 444 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 433 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1D(uchar4 *retVal, cudaTextureObject_t texObject, float x) 
#line 434 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 438 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 451 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 446 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1D(short *retVal, cudaTextureObject_t texObject, float x) 
#line 447 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 451 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 464 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 453 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1D(short1 *retVal, cudaTextureObject_t texObject, float x) 
#line 454 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 458 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 471 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 460 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1D(short2 *retVal, cudaTextureObject_t texObject, float x) 
#line 461 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 465 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 478 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 467 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1D(short4 *retVal, cudaTextureObject_t texObject, float x) 
#line 468 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 472 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 485 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 474 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1D(unsigned short *retVal, cudaTextureObject_t texObject, float x) 
#line 475 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 479 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 492 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 481 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1D(ushort1 *retVal, cudaTextureObject_t texObject, float x) 
#line 482 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 486 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 499 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 488 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1D(ushort2 *retVal, cudaTextureObject_t texObject, float x) 
#line 489 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 493 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 506 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 495 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1D(ushort4 *retVal, cudaTextureObject_t texObject, float x) 
#line 496 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 500 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 513 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 508 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1D(int *retVal, cudaTextureObject_t texObject, float x) 
#line 509 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 513 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 526 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 515 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1D(int1 *retVal, cudaTextureObject_t texObject, float x) 
#line 516 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 520 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 533 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 522 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1D(int2 *retVal, cudaTextureObject_t texObject, float x) 
#line 523 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 527 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 540 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 529 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1D(int4 *retVal, cudaTextureObject_t texObject, float x) 
#line 530 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 534 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 547 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 536 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1D(unsigned *retVal, cudaTextureObject_t texObject, float x) 
#line 537 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 541 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 554 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 543 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1D(uint1 *retVal, cudaTextureObject_t texObject, float x) 
#line 544 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 548 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 561 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 550 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1D(uint2 *retVal, cudaTextureObject_t texObject, float x) 
#line 551 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 555 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 568 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 557 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1D(uint4 *retVal, cudaTextureObject_t texObject, float x) 
#line 558 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 562 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 575 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 572 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1D(long *retVal, cudaTextureObject_t texObject, float x) 
#line 573 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 577 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 590 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 579 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1D(long1 *retVal, cudaTextureObject_t texObject, float x) 
#line 580 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 584 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 597 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 586 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1D(long2 *retVal, cudaTextureObject_t texObject, float x) 
#line 587 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 591 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 604 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 593 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1D(long4 *retVal, cudaTextureObject_t texObject, float x) 
#line 594 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 598 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 611 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 600 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1D(unsigned long *retVal, cudaTextureObject_t texObject, float x) 
#line 601 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 605 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 618 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 607 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1D(ulong1 *retVal, cudaTextureObject_t texObject, float x) 
#line 608 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 612 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 625 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 614 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1D(ulong2 *retVal, cudaTextureObject_t texObject, float x) 
#line 615 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 619 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 632 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 621 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1D(ulong4 *retVal, cudaTextureObject_t texObject, float x) 
#line 622 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 626 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 639 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 637 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1D(float *retVal, cudaTextureObject_t texObject, float x) 
#line 638 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 642 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 655 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 644 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1D(float1 *retVal, cudaTextureObject_t texObject, float x) 
#line 645 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 649 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 662 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 651 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1D(float2 *retVal, cudaTextureObject_t texObject, float x) 
#line 652 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 656 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 669 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 658 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1D(float4 *retVal, cudaTextureObject_t texObject, float x) 
#line 659 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 663 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 676 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 671 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2D(char *retVal, cudaTextureObject_t texObject, float x, float y) 
#line 672 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
#line 681 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 694 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 682 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2D(signed char *retVal, cudaTextureObject_t texObject, float x, float y) 
#line 683 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
#line 687 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 700 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 689 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2D(char1 *retVal, cudaTextureObject_t texObject, float x, float y) 
#line 690 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
#line 694 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 707 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 696 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2D(char2 *retVal, cudaTextureObject_t texObject, float x, float y) 
#line 697 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
#line 701 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 714 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 703 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2D(char4 *retVal, cudaTextureObject_t texObject, float x, float y) 
#line 704 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
#line 708 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 721 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 710 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2D(unsigned char *retVal, cudaTextureObject_t texObject, float x, float y) 
#line 711 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
#line 715 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 728 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 717 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2D(uchar1 *retVal, cudaTextureObject_t texObject, float x, float y) 
#line 718 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
#line 722 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 735 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 724 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2D(uchar2 *retVal, cudaTextureObject_t texObject, float x, float y) 
#line 725 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
#line 729 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 742 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 731 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2D(uchar4 *retVal, cudaTextureObject_t texObject, float x, float y) 
#line 732 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
#line 736 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 749 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 744 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2D(short *retVal, cudaTextureObject_t texObject, float x, float y) 
#line 745 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
#line 749 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 762 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 751 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2D(short1 *retVal, cudaTextureObject_t texObject, float x, float y) 
#line 752 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
#line 756 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 769 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 758 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2D(short2 *retVal, cudaTextureObject_t texObject, float x, float y) 
#line 759 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
#line 763 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 776 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 765 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2D(short4 *retVal, cudaTextureObject_t texObject, float x, float y) 
#line 766 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
#line 770 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 783 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 772 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2D(unsigned short *retVal, cudaTextureObject_t texObject, float x, float y) 
#line 773 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
#line 777 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 790 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 779 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2D(ushort1 *retVal, cudaTextureObject_t texObject, float x, float y) 
#line 780 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
#line 784 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 797 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 786 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2D(ushort2 *retVal, cudaTextureObject_t texObject, float x, float y) 
#line 787 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
#line 791 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 804 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 793 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2D(ushort4 *retVal, cudaTextureObject_t texObject, float x, float y) 
#line 794 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
#line 798 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 811 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 806 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2D(int *retVal, cudaTextureObject_t texObject, float x, float y) 
#line 807 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
#line 811 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 824 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 813 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2D(int1 *retVal, cudaTextureObject_t texObject, float x, float y) 
#line 814 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
#line 818 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 831 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 820 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2D(int2 *retVal, cudaTextureObject_t texObject, float x, float y) 
#line 821 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
#line 825 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 838 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 827 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2D(int4 *retVal, cudaTextureObject_t texObject, float x, float y) 
#line 828 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
#line 832 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 845 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 834 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2D(unsigned *retVal, cudaTextureObject_t texObject, float x, float y) 
#line 835 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
#line 839 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 852 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 841 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2D(uint1 *retVal, cudaTextureObject_t texObject, float x, float y) 
#line 842 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
#line 846 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 859 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 848 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2D(uint2 *retVal, cudaTextureObject_t texObject, float x, float y) 
#line 849 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
#line 853 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 866 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 855 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2D(uint4 *retVal, cudaTextureObject_t texObject, float x, float y) 
#line 856 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
#line 860 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 873 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 870 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2D(long *retVal, cudaTextureObject_t texObject, float x, float y) 
#line 871 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
#line 875 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 888 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 877 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2D(long1 *retVal, cudaTextureObject_t texObject, float x, float y) 
#line 878 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
#line 882 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 895 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 884 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2D(long2 *retVal, cudaTextureObject_t texObject, float x, float y) 
#line 885 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
#line 889 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 902 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 891 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2D(long4 *retVal, cudaTextureObject_t texObject, float x, float y) 
#line 892 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
#line 896 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 909 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 898 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2D(unsigned long *retVal, cudaTextureObject_t texObject, float x, float y) 
#line 899 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
#line 903 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 916 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 905 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2D(ulong1 *retVal, cudaTextureObject_t texObject, float x, float y) 
#line 906 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
#line 910 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 923 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 912 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2D(ulong2 *retVal, cudaTextureObject_t texObject, float x, float y) 
#line 913 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
#line 917 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 930 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 919 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2D(ulong4 *retVal, cudaTextureObject_t texObject, float x, float y) 
#line 920 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
#line 924 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 937 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 935 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2D(float *retVal, cudaTextureObject_t texObject, float x, float y) 
#line 936 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
#line 940 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 953 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 942 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2D(float1 *retVal, cudaTextureObject_t texObject, float x, float y) 
#line 943 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
#line 947 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 960 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 949 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2D(float2 *retVal, cudaTextureObject_t texObject, float x, float y) 
#line 950 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
#line 954 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 967 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 956 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2D(float4 *retVal, cudaTextureObject_t texObject, float x, float y) 
#line 957 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
#line 961 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 974 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 969 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3D(char *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 970 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 979 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 992 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 980 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3D(signed char *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 981 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 985 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 998 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 987 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3D(char1 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 988 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 992 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1005 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 994 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3D(char2 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 995 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 999 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1012 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 1001 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3D(char4 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1002 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1006 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1019 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 1008 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3D(unsigned char *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1009 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1013 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1026 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 1015 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3D(uchar1 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1016 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1020 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1033 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 1022 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3D(uchar2 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1023 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1027 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1040 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 1029 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3D(uchar4 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1030 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1034 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1047 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 1042 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3D(short *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1043 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1047 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1060 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 1049 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3D(short1 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1050 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1054 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1067 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 1056 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3D(short2 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1057 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1061 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1074 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 1063 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3D(short4 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1064 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1068 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1081 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 1070 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3D(unsigned short *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1071 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1075 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1088 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 1077 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3D(ushort1 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1078 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1082 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1095 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 1084 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3D(ushort2 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1085 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1089 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1102 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 1091 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3D(ushort4 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1092 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1096 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1109 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 1104 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3D(int *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1105 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1109 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1122 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 1111 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3D(int1 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1112 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1116 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1129 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 1118 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3D(int2 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1119 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1123 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1136 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 1125 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3D(int4 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1126 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1130 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1143 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 1132 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3D(unsigned *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1133 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1137 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1150 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 1139 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3D(uint1 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1140 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1144 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1157 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 1146 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3D(uint2 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1147 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1151 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1164 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 1153 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3D(uint4 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1154 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1158 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1171 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 1168 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3D(long *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1169 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1173 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1186 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 1175 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3D(long1 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1176 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1180 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1193 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 1182 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3D(long2 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1183 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1187 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1200 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 1189 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3D(long4 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1190 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1194 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1207 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 1196 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3D(unsigned long *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1197 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1201 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1214 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 1203 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3D(ulong1 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1204 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1208 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1221 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 1210 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3D(ulong2 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1211 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1215 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1228 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 1217 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3D(ulong4 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1218 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1222 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1235 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 1233 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3D(float *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1234 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1238 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1251 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 1240 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3D(float1 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1241 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1245 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1258 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 1247 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3D(float2 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1248 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1252 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1265 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 1254 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3D(float4 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1255 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1259 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1272 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 1267 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayered(char *retVal, cudaTextureObject_t texObject, float x, int layer) 
#line 1268 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
#line 1277 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1290 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 1278 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayered(signed char *retVal, cudaTextureObject_t texObject, float x, int layer) 
#line 1279 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
#line 1283 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1296 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 1285 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayered(char1 *retVal, cudaTextureObject_t texObject, float x, int layer) 
#line 1286 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
#line 1290 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1303 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 1292 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayered(char2 *retVal, cudaTextureObject_t texObject, float x, int layer) 
#line 1293 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
#line 1297 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1310 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 1299 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayered(char4 *retVal, cudaTextureObject_t texObject, float x, int layer) 
#line 1300 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
#line 1304 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1317 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 1306 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayered(unsigned char *retVal, cudaTextureObject_t texObject, float x, int layer) 
#line 1307 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
#line 1311 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1324 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 1313 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayered(uchar1 *retVal, cudaTextureObject_t texObject, float x, int layer) 
#line 1314 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
#line 1318 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1331 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 1320 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayered(uchar2 *retVal, cudaTextureObject_t texObject, float x, int layer) 
#line 1321 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
#line 1325 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1338 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 1327 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayered(uchar4 *retVal, cudaTextureObject_t texObject, float x, int layer) 
#line 1328 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
#line 1332 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1345 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 1340 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayered(short *retVal, cudaTextureObject_t texObject, float x, int layer) 
#line 1341 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
#line 1345 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1358 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 1347 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayered(short1 *retVal, cudaTextureObject_t texObject, float x, int layer) 
#line 1348 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
#line 1352 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1365 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 1354 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayered(short2 *retVal, cudaTextureObject_t texObject, float x, int layer) 
#line 1355 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
#line 1359 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1372 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 1361 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayered(short4 *retVal, cudaTextureObject_t texObject, float x, int layer) 
#line 1362 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
#line 1366 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1379 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 1368 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayered(unsigned short *retVal, cudaTextureObject_t texObject, float x, int layer) 
#line 1369 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
#line 1373 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1386 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 1375 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayered(ushort1 *retVal, cudaTextureObject_t texObject, float x, int layer) 
#line 1376 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
#line 1380 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1393 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 1382 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayered(ushort2 *retVal, cudaTextureObject_t texObject, float x, int layer) 
#line 1383 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
#line 1387 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1400 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 1389 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayered(ushort4 *retVal, cudaTextureObject_t texObject, float x, int layer) 
#line 1390 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
#line 1394 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1407 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 1402 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayered(int *retVal, cudaTextureObject_t texObject, float x, int layer) 
#line 1403 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
#line 1407 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1420 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 1409 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayered(int1 *retVal, cudaTextureObject_t texObject, float x, int layer) 
#line 1410 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
#line 1414 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1427 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 1416 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayered(int2 *retVal, cudaTextureObject_t texObject, float x, int layer) 
#line 1417 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
#line 1421 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1434 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 1423 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayered(int4 *retVal, cudaTextureObject_t texObject, float x, int layer) 
#line 1424 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
#line 1428 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1441 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 1430 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayered(unsigned *retVal, cudaTextureObject_t texObject, float x, int layer) 
#line 1431 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
#line 1435 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1448 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 1437 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayered(uint1 *retVal, cudaTextureObject_t texObject, float x, int layer) 
#line 1438 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
#line 1442 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1455 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 1444 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayered(uint2 *retVal, cudaTextureObject_t texObject, float x, int layer) 
#line 1445 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
#line 1449 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1462 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 1451 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayered(uint4 *retVal, cudaTextureObject_t texObject, float x, int layer) 
#line 1452 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
#line 1456 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1469 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 1466 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayered(long *retVal, cudaTextureObject_t texObject, float x, int layer) 
#line 1467 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
#line 1471 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1484 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 1473 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayered(long1 *retVal, cudaTextureObject_t texObject, float x, int layer) 
#line 1474 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
#line 1478 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1491 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 1480 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayered(long2 *retVal, cudaTextureObject_t texObject, float x, int layer) 
#line 1481 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
#line 1485 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1498 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 1487 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayered(long4 *retVal, cudaTextureObject_t texObject, float x, int layer) 
#line 1488 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
#line 1492 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1505 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 1494 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayered(unsigned long *retVal, cudaTextureObject_t texObject, float x, int layer) 
#line 1495 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
#line 1499 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1512 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 1501 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayered(ulong1 *retVal, cudaTextureObject_t texObject, float x, int layer) 
#line 1502 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
#line 1506 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1519 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 1508 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayered(ulong2 *retVal, cudaTextureObject_t texObject, float x, int layer) 
#line 1509 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
#line 1513 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1526 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 1515 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayered(ulong4 *retVal, cudaTextureObject_t texObject, float x, int layer) 
#line 1516 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
#line 1520 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1533 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 1531 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayered(float *retVal, cudaTextureObject_t texObject, float x, int layer) 
#line 1532 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
#line 1536 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1549 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 1538 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayered(float1 *retVal, cudaTextureObject_t texObject, float x, int layer) 
#line 1539 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
#line 1543 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1556 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 1545 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayered(float2 *retVal, cudaTextureObject_t texObject, float x, int layer) 
#line 1546 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
#line 1550 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1563 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 1552 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayered(float4 *retVal, cudaTextureObject_t texObject, float x, int layer) 
#line 1553 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
#line 1557 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1570 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 1565 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayered(char *retVal, cudaTextureObject_t texObject, float x, float y, int layer) 
#line 1566 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
#line 1575 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1588 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 1576 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayered(signed char *retVal, cudaTextureObject_t texObject, float x, float y, int layer) 
#line 1577 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
#line 1581 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1594 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 1583 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayered(char1 *retVal, cudaTextureObject_t texObject, float x, float y, int layer) 
#line 1584 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
#line 1588 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1601 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 1590 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayered(char2 *retVal, cudaTextureObject_t texObject, float x, float y, int layer) 
#line 1591 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
#line 1595 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1608 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 1597 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayered(char4 *retVal, cudaTextureObject_t texObject, float x, float y, int layer) 
#line 1598 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
#line 1602 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1615 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 1604 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayered(unsigned char *retVal, cudaTextureObject_t texObject, float x, float y, int layer) 
#line 1605 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
#line 1609 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1622 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 1611 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayered(uchar1 *retVal, cudaTextureObject_t texObject, float x, float y, int layer) 
#line 1612 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
#line 1616 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1629 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 1618 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayered(uchar2 *retVal, cudaTextureObject_t texObject, float x, float y, int layer) 
#line 1619 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
#line 1623 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1636 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 1625 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayered(uchar4 *retVal, cudaTextureObject_t texObject, float x, float y, int layer) 
#line 1626 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
#line 1630 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1643 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 1638 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayered(short *retVal, cudaTextureObject_t texObject, float x, float y, int layer) 
#line 1639 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
#line 1643 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1656 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 1645 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayered(short1 *retVal, cudaTextureObject_t texObject, float x, float y, int layer) 
#line 1646 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
#line 1650 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1663 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 1652 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayered(short2 *retVal, cudaTextureObject_t texObject, float x, float y, int layer) 
#line 1653 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
#line 1657 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1670 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 1659 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayered(short4 *retVal, cudaTextureObject_t texObject, float x, float y, int layer) 
#line 1660 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
#line 1664 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1677 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 1666 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayered(unsigned short *retVal, cudaTextureObject_t texObject, float x, float y, int layer) 
#line 1667 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
#line 1671 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1684 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 1673 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayered(ushort1 *retVal, cudaTextureObject_t texObject, float x, float y, int layer) 
#line 1674 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
#line 1678 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1691 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 1680 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayered(ushort2 *retVal, cudaTextureObject_t texObject, float x, float y, int layer) 
#line 1681 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
#line 1685 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1698 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 1687 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayered(ushort4 *retVal, cudaTextureObject_t texObject, float x, float y, int layer) 
#line 1688 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
#line 1692 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1705 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 1700 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayered(int *retVal, cudaTextureObject_t texObject, float x, float y, int layer) 
#line 1701 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
#line 1705 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1718 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 1707 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayered(int1 *retVal, cudaTextureObject_t texObject, float x, float y, int layer) 
#line 1708 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
#line 1712 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1725 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 1714 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayered(int2 *retVal, cudaTextureObject_t texObject, float x, float y, int layer) 
#line 1715 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
#line 1719 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1732 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 1721 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayered(int4 *retVal, cudaTextureObject_t texObject, float x, float y, int layer) 
#line 1722 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
#line 1726 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1739 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 1728 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayered(unsigned *retVal, cudaTextureObject_t texObject, float x, float y, int layer) 
#line 1729 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
#line 1733 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1746 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 1735 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayered(uint1 *retVal, cudaTextureObject_t texObject, float x, float y, int layer) 
#line 1736 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
#line 1740 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1753 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 1742 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayered(uint2 *retVal, cudaTextureObject_t texObject, float x, float y, int layer) 
#line 1743 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
#line 1747 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1760 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 1749 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayered(uint4 *retVal, cudaTextureObject_t texObject, float x, float y, int layer) 
#line 1750 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
#line 1754 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1767 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 1764 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayered(long *retVal, cudaTextureObject_t texObject, float x, float y, int layer) 
#line 1765 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
#line 1769 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1782 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 1771 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayered(long1 *retVal, cudaTextureObject_t texObject, float x, float y, int layer) 
#line 1772 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
#line 1776 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1789 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 1778 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayered(long2 *retVal, cudaTextureObject_t texObject, float x, float y, int layer) 
#line 1779 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
#line 1783 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1796 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 1785 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayered(long4 *retVal, cudaTextureObject_t texObject, float x, float y, int layer) 
#line 1786 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
#line 1790 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1803 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 1792 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayered(unsigned long *retVal, cudaTextureObject_t texObject, float x, float y, int layer) 
#line 1793 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
#line 1797 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1810 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 1799 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayered(ulong1 *retVal, cudaTextureObject_t texObject, float x, float y, int layer) 
#line 1800 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
#line 1804 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1817 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 1806 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayered(ulong2 *retVal, cudaTextureObject_t texObject, float x, float y, int layer) 
#line 1807 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
#line 1811 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1824 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 1813 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayered(ulong4 *retVal, cudaTextureObject_t texObject, float x, float y, int layer) 
#line 1814 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
#line 1818 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1831 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 1829 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayered(float *retVal, cudaTextureObject_t texObject, float x, float y, int layer) 
#line 1830 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
#line 1834 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1847 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 1836 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayered(float1 *retVal, cudaTextureObject_t texObject, float x, float y, int layer) 
#line 1837 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
#line 1841 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1854 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 1843 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayered(float2 *retVal, cudaTextureObject_t texObject, float x, float y, int layer) 
#line 1844 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
#line 1848 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1861 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 1850 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayered(float4 *retVal, cudaTextureObject_t texObject, float x, float y, int layer) 
#line 1851 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
#line 1855 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1868 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 1863 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemap(char *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1864 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1873 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1886 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 1874 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemap(signed char *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1875 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1879 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1892 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 1881 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemap(char1 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1882 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1886 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1899 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 1888 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemap(char2 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1889 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1893 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1906 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 1895 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemap(char4 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1896 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1900 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1913 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 1902 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemap(unsigned char *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1903 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1907 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1920 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 1909 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemap(uchar1 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1910 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1914 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1927 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 1916 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemap(uchar2 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1917 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1921 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1934 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 1923 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemap(uchar4 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1924 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1928 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1941 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 1936 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemap(short *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1937 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1941 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1954 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 1943 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemap(short1 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1944 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1948 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1961 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 1950 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemap(short2 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1951 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1955 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1968 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 1957 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemap(short4 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1958 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1962 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1975 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 1964 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemap(unsigned short *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1965 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1969 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1982 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 1971 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemap(ushort1 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1972 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1976 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1989 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 1978 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemap(ushort2 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1979 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1983 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1996 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 1985 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemap(ushort4 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1986 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1990 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 2003 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 1998 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemap(int *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1999 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 2003 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 2016 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 2005 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemap(int1 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 2006 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 2010 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 2023 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 2012 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemap(int2 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 2013 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 2017 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 2030 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 2019 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemap(int4 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 2020 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 2024 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 2037 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 2026 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemap(unsigned *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 2027 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 2031 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 2044 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 2033 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemap(uint1 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 2034 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 2038 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 2051 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 2040 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemap(uint2 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 2041 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 2045 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 2058 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 2047 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemap(uint4 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 2048 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 2052 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 2065 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 2062 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemap(long *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 2063 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 2067 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 2080 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 2069 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemap(long1 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 2070 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 2074 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 2087 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 2076 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemap(long2 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 2077 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 2081 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 2094 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 2083 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemap(long4 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 2084 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 2088 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 2101 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 2090 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemap(unsigned long *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 2091 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 2095 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 2108 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 2097 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemap(ulong1 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 2098 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 2102 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 2115 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 2104 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemap(ulong2 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 2105 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 2109 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 2122 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 2111 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemap(ulong4 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 2112 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 2116 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 2129 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 2127 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemap(float *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 2128 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 2132 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 2145 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 2134 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemap(float1 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 2135 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 2139 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 2152 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 2141 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemap(float2 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 2142 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 2146 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 2159 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 2148 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemap(float4 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 2149 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 2153 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 2166 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 2161 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayered(char *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer) 
#line 2162 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
#line 2171 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 2184 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 2172 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayered(signed char *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer) 
#line 2173 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
#line 2177 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 2190 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 2179 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayered(char1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer) 
#line 2180 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
#line 2184 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 2197 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 2186 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayered(char2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer) 
#line 2187 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
#line 2191 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 2204 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 2193 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayered(char4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer) 
#line 2194 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
#line 2198 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 2211 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 2200 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayered(unsigned char *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer) 
#line 2201 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
#line 2205 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 2218 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 2207 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayered(uchar1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer) 
#line 2208 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
#line 2212 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 2225 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 2214 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayered(uchar2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer) 
#line 2215 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
#line 2219 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 2232 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 2221 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayered(uchar4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer) 
#line 2222 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
#line 2226 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 2239 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 2234 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayered(short *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer) 
#line 2235 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
#line 2239 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 2252 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 2241 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayered(short1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer) 
#line 2242 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
#line 2246 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 2259 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 2248 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayered(short2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer) 
#line 2249 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
#line 2253 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 2266 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 2255 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayered(short4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer) 
#line 2256 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
#line 2260 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 2273 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 2262 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayered(unsigned short *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer) 
#line 2263 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
#line 2267 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 2280 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 2269 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayered(ushort1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer) 
#line 2270 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
#line 2274 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 2287 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 2276 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayered(ushort2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer) 
#line 2277 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
#line 2281 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 2294 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 2283 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayered(ushort4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer) 
#line 2284 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
#line 2288 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 2301 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 2296 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayered(int *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer) 
#line 2297 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
#line 2301 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 2314 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 2303 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayered(int1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer) 
#line 2304 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
#line 2308 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 2321 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 2310 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayered(int2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer) 
#line 2311 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
#line 2315 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 2328 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 2317 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayered(int4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer) 
#line 2318 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
#line 2322 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 2335 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 2324 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayered(unsigned *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer) 
#line 2325 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
#line 2329 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 2342 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 2331 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayered(uint1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer) 
#line 2332 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
#line 2336 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 2349 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 2338 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayered(uint2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer) 
#line 2339 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
#line 2343 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 2356 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 2345 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayered(uint4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer) 
#line 2346 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
#line 2350 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 2363 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 2360 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayered(long *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer) 
#line 2361 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
#line 2365 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 2378 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 2367 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayered(long1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer) 
#line 2368 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
#line 2372 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 2385 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 2374 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayered(long2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer) 
#line 2375 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
#line 2379 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 2392 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 2381 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayered(long4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer) 
#line 2382 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
#line 2386 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 2399 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 2388 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayered(unsigned long *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer) 
#line 2389 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
#line 2393 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 2406 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 2395 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayered(ulong1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer) 
#line 2396 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
#line 2400 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 2413 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 2402 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayered(ulong2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer) 
#line 2403 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
#line 2407 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 2420 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 2409 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayered(ulong4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer) 
#line 2410 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
#line 2414 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 2427 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 2425 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayered(float *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer) 
#line 2426 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
#line 2430 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 2443 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 2432 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayered(float1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer) 
#line 2433 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
#line 2437 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 2450 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 2439 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayered(float2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer) 
#line 2440 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
#line 2444 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 2457 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 2446 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayered(float4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer) 
#line 2447 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
#line 2451 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 2464 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 2459 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2Dgather(char *retVal, cudaTextureObject_t texObject, float x, float y, int comp) 
#line 2460 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
#line 2475 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}

































#line 2510 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 2477 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2Dgather(signed char *retVal, cudaTextureObject_t texObject, float x, float y, int comp) 
#line 2478 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
#line 2493 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}

































#line 2528 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 2495 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2Dgather(char1 *retVal, cudaTextureObject_t texObject, float x, float y, int comp) 
#line 2496 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
#line 2511 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}

































#line 2546 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 2513 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2Dgather(char2 *retVal, cudaTextureObject_t texObject, float x, float y, int comp) 
#line 2514 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
#line 2529 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}

































#line 2564 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 2531 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2Dgather(char4 *retVal, cudaTextureObject_t texObject, float x, float y, int comp) 
#line 2532 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
#line 2547 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}

































#line 2582 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 2549 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2Dgather(unsigned char *retVal, cudaTextureObject_t texObject, float x, float y, int comp) 
#line 2550 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
#line 2565 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}

































#line 2600 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 2567 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2Dgather(uchar1 *retVal, cudaTextureObject_t texObject, float x, float y, int comp) 
#line 2568 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
#line 2583 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}

































#line 2618 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 2585 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2Dgather(uchar2 *retVal, cudaTextureObject_t texObject, float x, float y, int comp) 
#line 2586 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
#line 2601 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}

































#line 2636 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 2603 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2Dgather(uchar4 *retVal, cudaTextureObject_t texObject, float x, float y, int comp) 
#line 2604 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
#line 2619 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}

































#line 2654 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 2627 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2Dgather(short *retVal, cudaTextureObject_t texObject, float x, float y, int comp) 
#line 2628 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
#line 2643 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}

































#line 2678 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 2645 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2Dgather(short1 *retVal, cudaTextureObject_t texObject, float x, float y, int comp) 
#line 2646 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
#line 2661 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}

































#line 2696 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 2663 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2Dgather(short2 *retVal, cudaTextureObject_t texObject, float x, float y, int comp) 
#line 2664 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
#line 2679 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}

































#line 2714 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 2681 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2Dgather(short4 *retVal, cudaTextureObject_t texObject, float x, float y, int comp) 
#line 2682 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
#line 2697 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}

































#line 2732 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 2699 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2Dgather(unsigned short *retVal, cudaTextureObject_t texObject, float x, float y, int comp) 
#line 2700 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
#line 2715 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}

































#line 2750 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 2717 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2Dgather(ushort1 *retVal, cudaTextureObject_t texObject, float x, float y, int comp) 
#line 2718 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
#line 2733 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}

































#line 2768 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 2735 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2Dgather(ushort2 *retVal, cudaTextureObject_t texObject, float x, float y, int comp) 
#line 2736 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
#line 2751 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}

































#line 2786 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 2753 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2Dgather(ushort4 *retVal, cudaTextureObject_t texObject, float x, float y, int comp) 
#line 2754 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
#line 2769 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}

































#line 2804 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 2777 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2Dgather(int *retVal, cudaTextureObject_t texObject, float x, float y, int comp) 
#line 2778 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
#line 2793 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}

































#line 2828 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 2795 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2Dgather(int1 *retVal, cudaTextureObject_t texObject, float x, float y, int comp) 
#line 2796 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
#line 2811 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}

































#line 2846 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 2813 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2Dgather(int2 *retVal, cudaTextureObject_t texObject, float x, float y, int comp) 
#line 2814 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
#line 2829 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}

































#line 2864 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 2831 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2Dgather(int4 *retVal, cudaTextureObject_t texObject, float x, float y, int comp) 
#line 2832 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
#line 2847 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}

































#line 2882 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 2849 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2Dgather(unsigned *retVal, cudaTextureObject_t texObject, float x, float y, int comp) 
#line 2850 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
#line 2865 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}

































#line 2900 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 2867 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2Dgather(uint1 *retVal, cudaTextureObject_t texObject, float x, float y, int comp) 
#line 2868 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
#line 2883 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}

































#line 2918 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 2885 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2Dgather(uint2 *retVal, cudaTextureObject_t texObject, float x, float y, int comp) 
#line 2886 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
#line 2901 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}

































#line 2936 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 2903 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2Dgather(uint4 *retVal, cudaTextureObject_t texObject, float x, float y, int comp) 
#line 2904 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
#line 2919 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}

































#line 2954 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 2927 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2Dgather(long *retVal, cudaTextureObject_t texObject, float x, float y, int comp) 
#line 2928 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
#line 2943 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}

































#line 2978 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 2945 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2Dgather(long1 *retVal, cudaTextureObject_t texObject, float x, float y, int comp) 
#line 2946 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
#line 2961 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}

































#line 2996 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 2963 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2Dgather(long2 *retVal, cudaTextureObject_t texObject, float x, float y, int comp) 
#line 2964 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
#line 2979 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}

































#line 3014 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 2981 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2Dgather(long4 *retVal, cudaTextureObject_t texObject, float x, float y, int comp) 
#line 2982 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
#line 2997 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}

































#line 3032 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 2999 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2Dgather(unsigned long *retVal, cudaTextureObject_t texObject, float x, float y, int comp) 
#line 3000 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
#line 3015 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}

































#line 3050 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 3017 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2Dgather(ulong1 *retVal, cudaTextureObject_t texObject, float x, float y, int comp) 
#line 3018 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
#line 3033 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}

































#line 3068 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 3035 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2Dgather(ulong2 *retVal, cudaTextureObject_t texObject, float x, float y, int comp) 
#line 3036 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
#line 3051 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}

































#line 3086 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 3053 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2Dgather(ulong4 *retVal, cudaTextureObject_t texObject, float x, float y, int comp) 
#line 3054 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
#line 3069 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}

































#line 3104 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 3077 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2Dgather(float *retVal, cudaTextureObject_t texObject, float x, float y, int comp) 
#line 3078 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
#line 3093 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}

































#line 3128 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 3095 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2Dgather(float1 *retVal, cudaTextureObject_t texObject, float x, float y, int comp) 
#line 3096 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
#line 3111 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}

































#line 3146 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 3113 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2Dgather(float2 *retVal, cudaTextureObject_t texObject, float x, float y, int comp) 
#line 3114 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
#line 3129 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}

































#line 3164 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 3131 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2Dgather(float4 *retVal, cudaTextureObject_t texObject, float x, float y, int comp) 
#line 3132 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
#line 3147 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}

































#line 3182 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 3155 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLod(char *retVal, cudaTextureObject_t texObject, float x, float level) 
#line 3156 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
#line 3165 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3178 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 3166 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLod(signed char *retVal, cudaTextureObject_t texObject, float x, float level) 
#line 3167 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
#line 3171 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3184 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 3173 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLod(char1 *retVal, cudaTextureObject_t texObject, float x, float level) 
#line 3174 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
#line 3178 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3191 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 3180 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLod(char2 *retVal, cudaTextureObject_t texObject, float x, float level) 
#line 3181 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
#line 3185 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3198 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 3187 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLod(char4 *retVal, cudaTextureObject_t texObject, float x, float level) 
#line 3188 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
#line 3192 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3205 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 3194 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLod(unsigned char *retVal, cudaTextureObject_t texObject, float x, float level) 
#line 3195 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
#line 3199 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3212 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 3201 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLod(uchar1 *retVal, cudaTextureObject_t texObject, float x, float level) 
#line 3202 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
#line 3206 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3219 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 3208 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLod(uchar2 *retVal, cudaTextureObject_t texObject, float x, float level) 
#line 3209 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
#line 3213 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3226 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 3215 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLod(uchar4 *retVal, cudaTextureObject_t texObject, float x, float level) 
#line 3216 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
#line 3220 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3233 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 3228 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLod(short *retVal, cudaTextureObject_t texObject, float x, float level) 
#line 3229 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
#line 3233 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3246 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 3235 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLod(short1 *retVal, cudaTextureObject_t texObject, float x, float level) 
#line 3236 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
#line 3240 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3253 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 3242 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLod(short2 *retVal, cudaTextureObject_t texObject, float x, float level) 
#line 3243 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
#line 3247 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3260 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 3249 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLod(short4 *retVal, cudaTextureObject_t texObject, float x, float level) 
#line 3250 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
#line 3254 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3267 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 3256 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLod(unsigned short *retVal, cudaTextureObject_t texObject, float x, float level) 
#line 3257 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
#line 3261 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3274 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 3263 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLod(ushort1 *retVal, cudaTextureObject_t texObject, float x, float level) 
#line 3264 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
#line 3268 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3281 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 3270 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLod(ushort2 *retVal, cudaTextureObject_t texObject, float x, float level) 
#line 3271 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
#line 3275 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3288 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 3277 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLod(ushort4 *retVal, cudaTextureObject_t texObject, float x, float level) 
#line 3278 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
#line 3282 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3295 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 3290 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLod(int *retVal, cudaTextureObject_t texObject, float x, float level) 
#line 3291 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
#line 3295 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3308 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 3297 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLod(int1 *retVal, cudaTextureObject_t texObject, float x, float level) 
#line 3298 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
#line 3302 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3315 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 3304 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLod(int2 *retVal, cudaTextureObject_t texObject, float x, float level) 
#line 3305 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
#line 3309 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3322 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 3311 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLod(int4 *retVal, cudaTextureObject_t texObject, float x, float level) 
#line 3312 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
#line 3316 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3329 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 3318 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLod(unsigned *retVal, cudaTextureObject_t texObject, float x, float level) 
#line 3319 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
#line 3323 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3336 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 3325 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLod(uint1 *retVal, cudaTextureObject_t texObject, float x, float level) 
#line 3326 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
#line 3330 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3343 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 3332 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLod(uint2 *retVal, cudaTextureObject_t texObject, float x, float level) 
#line 3333 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
#line 3337 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3350 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 3339 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLod(uint4 *retVal, cudaTextureObject_t texObject, float x, float level) 
#line 3340 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
#line 3344 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3357 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 3354 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLod(long *retVal, cudaTextureObject_t texObject, float x, float level) 
#line 3355 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
#line 3359 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3372 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 3361 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLod(long1 *retVal, cudaTextureObject_t texObject, float x, float level) 
#line 3362 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
#line 3366 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3379 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 3368 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLod(long2 *retVal, cudaTextureObject_t texObject, float x, float level) 
#line 3369 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
#line 3373 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3386 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 3375 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLod(long4 *retVal, cudaTextureObject_t texObject, float x, float level) 
#line 3376 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
#line 3380 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3393 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 3382 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLod(unsigned long *retVal, cudaTextureObject_t texObject, float x, float level) 
#line 3383 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
#line 3387 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3400 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 3389 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLod(ulong1 *retVal, cudaTextureObject_t texObject, float x, float level) 
#line 3390 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
#line 3394 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3407 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 3396 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLod(ulong2 *retVal, cudaTextureObject_t texObject, float x, float level) 
#line 3397 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
#line 3401 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3414 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 3403 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLod(ulong4 *retVal, cudaTextureObject_t texObject, float x, float level) 
#line 3404 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
#line 3408 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3421 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 3419 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLod(float *retVal, cudaTextureObject_t texObject, float x, float level) 
#line 3420 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
#line 3424 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3437 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 3426 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLod(float1 *retVal, cudaTextureObject_t texObject, float x, float level) 
#line 3427 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
#line 3431 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3444 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 3433 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLod(float2 *retVal, cudaTextureObject_t texObject, float x, float level) 
#line 3434 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
#line 3438 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3451 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 3440 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLod(float4 *retVal, cudaTextureObject_t texObject, float x, float level) 
#line 3441 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
#line 3445 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3458 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 3453 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLod(char *retVal, cudaTextureObject_t texObject, float x, float y, float level) 
#line 3454 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
#line 3463 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3476 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 3464 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLod(signed char *retVal, cudaTextureObject_t texObject, float x, float y, float level) 
#line 3465 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
#line 3469 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3482 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 3471 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLod(char1 *retVal, cudaTextureObject_t texObject, float x, float y, float level) 
#line 3472 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
#line 3476 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3489 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 3478 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLod(char2 *retVal, cudaTextureObject_t texObject, float x, float y, float level) 
#line 3479 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
#line 3483 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3496 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 3485 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLod(char4 *retVal, cudaTextureObject_t texObject, float x, float y, float level) 
#line 3486 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
#line 3490 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3503 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 3492 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLod(unsigned char *retVal, cudaTextureObject_t texObject, float x, float y, float level) 
#line 3493 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
#line 3497 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3510 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 3499 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLod(uchar1 *retVal, cudaTextureObject_t texObject, float x, float y, float level) 
#line 3500 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
#line 3504 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3517 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 3506 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLod(uchar2 *retVal, cudaTextureObject_t texObject, float x, float y, float level) 
#line 3507 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
#line 3511 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3524 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 3513 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLod(uchar4 *retVal, cudaTextureObject_t texObject, float x, float y, float level) 
#line 3514 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
#line 3518 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3531 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 3526 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLod(short *retVal, cudaTextureObject_t texObject, float x, float y, float level) 
#line 3527 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
#line 3531 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3544 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 3533 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLod(short1 *retVal, cudaTextureObject_t texObject, float x, float y, float level) 
#line 3534 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
#line 3538 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3551 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 3540 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLod(short2 *retVal, cudaTextureObject_t texObject, float x, float y, float level) 
#line 3541 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
#line 3545 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3558 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 3547 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLod(short4 *retVal, cudaTextureObject_t texObject, float x, float y, float level) 
#line 3548 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
#line 3552 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3565 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 3554 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLod(unsigned short *retVal, cudaTextureObject_t texObject, float x, float y, float level) 
#line 3555 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
#line 3559 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3572 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 3561 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLod(ushort1 *retVal, cudaTextureObject_t texObject, float x, float y, float level) 
#line 3562 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
#line 3566 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3579 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 3568 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLod(ushort2 *retVal, cudaTextureObject_t texObject, float x, float y, float level) 
#line 3569 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
#line 3573 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3586 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 3575 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLod(ushort4 *retVal, cudaTextureObject_t texObject, float x, float y, float level) 
#line 3576 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
#line 3580 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3593 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 3588 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLod(int *retVal, cudaTextureObject_t texObject, float x, float y, float level) 
#line 3589 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
#line 3593 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3606 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 3595 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLod(int1 *retVal, cudaTextureObject_t texObject, float x, float y, float level) 
#line 3596 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
#line 3600 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3613 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 3602 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLod(int2 *retVal, cudaTextureObject_t texObject, float x, float y, float level) 
#line 3603 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
#line 3607 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3620 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 3609 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLod(int4 *retVal, cudaTextureObject_t texObject, float x, float y, float level) 
#line 3610 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
#line 3614 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3627 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 3616 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLod(unsigned *retVal, cudaTextureObject_t texObject, float x, float y, float level) 
#line 3617 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
#line 3621 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3634 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 3623 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLod(uint1 *retVal, cudaTextureObject_t texObject, float x, float y, float level) 
#line 3624 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
#line 3628 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3641 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 3630 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLod(uint2 *retVal, cudaTextureObject_t texObject, float x, float y, float level) 
#line 3631 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
#line 3635 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3648 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 3637 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLod(uint4 *retVal, cudaTextureObject_t texObject, float x, float y, float level) 
#line 3638 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
#line 3642 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3655 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 3652 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLod(long *retVal, cudaTextureObject_t texObject, float x, float y, float level) 
#line 3653 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
#line 3657 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3670 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 3659 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLod(long1 *retVal, cudaTextureObject_t texObject, float x, float y, float level) 
#line 3660 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
#line 3664 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3677 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 3666 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLod(long2 *retVal, cudaTextureObject_t texObject, float x, float y, float level) 
#line 3667 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
#line 3671 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3684 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 3673 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLod(long4 *retVal, cudaTextureObject_t texObject, float x, float y, float level) 
#line 3674 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
#line 3678 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3691 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 3680 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLod(unsigned long *retVal, cudaTextureObject_t texObject, float x, float y, float level) 
#line 3681 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
#line 3685 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3698 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 3687 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLod(ulong1 *retVal, cudaTextureObject_t texObject, float x, float y, float level) 
#line 3688 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
#line 3692 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3705 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 3694 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLod(ulong2 *retVal, cudaTextureObject_t texObject, float x, float y, float level) 
#line 3695 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
#line 3699 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3712 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 3701 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLod(ulong4 *retVal, cudaTextureObject_t texObject, float x, float y, float level) 
#line 3702 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
#line 3706 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3719 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 3717 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLod(float *retVal, cudaTextureObject_t texObject, float x, float y, float level) 
#line 3718 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
#line 3722 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3735 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 3724 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLod(float1 *retVal, cudaTextureObject_t texObject, float x, float y, float level) 
#line 3725 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
#line 3729 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3742 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 3731 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLod(float2 *retVal, cudaTextureObject_t texObject, float x, float y, float level) 
#line 3732 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
#line 3736 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3749 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 3738 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLod(float4 *retVal, cudaTextureObject_t texObject, float x, float y, float level) 
#line 3739 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
#line 3743 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3756 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 3751 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DLod(char *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 3752 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 3761 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3774 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 3762 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DLod(signed char *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 3763 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 3767 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3780 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 3769 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DLod(char1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 3770 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 3774 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3787 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 3776 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DLod(char2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 3777 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 3781 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3794 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 3783 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DLod(char4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 3784 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 3788 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3801 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 3790 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DLod(unsigned char *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 3791 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 3795 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3808 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 3797 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DLod(uchar1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 3798 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 3802 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3815 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 3804 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DLod(uchar2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 3805 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 3809 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3822 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 3811 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DLod(uchar4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 3812 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 3816 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3829 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 3824 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DLod(short *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 3825 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 3829 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3842 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 3831 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DLod(short1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 3832 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 3836 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3849 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 3838 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DLod(short2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 3839 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 3843 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3856 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 3845 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DLod(short4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 3846 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 3850 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3863 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 3852 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DLod(unsigned short *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 3853 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 3857 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3870 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 3859 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DLod(ushort1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 3860 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 3864 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3877 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 3866 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DLod(ushort2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 3867 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 3871 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3884 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 3873 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DLod(ushort4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 3874 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 3878 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3891 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 3886 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DLod(int *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 3887 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 3891 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3904 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 3893 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DLod(int1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 3894 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 3898 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3911 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 3900 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DLod(int2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 3901 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 3905 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3918 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 3907 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DLod(int4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 3908 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 3912 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3925 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 3914 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DLod(unsigned *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 3915 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 3919 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3932 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 3921 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DLod(uint1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 3922 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 3926 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3939 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 3928 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DLod(uint2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 3929 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 3933 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3946 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 3935 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DLod(uint4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 3936 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 3940 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3953 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 3950 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DLod(long *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 3951 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 3955 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3968 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 3957 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DLod(long1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 3958 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 3962 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3975 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 3964 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DLod(long2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 3965 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 3969 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3982 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 3971 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DLod(long4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 3972 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 3976 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3989 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 3978 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DLod(unsigned long *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 3979 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 3983 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3996 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 3985 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DLod(ulong1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 3986 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 3990 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4003 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 3992 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DLod(ulong2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 3993 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 3997 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4010 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 3999 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DLod(ulong4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 4000 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 4004 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4017 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 4015 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DLod(float *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 4016 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 4020 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4033 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 4022 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DLod(float1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 4023 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 4027 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4040 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 4029 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DLod(float2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 4030 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 4034 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4047 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 4036 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DLod(float4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 4037 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 4041 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4054 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 4049 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredLod(char *retVal, cudaTextureObject_t texObject, float x, int layer, float level) 
#line 4050 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
#line 4059 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4072 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 4060 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredLod(signed char *retVal, cudaTextureObject_t texObject, float x, int layer, float level) 
#line 4061 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
#line 4065 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4078 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 4067 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredLod(char1 *retVal, cudaTextureObject_t texObject, float x, int layer, float level) 
#line 4068 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
#line 4072 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4085 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 4074 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredLod(char2 *retVal, cudaTextureObject_t texObject, float x, int layer, float level) 
#line 4075 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
#line 4079 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4092 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 4081 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredLod(char4 *retVal, cudaTextureObject_t texObject, float x, int layer, float level) 
#line 4082 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
#line 4086 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4099 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 4088 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredLod(unsigned char *retVal, cudaTextureObject_t texObject, float x, int layer, float level) 
#line 4089 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
#line 4093 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4106 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 4095 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredLod(uchar1 *retVal, cudaTextureObject_t texObject, float x, int layer, float level) 
#line 4096 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
#line 4100 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4113 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 4102 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredLod(uchar2 *retVal, cudaTextureObject_t texObject, float x, int layer, float level) 
#line 4103 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
#line 4107 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4120 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 4109 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredLod(uchar4 *retVal, cudaTextureObject_t texObject, float x, int layer, float level) 
#line 4110 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
#line 4114 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4127 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 4122 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredLod(short *retVal, cudaTextureObject_t texObject, float x, int layer, float level) 
#line 4123 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
#line 4127 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4140 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 4129 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredLod(short1 *retVal, cudaTextureObject_t texObject, float x, int layer, float level) 
#line 4130 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
#line 4134 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4147 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 4136 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredLod(short2 *retVal, cudaTextureObject_t texObject, float x, int layer, float level) 
#line 4137 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
#line 4141 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4154 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 4143 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredLod(short4 *retVal, cudaTextureObject_t texObject, float x, int layer, float level) 
#line 4144 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
#line 4148 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4161 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 4150 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredLod(unsigned short *retVal, cudaTextureObject_t texObject, float x, int layer, float level) 
#line 4151 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
#line 4155 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4168 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 4157 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredLod(ushort1 *retVal, cudaTextureObject_t texObject, float x, int layer, float level) 
#line 4158 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
#line 4162 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4175 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 4164 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredLod(ushort2 *retVal, cudaTextureObject_t texObject, float x, int layer, float level) 
#line 4165 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
#line 4169 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4182 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 4171 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredLod(ushort4 *retVal, cudaTextureObject_t texObject, float x, int layer, float level) 
#line 4172 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
#line 4176 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4189 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 4184 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredLod(int *retVal, cudaTextureObject_t texObject, float x, int layer, float level) 
#line 4185 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
#line 4189 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4202 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 4191 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredLod(int1 *retVal, cudaTextureObject_t texObject, float x, int layer, float level) 
#line 4192 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
#line 4196 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4209 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 4198 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredLod(int2 *retVal, cudaTextureObject_t texObject, float x, int layer, float level) 
#line 4199 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
#line 4203 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4216 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 4205 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredLod(int4 *retVal, cudaTextureObject_t texObject, float x, int layer, float level) 
#line 4206 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
#line 4210 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4223 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 4212 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredLod(unsigned *retVal, cudaTextureObject_t texObject, float x, int layer, float level) 
#line 4213 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
#line 4217 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4230 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 4219 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredLod(uint1 *retVal, cudaTextureObject_t texObject, float x, int layer, float level) 
#line 4220 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
#line 4224 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4237 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 4226 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredLod(uint2 *retVal, cudaTextureObject_t texObject, float x, int layer, float level) 
#line 4227 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
#line 4231 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4244 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 4233 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredLod(uint4 *retVal, cudaTextureObject_t texObject, float x, int layer, float level) 
#line 4234 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
#line 4238 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4251 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 4248 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredLod(long *retVal, cudaTextureObject_t texObject, float x, int layer, float level) 
#line 4249 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
#line 4253 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4266 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 4255 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredLod(long1 *retVal, cudaTextureObject_t texObject, float x, int layer, float level) 
#line 4256 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
#line 4260 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4273 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 4262 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredLod(long2 *retVal, cudaTextureObject_t texObject, float x, int layer, float level) 
#line 4263 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
#line 4267 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4280 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 4269 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredLod(long4 *retVal, cudaTextureObject_t texObject, float x, int layer, float level) 
#line 4270 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
#line 4274 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4287 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 4276 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredLod(unsigned long *retVal, cudaTextureObject_t texObject, float x, int layer, float level) 
#line 4277 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
#line 4281 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4294 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 4283 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredLod(ulong1 *retVal, cudaTextureObject_t texObject, float x, int layer, float level) 
#line 4284 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
#line 4288 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4301 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 4290 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredLod(ulong2 *retVal, cudaTextureObject_t texObject, float x, int layer, float level) 
#line 4291 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
#line 4295 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4308 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 4297 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredLod(ulong4 *retVal, cudaTextureObject_t texObject, float x, int layer, float level) 
#line 4298 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
#line 4302 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4315 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 4313 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredLod(float *retVal, cudaTextureObject_t texObject, float x, int layer, float level) 
#line 4314 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
#line 4318 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4331 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 4320 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredLod(float1 *retVal, cudaTextureObject_t texObject, float x, int layer, float level) 
#line 4321 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
#line 4325 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4338 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 4327 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredLod(float2 *retVal, cudaTextureObject_t texObject, float x, int layer, float level) 
#line 4328 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
#line 4332 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4345 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 4334 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredLod(float4 *retVal, cudaTextureObject_t texObject, float x, int layer, float level) 
#line 4335 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
#line 4339 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4352 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 4347 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredLod(char *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level) 
#line 4348 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
#line 4357 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4370 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 4358 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredLod(signed char *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level) 
#line 4359 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
#line 4363 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4376 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 4365 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredLod(char1 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level) 
#line 4366 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
#line 4370 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4383 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 4372 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredLod(char2 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level) 
#line 4373 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
#line 4377 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4390 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 4379 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredLod(char4 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level) 
#line 4380 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
#line 4384 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4397 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 4386 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredLod(unsigned char *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level) 
#line 4387 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
#line 4391 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4404 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 4393 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredLod(uchar1 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level) 
#line 4394 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
#line 4398 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4411 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 4400 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredLod(uchar2 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level) 
#line 4401 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
#line 4405 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4418 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 4407 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredLod(uchar4 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level) 
#line 4408 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
#line 4412 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4425 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 4420 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredLod(short *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level) 
#line 4421 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
#line 4425 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4438 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 4427 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredLod(short1 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level) 
#line 4428 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
#line 4432 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4445 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 4434 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredLod(short2 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level) 
#line 4435 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
#line 4439 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4452 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 4441 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredLod(short4 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level) 
#line 4442 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
#line 4446 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4459 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 4448 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredLod(unsigned short *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level) 
#line 4449 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
#line 4453 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4466 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 4455 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredLod(ushort1 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level) 
#line 4456 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
#line 4460 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4473 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 4462 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredLod(ushort2 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level) 
#line 4463 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
#line 4467 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4480 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 4469 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredLod(ushort4 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level) 
#line 4470 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
#line 4474 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4487 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 4482 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredLod(int *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level) 
#line 4483 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
#line 4487 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4500 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 4489 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredLod(int1 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level) 
#line 4490 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
#line 4494 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4507 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 4496 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredLod(int2 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level) 
#line 4497 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
#line 4501 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4514 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 4503 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredLod(int4 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level) 
#line 4504 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
#line 4508 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4521 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 4510 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredLod(unsigned *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level) 
#line 4511 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
#line 4515 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4528 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 4517 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredLod(uint1 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level) 
#line 4518 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
#line 4522 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4535 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 4524 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredLod(uint2 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level) 
#line 4525 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
#line 4529 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4542 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 4531 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredLod(uint4 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level) 
#line 4532 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
#line 4536 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4549 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 4546 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredLod(long *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level) 
#line 4547 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
#line 4551 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4564 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 4553 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredLod(long1 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level) 
#line 4554 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
#line 4558 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4571 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 4560 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredLod(long2 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level) 
#line 4561 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
#line 4565 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4578 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 4567 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredLod(long4 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level) 
#line 4568 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
#line 4572 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4585 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 4574 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredLod(unsigned long *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level) 
#line 4575 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
#line 4579 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4592 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 4581 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredLod(ulong1 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level) 
#line 4582 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
#line 4586 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4599 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 4588 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredLod(ulong2 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level) 
#line 4589 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
#line 4593 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4606 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 4595 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredLod(ulong4 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level) 
#line 4596 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
#line 4600 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4613 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 4611 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredLod(float *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level) 
#line 4612 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
#line 4616 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4629 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 4618 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredLod(float1 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level) 
#line 4619 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
#line 4623 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4636 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 4625 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredLod(float2 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level) 
#line 4626 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
#line 4630 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4643 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 4632 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredLod(float4 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level) 
#line 4633 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
#line 4637 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4650 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 4645 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLod(char *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 4646 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 4655 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4668 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 4656 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLod(signed char *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 4657 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 4661 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4674 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 4663 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLod(char1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 4664 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 4668 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4681 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 4670 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLod(char2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 4671 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 4675 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4688 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 4677 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLod(char4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 4678 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 4682 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4695 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 4684 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLod(unsigned char *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 4685 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 4689 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4702 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 4691 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLod(uchar1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 4692 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 4696 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4709 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 4698 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLod(uchar2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 4699 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 4703 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4716 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 4705 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLod(uchar4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 4706 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 4710 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4723 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 4718 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLod(short *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 4719 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 4723 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4736 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 4725 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLod(short1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 4726 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 4730 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4743 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 4732 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLod(short2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 4733 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 4737 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4750 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 4739 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLod(short4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 4740 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 4744 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4757 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 4746 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLod(unsigned short *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 4747 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 4751 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4764 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 4753 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLod(ushort1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 4754 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 4758 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4771 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 4760 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLod(ushort2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 4761 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 4765 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4778 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 4767 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLod(ushort4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 4768 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 4772 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4785 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 4780 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLod(int *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 4781 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 4785 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4798 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 4787 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLod(int1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 4788 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 4792 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4805 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 4794 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLod(int2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 4795 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 4799 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4812 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 4801 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLod(int4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 4802 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 4806 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4819 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 4808 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLod(unsigned *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 4809 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 4813 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4826 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 4815 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLod(uint1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 4816 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 4820 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4833 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 4822 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLod(uint2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 4823 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 4827 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4840 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 4829 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLod(uint4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 4830 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 4834 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4847 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 4844 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLod(long *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 4845 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 4849 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4862 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 4851 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLod(long1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 4852 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 4856 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4869 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 4858 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLod(long2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 4859 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 4863 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4876 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 4865 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLod(long4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 4866 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 4870 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4883 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 4872 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLod(unsigned long *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 4873 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 4877 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4890 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 4879 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLod(ulong1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 4880 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 4884 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4897 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 4886 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLod(ulong2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 4887 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 4891 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4904 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 4893 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLod(ulong4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 4894 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 4898 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4911 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 4909 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLod(float *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 4910 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 4914 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4927 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 4916 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLod(float1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 4917 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 4921 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4934 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 4923 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLod(float2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 4924 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 4928 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4941 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 4930 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLod(float4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 4931 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 4935 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4948 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 4943 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayeredLod(char *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level) 
#line 4944 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 4953 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4966 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 4954 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayeredLod(signed char *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level) 
#line 4955 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 4959 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4972 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 4961 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayeredLod(char1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level) 
#line 4962 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 4966 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4979 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 4968 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayeredLod(char2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level) 
#line 4969 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 4973 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4986 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 4975 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayeredLod(char4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level) 
#line 4976 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 4980 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4993 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 4982 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayeredLod(unsigned char *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level) 
#line 4983 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 4987 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5000 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 4989 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayeredLod(uchar1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level) 
#line 4990 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 4994 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5007 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 4996 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayeredLod(uchar2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level) 
#line 4997 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 5001 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5014 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 5003 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayeredLod(uchar4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level) 
#line 5004 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 5008 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5021 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 5016 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayeredLod(short *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level) 
#line 5017 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 5021 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5034 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 5023 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayeredLod(short1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level) 
#line 5024 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 5028 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5041 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 5030 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayeredLod(short2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level) 
#line 5031 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 5035 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5048 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 5037 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayeredLod(short4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level) 
#line 5038 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 5042 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5055 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 5044 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayeredLod(unsigned short *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level) 
#line 5045 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 5049 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5062 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 5051 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayeredLod(ushort1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level) 
#line 5052 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 5056 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5069 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 5058 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayeredLod(ushort2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level) 
#line 5059 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 5063 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5076 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 5065 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayeredLod(ushort4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level) 
#line 5066 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 5070 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5083 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 5078 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayeredLod(int *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level) 
#line 5079 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 5083 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5096 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 5085 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayeredLod(int1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level) 
#line 5086 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 5090 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5103 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 5092 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayeredLod(int2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level) 
#line 5093 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 5097 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5110 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 5099 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayeredLod(int4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level) 
#line 5100 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 5104 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5117 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 5106 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayeredLod(unsigned *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level) 
#line 5107 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 5111 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5124 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 5113 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayeredLod(uint1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level) 
#line 5114 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 5118 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5131 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 5120 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayeredLod(uint2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level) 
#line 5121 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 5125 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5138 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 5127 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayeredLod(uint4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level) 
#line 5128 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 5132 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5145 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 5142 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayeredLod(long *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level) 
#line 5143 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 5147 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5160 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 5149 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayeredLod(long1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level) 
#line 5150 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 5154 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5167 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 5156 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayeredLod(long2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level) 
#line 5157 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 5161 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5174 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 5163 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayeredLod(long4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level) 
#line 5164 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 5168 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5181 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 5170 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayeredLod(unsigned long *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level) 
#line 5171 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 5175 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5188 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 5177 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayeredLod(ulong1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level) 
#line 5178 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 5182 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5195 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 5184 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayeredLod(ulong2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level) 
#line 5185 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 5189 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5202 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 5191 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayeredLod(ulong4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level) 
#line 5192 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 5196 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5209 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 5207 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayeredLod(float *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level) 
#line 5208 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 5212 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5225 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 5214 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayeredLod(float1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level) 
#line 5215 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 5219 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5232 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 5221 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayeredLod(float2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level) 
#line 5222 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 5226 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5239 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 5228 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayeredLod(float4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level) 
#line 5229 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 5233 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5246 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 5241 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DGrad(char *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy) 
#line 5242 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
#line 5251 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5264 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 5252 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DGrad(signed char *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy) 
#line 5253 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
#line 5257 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5270 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 5259 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DGrad(char1 *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy) 
#line 5260 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
#line 5264 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5277 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 5266 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DGrad(char2 *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy) 
#line 5267 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
#line 5271 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5284 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 5273 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DGrad(char4 *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy) 
#line 5274 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
#line 5278 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5291 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 5280 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DGrad(unsigned char *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy) 
#line 5281 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
#line 5285 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5298 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 5287 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DGrad(uchar1 *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy) 
#line 5288 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
#line 5292 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5305 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 5294 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DGrad(uchar2 *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy) 
#line 5295 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
#line 5299 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5312 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 5301 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DGrad(uchar4 *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy) 
#line 5302 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
#line 5306 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5319 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 5314 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DGrad(short *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy) 
#line 5315 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
#line 5319 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5332 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 5321 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DGrad(short1 *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy) 
#line 5322 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
#line 5326 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5339 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 5328 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DGrad(short2 *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy) 
#line 5329 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
#line 5333 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5346 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 5335 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DGrad(short4 *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy) 
#line 5336 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
#line 5340 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5353 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 5342 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DGrad(unsigned short *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy) 
#line 5343 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
#line 5347 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5360 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 5349 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DGrad(ushort1 *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy) 
#line 5350 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
#line 5354 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5367 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 5356 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DGrad(ushort2 *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy) 
#line 5357 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
#line 5361 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5374 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 5363 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DGrad(ushort4 *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy) 
#line 5364 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
#line 5368 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5381 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 5376 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DGrad(int *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy) 
#line 5377 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
#line 5381 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5394 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 5383 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DGrad(int1 *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy) 
#line 5384 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
#line 5388 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5401 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 5390 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DGrad(int2 *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy) 
#line 5391 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
#line 5395 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5408 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 5397 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DGrad(int4 *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy) 
#line 5398 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
#line 5402 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5415 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 5404 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DGrad(unsigned *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy) 
#line 5405 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
#line 5409 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}










#line 5421 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 5411 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DGrad(uint1 *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy) 
#line 5412 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
#line 5416 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5429 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 5418 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DGrad(uint2 *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy) 
#line 5419 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
#line 5423 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5436 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 5425 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DGrad(uint4 *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy) 
#line 5426 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
#line 5430 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5443 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 5440 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DGrad(long *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy) 
#line 5441 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
#line 5445 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5458 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 5447 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DGrad(long1 *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy) 
#line 5448 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
#line 5452 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5465 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 5454 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DGrad(long2 *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy) 
#line 5455 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
#line 5459 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5472 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 5461 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DGrad(long4 *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy) 
#line 5462 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
#line 5466 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5479 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 5468 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DGrad(unsigned long *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy) 
#line 5469 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
#line 5473 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5486 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 5475 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DGrad(ulong1 *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy) 
#line 5476 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
#line 5480 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5493 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 5482 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DGrad(ulong2 *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy) 
#line 5483 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
#line 5487 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5500 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 5489 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DGrad(ulong4 *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy) 
#line 5490 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
#line 5494 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5507 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 5505 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DGrad(float *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy) 
#line 5506 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
#line 5510 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5523 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 5512 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DGrad(float1 *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy) 
#line 5513 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
#line 5517 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5530 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 5519 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DGrad(float2 *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy) 
#line 5520 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
#line 5524 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5537 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 5526 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DGrad(float4 *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy) 
#line 5527 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
#line 5531 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5544 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 5539 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DGrad(char *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy) 
#line 5540 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 5549 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5562 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 5550 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DGrad(signed char *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy) 
#line 5551 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 5555 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5568 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 5557 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DGrad(char1 *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy) 
#line 5558 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 5562 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5575 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 5564 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DGrad(char2 *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy) 
#line 5565 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 5569 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5582 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 5571 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DGrad(char4 *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy) 
#line 5572 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 5576 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5589 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 5578 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DGrad(unsigned char *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy) 
#line 5579 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 5583 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5596 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 5585 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DGrad(uchar1 *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy) 
#line 5586 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 5590 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5603 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 5592 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DGrad(uchar2 *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy) 
#line 5593 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 5597 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5610 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 5599 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DGrad(uchar4 *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy) 
#line 5600 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 5604 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5617 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 5612 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DGrad(short *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy) 
#line 5613 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 5617 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5630 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 5619 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DGrad(short1 *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy) 
#line 5620 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 5624 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5637 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 5626 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DGrad(short2 *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy) 
#line 5627 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 5631 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5644 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 5633 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DGrad(short4 *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy) 
#line 5634 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 5638 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5651 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 5640 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DGrad(unsigned short *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy) 
#line 5641 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 5645 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5658 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 5647 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DGrad(ushort1 *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy) 
#line 5648 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 5652 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5665 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 5654 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DGrad(ushort2 *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy) 
#line 5655 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 5659 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5672 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 5661 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DGrad(ushort4 *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy) 
#line 5662 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 5666 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5679 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 5674 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DGrad(int *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy) 
#line 5675 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 5679 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5692 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 5681 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DGrad(int1 *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy) 
#line 5682 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 5686 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5699 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 5688 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DGrad(int2 *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy) 
#line 5689 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 5693 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5706 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 5695 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DGrad(int4 *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy) 
#line 5696 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 5700 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5713 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 5702 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DGrad(unsigned *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy) 
#line 5703 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 5707 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5720 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 5709 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DGrad(uint1 *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy) 
#line 5710 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 5714 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5727 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 5716 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DGrad(uint2 *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy) 
#line 5717 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 5721 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5734 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 5723 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DGrad(uint4 *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy) 
#line 5724 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 5728 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5741 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 5738 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DGrad(long *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy) 
#line 5739 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 5743 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5756 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 5745 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DGrad(long1 *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy) 
#line 5746 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 5750 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5763 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 5752 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DGrad(long2 *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy) 
#line 5753 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 5757 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5770 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 5759 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DGrad(long4 *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy) 
#line 5760 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 5764 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5777 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 5766 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DGrad(unsigned long *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy) 
#line 5767 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 5771 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5784 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 5773 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DGrad(ulong1 *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy) 
#line 5774 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 5778 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5791 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 5780 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DGrad(ulong2 *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy) 
#line 5781 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 5785 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5798 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 5787 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DGrad(ulong4 *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy) 
#line 5788 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 5792 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5805 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 5803 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DGrad(float *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy) 
#line 5804 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 5808 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5821 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 5810 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DGrad(float1 *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy) 
#line 5811 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 5815 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5828 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 5817 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DGrad(float2 *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy) 
#line 5818 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 5822 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5835 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 5824 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DGrad(float4 *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy) 
#line 5825 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 5829 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5842 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 5837 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DGrad(char *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 5838 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 5847 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5860 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 5848 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DGrad(signed char *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 5849 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 5853 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5866 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 5855 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DGrad(char1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 5856 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 5860 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5873 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 5862 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DGrad(char2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 5863 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 5867 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5880 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 5869 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DGrad(char4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 5870 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 5874 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5887 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 5876 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DGrad(unsigned char *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 5877 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 5881 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5894 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 5883 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DGrad(uchar1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 5884 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 5888 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5901 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 5890 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DGrad(uchar2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 5891 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 5895 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5908 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 5897 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DGrad(uchar4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 5898 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 5902 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5915 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 5910 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DGrad(short *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 5911 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 5915 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5928 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 5917 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DGrad(short1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 5918 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 5922 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5935 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 5924 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DGrad(short2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 5925 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 5929 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5942 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 5931 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DGrad(short4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 5932 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 5936 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5949 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 5938 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DGrad(unsigned short *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 5939 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 5943 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5956 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 5945 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DGrad(ushort1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 5946 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 5950 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5963 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 5952 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DGrad(ushort2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 5953 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 5957 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5970 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 5959 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DGrad(ushort4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 5960 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 5964 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5977 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 5972 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DGrad(int *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 5973 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 5977 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5990 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 5979 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DGrad(int1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 5980 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 5984 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5997 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 5986 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DGrad(int2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 5987 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 5991 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6004 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 5993 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DGrad(int4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 5994 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 5998 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6011 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 6000 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DGrad(unsigned *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 6001 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 6005 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6018 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 6007 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DGrad(uint1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 6008 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 6012 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6025 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 6014 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DGrad(uint2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 6015 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 6019 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6032 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 6021 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DGrad(uint4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 6022 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 6026 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6039 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 6036 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DGrad(long *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 6037 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 6041 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6054 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 6043 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DGrad(long1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 6044 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 6048 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6061 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 6050 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DGrad(long2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 6051 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 6055 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6068 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 6057 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DGrad(long4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 6058 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 6062 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6075 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 6064 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DGrad(unsigned long *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 6065 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 6069 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6082 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 6071 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DGrad(ulong1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 6072 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 6076 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6089 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 6078 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DGrad(ulong2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 6079 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 6083 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6096 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 6085 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DGrad(ulong4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 6086 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 6090 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6103 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 6101 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DGrad(float *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 6102 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 6106 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6119 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 6108 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DGrad(float1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 6109 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 6113 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6126 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 6115 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DGrad(float2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 6116 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 6120 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6133 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 6122 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DGrad(float4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 6123 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 6127 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6140 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 6135 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredGrad(char *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy) 
#line 6136 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 6145 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6158 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 6146 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredGrad(signed char *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy) 
#line 6147 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 6151 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6164 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 6153 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredGrad(char1 *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy) 
#line 6154 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 6158 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6171 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 6160 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredGrad(char2 *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy) 
#line 6161 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 6165 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6178 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 6167 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredGrad(char4 *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy) 
#line 6168 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 6172 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6185 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 6174 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredGrad(unsigned char *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy) 
#line 6175 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 6179 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6192 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 6181 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredGrad(uchar1 *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy) 
#line 6182 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 6186 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6199 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 6188 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredGrad(uchar2 *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy) 
#line 6189 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 6193 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6206 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 6195 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredGrad(uchar4 *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy) 
#line 6196 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 6200 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6213 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 6208 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredGrad(short *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy) 
#line 6209 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 6213 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6226 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 6215 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredGrad(short1 *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy) 
#line 6216 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 6220 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6233 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 6222 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredGrad(short2 *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy) 
#line 6223 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 6227 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6240 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 6229 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredGrad(short4 *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy) 
#line 6230 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 6234 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6247 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 6236 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredGrad(unsigned short *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy) 
#line 6237 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 6241 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6254 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 6243 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredGrad(ushort1 *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy) 
#line 6244 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 6248 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6261 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 6250 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredGrad(ushort2 *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy) 
#line 6251 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 6255 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6268 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 6257 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredGrad(ushort4 *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy) 
#line 6258 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 6262 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6275 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 6270 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredGrad(int *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy) 
#line 6271 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 6275 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6288 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 6277 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredGrad(int1 *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy) 
#line 6278 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 6282 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6295 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 6284 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredGrad(int2 *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy) 
#line 6285 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 6289 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6302 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 6291 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredGrad(int4 *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy) 
#line 6292 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 6296 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6309 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 6298 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredGrad(unsigned *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy) 
#line 6299 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 6303 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6316 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 6305 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredGrad(uint1 *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy) 
#line 6306 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 6310 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6323 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 6312 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredGrad(uint2 *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy) 
#line 6313 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 6317 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6330 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 6319 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredGrad(uint4 *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy) 
#line 6320 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 6324 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6337 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 6334 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredGrad(long *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy) 
#line 6335 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 6339 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6352 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 6341 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredGrad(long1 *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy) 
#line 6342 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 6346 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6359 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 6348 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredGrad(long2 *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy) 
#line 6349 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 6353 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6366 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 6355 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredGrad(long4 *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy) 
#line 6356 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 6360 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6373 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 6362 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredGrad(unsigned long *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy) 
#line 6363 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 6367 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6380 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 6369 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredGrad(ulong1 *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy) 
#line 6370 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 6374 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6387 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 6376 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredGrad(ulong2 *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy) 
#line 6377 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 6381 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6394 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 6383 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredGrad(ulong4 *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy) 
#line 6384 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 6388 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6401 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 6399 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredGrad(float *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy) 
#line 6400 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 6404 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6417 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 6406 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredGrad(float1 *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy) 
#line 6407 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 6411 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6424 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 6413 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredGrad(float2 *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy) 
#line 6414 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 6418 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6431 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 6420 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredGrad(float4 *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy) 
#line 6421 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 6425 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6438 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 6433 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredGrad(char *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 6434 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 6443 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6456 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 6444 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredGrad(signed char *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 6445 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 6449 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6462 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 6451 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredGrad(char1 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 6452 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 6456 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6469 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 6458 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredGrad(char2 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 6459 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 6463 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6476 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 6465 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredGrad(char4 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 6466 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 6470 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6483 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 6472 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredGrad(unsigned char *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 6473 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 6477 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6490 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 6479 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredGrad(uchar1 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 6480 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 6484 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6497 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 6486 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredGrad(uchar2 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 6487 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 6491 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6504 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 6493 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredGrad(uchar4 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 6494 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 6498 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6511 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 6506 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredGrad(short *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 6507 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 6511 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6524 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 6513 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredGrad(short1 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 6514 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 6518 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6531 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 6520 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredGrad(short2 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 6521 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 6525 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6538 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 6527 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredGrad(short4 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 6528 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 6532 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6545 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 6534 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredGrad(unsigned short *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 6535 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 6539 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6552 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 6541 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredGrad(ushort1 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 6542 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 6546 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6559 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 6548 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredGrad(ushort2 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 6549 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 6553 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6566 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 6555 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredGrad(ushort4 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 6556 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 6560 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6573 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 6568 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredGrad(int *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 6569 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 6573 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6586 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 6575 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredGrad(int1 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 6576 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 6580 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6593 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 6582 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredGrad(int2 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 6583 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 6587 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6600 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 6589 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredGrad(int4 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 6590 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 6594 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6607 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 6596 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredGrad(unsigned *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 6597 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 6601 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6614 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 6603 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredGrad(uint1 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 6604 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 6608 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6621 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 6610 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredGrad(uint2 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 6611 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 6615 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6628 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 6617 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredGrad(uint4 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 6618 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 6622 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6635 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 6632 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredGrad(long *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 6633 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 6637 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6650 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 6639 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredGrad(long1 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 6640 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 6644 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6657 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 6646 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredGrad(long2 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 6647 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 6651 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6664 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 6653 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredGrad(long4 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 6654 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 6658 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6671 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 6660 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredGrad(unsigned long *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 6661 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 6665 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6678 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 6667 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredGrad(ulong1 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 6668 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 6672 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6685 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 6674 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredGrad(ulong2 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 6675 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 6679 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6692 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 6681 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredGrad(ulong4 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 6682 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 6686 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6699 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 6697 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredGrad(float *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 6698 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 6702 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6715 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 6704 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredGrad(float1 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 6705 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 6709 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6722 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 6711 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredGrad(float2 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 6712 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 6716 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6729 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 6718 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredGrad(float4 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 6719 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 6723 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6736 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\texture_indirect_functions.hpp"
#line 77 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_i8_clamp(char *, unsigned __int64, int); } 
#line 78 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_i16_clamp(short *, unsigned __int64, int); } 
#line 79 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_i32_clamp(int *, unsigned __int64, int); } 
#line 80 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_i64_clamp(__int64 *, unsigned __int64, int); } 
#line 81 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_v2i8_clamp(char *, char *, unsigned __int64, int); } 
#line 82 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_v2i16_clamp(short *, short *, unsigned __int64, int); } 
#line 83 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_v2i32_clamp(int *, int *, unsigned __int64, int); } 
#line 84 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_v2i64_clamp(__int64 *, __int64 *, unsigned __int64, int); } 
#line 85 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_v4i8_clamp(char *, char *, char *, char *, unsigned __int64, int); } 
#line 86 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_v4i16_clamp(short *, short *, short *, short *, unsigned __int64, int); } 
#line 87 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_v4i32_clamp(int *, int *, int *, int *, unsigned __int64, int); } 
#line 88 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_array_i8_clamp(char *, unsigned __int64, int, int); } 
#line 89 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_array_i16_clamp(short *, unsigned __int64, int, int); } 
#line 90 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_array_i32_clamp(int *, unsigned __int64, int, int); } 
#line 91 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_array_i64_clamp(__int64 *, unsigned __int64, int, int); } 
#line 92 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_array_v2i8_clamp(char *, char *, unsigned __int64, int, int); } 
#line 93 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_array_v2i16_clamp(short *, short *, unsigned __int64, int, int); } 
#line 94 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_array_v2i32_clamp(int *, int *, unsigned __int64, int, int); } 
#line 95 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_array_v2i64_clamp(__int64 *, __int64 *, unsigned __int64, int, int); } 
#line 96 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_array_v4i8_clamp(char *, char *, char *, char *, unsigned __int64, int, int); } 
#line 97 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_array_v4i16_clamp(short *, short *, short *, short *, unsigned __int64, int, int); } 
#line 98 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_array_v4i32_clamp(int *, int *, int *, int *, unsigned __int64, int, int); } 
#line 99 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_i8_clamp(char *, unsigned __int64, int, int); } 
#line 100 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_i16_clamp(short *, unsigned __int64, int, int); } 
#line 101 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_i32_clamp(int *, unsigned __int64, int, int); } 
#line 102 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_i64_clamp(__int64 *, unsigned __int64, int, int); } 
#line 103 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_v2i8_clamp(char *, char *, unsigned __int64, int, int); } 
#line 104 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_v2i16_clamp(short *, short *, unsigned __int64, int, int); } 
#line 105 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_v2i32_clamp(int *, int *, unsigned __int64, int, int); } 
#line 106 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_v2i64_clamp(__int64 *, __int64 *, unsigned __int64, int, int); } 
#line 107 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_v4i8_clamp(char *, char *, char *, char *, unsigned __int64, int, int); } 
#line 108 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_v4i16_clamp(short *, short *, short *, short *, unsigned __int64, int, int); } 
#line 109 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_v4i32_clamp(int *, int *, int *, int *, unsigned __int64, int, int); } 
#line 110 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_array_i8_clamp(char *, unsigned __int64, int, int, int); } 
#line 111 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_array_i16_clamp(short *, unsigned __int64, int, int, int); } 
#line 112 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_array_i32_clamp(int *, unsigned __int64, int, int, int); } 
#line 113 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_array_i64_clamp(__int64 *, unsigned __int64, int, int, int); } 
#line 114 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_array_v2i8_clamp(char *, char *, unsigned __int64, int, int, int); } 
#line 115 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_array_v2i16_clamp(short *, short *, unsigned __int64, int, int, int); } 
#line 116 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_array_v2i32_clamp(int *, int *, unsigned __int64, int, int, int); } 
#line 117 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_array_v2i64_clamp(__int64 *, __int64 *, unsigned __int64, int, int, int); } 
#line 118 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_array_v4i8_clamp(char *, char *, char *, char *, unsigned __int64, int, int, int); } 
#line 119 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_array_v4i16_clamp(short *, short *, short *, short *, unsigned __int64, int, int, int); } 
#line 120 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_array_v4i32_clamp(int *, int *, int *, int *, unsigned __int64, int, int, int); } 
#line 121 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __suld_3d_i8_clamp(char *, unsigned __int64, int, int, int); } 
#line 122 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __suld_3d_i16_clamp(short *, unsigned __int64, int, int, int); } 
#line 123 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __suld_3d_i32_clamp(int *, unsigned __int64, int, int, int); } 
#line 124 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __suld_3d_i64_clamp(__int64 *, unsigned __int64, int, int, int); } 
#line 125 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __suld_3d_v2i8_clamp(char *, char *, unsigned __int64, int, int, int); } 
#line 126 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __suld_3d_v2i16_clamp(short *, short *, unsigned __int64, int, int, int); } 
#line 127 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __suld_3d_v2i32_clamp(int *, int *, unsigned __int64, int, int, int); } 
#line 128 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __suld_3d_v2i64_clamp(__int64 *, __int64 *, unsigned __int64, int, int, int); } 
#line 129 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __suld_3d_v4i8_clamp(char *, char *, char *, char *, unsigned __int64, int, int, int); } 
#line 130 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __suld_3d_v4i16_clamp(short *, short *, short *, short *, unsigned __int64, int, int, int); } 
#line 131 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __suld_3d_v4i32_clamp(int *, int *, int *, int *, unsigned __int64, int, int, int); } 
#line 132 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_i8_trap(char *, unsigned __int64, int); } 
#line 133 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_i16_trap(short *, unsigned __int64, int); } 
#line 134 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_i32_trap(int *, unsigned __int64, int); } 
#line 135 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_i64_trap(__int64 *, unsigned __int64, int); } 
#line 136 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_v2i8_trap(char *, char *, unsigned __int64, int); } 
#line 137 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_v2i16_trap(short *, short *, unsigned __int64, int); } 
#line 138 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_v2i32_trap(int *, int *, unsigned __int64, int); } 
#line 139 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_v2i64_trap(__int64 *, __int64 *, unsigned __int64, int); } 
#line 140 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_v4i8_trap(char *, char *, char *, char *, unsigned __int64, int); } 
#line 141 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_v4i16_trap(short *, short *, short *, short *, unsigned __int64, int); } 
#line 142 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_v4i32_trap(int *, int *, int *, int *, unsigned __int64, int); } 
#line 143 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_array_i8_trap(char *, unsigned __int64, int, int); } 
#line 144 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_array_i16_trap(short *, unsigned __int64, int, int); } 
#line 145 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_array_i32_trap(int *, unsigned __int64, int, int); } 
#line 146 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_array_i64_trap(__int64 *, unsigned __int64, int, int); } 
#line 147 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_array_v2i8_trap(char *, char *, unsigned __int64, int, int); } 
#line 148 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_array_v2i16_trap(short *, short *, unsigned __int64, int, int); } 
#line 149 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_array_v2i32_trap(int *, int *, unsigned __int64, int, int); } 
#line 150 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_array_v2i64_trap(__int64 *, __int64 *, unsigned __int64, int, int); } 
#line 151 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_array_v4i8_trap(char *, char *, char *, char *, unsigned __int64, int, int); } 
#line 152 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_array_v4i16_trap(short *, short *, short *, short *, unsigned __int64, int, int); } 
#line 153 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_array_v4i32_trap(int *, int *, int *, int *, unsigned __int64, int, int); } 
#line 154 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_i8_trap(char *, unsigned __int64, int, int); } 
#line 155 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_i16_trap(short *, unsigned __int64, int, int); } 
#line 156 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_i32_trap(int *, unsigned __int64, int, int); } 
#line 157 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_i64_trap(__int64 *, unsigned __int64, int, int); } 
#line 158 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_v2i8_trap(char *, char *, unsigned __int64, int, int); } 
#line 159 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_v2i16_trap(short *, short *, unsigned __int64, int, int); } 
#line 160 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_v2i32_trap(int *, int *, unsigned __int64, int, int); } 
#line 161 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_v2i64_trap(__int64 *, __int64 *, unsigned __int64, int, int); } 
#line 162 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_v4i8_trap(char *, char *, char *, char *, unsigned __int64, int, int); } 
#line 163 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_v4i16_trap(short *, short *, short *, short *, unsigned __int64, int, int); } 
#line 164 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_v4i32_trap(int *, int *, int *, int *, unsigned __int64, int, int); } 
#line 165 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_array_i8_trap(char *, unsigned __int64, int, int, int); } 
#line 166 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_array_i16_trap(short *, unsigned __int64, int, int, int); } 
#line 167 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_array_i32_trap(int *, unsigned __int64, int, int, int); } 
#line 168 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_array_i64_trap(__int64 *, unsigned __int64, int, int, int); } 
#line 169 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_array_v2i8_trap(char *, char *, unsigned __int64, int, int, int); } 
#line 170 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_array_v2i16_trap(short *, short *, unsigned __int64, int, int, int); } 
#line 171 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_array_v2i32_trap(int *, int *, unsigned __int64, int, int, int); } 
#line 172 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_array_v2i64_trap(__int64 *, __int64 *, unsigned __int64, int, int, int); } 
#line 173 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_array_v4i8_trap(char *, char *, char *, char *, unsigned __int64, int, int, int); } 
#line 174 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_array_v4i16_trap(short *, short *, short *, short *, unsigned __int64, int, int, int); } 
#line 175 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_array_v4i32_trap(int *, int *, int *, int *, unsigned __int64, int, int, int); } 
#line 176 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __suld_3d_i8_trap(char *, unsigned __int64, int, int, int); } 
#line 177 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __suld_3d_i16_trap(short *, unsigned __int64, int, int, int); } 
#line 178 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __suld_3d_i32_trap(int *, unsigned __int64, int, int, int); } 
#line 179 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __suld_3d_i64_trap(__int64 *, unsigned __int64, int, int, int); } 
#line 180 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __suld_3d_v2i8_trap(char *, char *, unsigned __int64, int, int, int); } 
#line 181 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __suld_3d_v2i16_trap(short *, short *, unsigned __int64, int, int, int); } 
#line 182 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __suld_3d_v2i32_trap(int *, int *, unsigned __int64, int, int, int); } 
#line 183 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __suld_3d_v2i64_trap(__int64 *, __int64 *, unsigned __int64, int, int, int); } 
#line 184 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __suld_3d_v4i8_trap(char *, char *, char *, char *, unsigned __int64, int, int, int); } 
#line 185 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __suld_3d_v4i16_trap(short *, short *, short *, short *, unsigned __int64, int, int, int); } 
#line 186 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __suld_3d_v4i32_trap(int *, int *, int *, int *, unsigned __int64, int, int, int); } 
#line 187 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_i8_zero(char *, unsigned __int64, int); } 
#line 188 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_i16_zero(short *, unsigned __int64, int); } 
#line 189 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_i32_zero(int *, unsigned __int64, int); } 
#line 190 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_i64_zero(__int64 *, unsigned __int64, int); } 
#line 191 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_v2i8_zero(char *, char *, unsigned __int64, int); } 
#line 192 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_v2i16_zero(short *, short *, unsigned __int64, int); } 
#line 193 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_v2i32_zero(int *, int *, unsigned __int64, int); } 
#line 194 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_v2i64_zero(__int64 *, __int64 *, unsigned __int64, int); } 
#line 195 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_v4i8_zero(char *, char *, char *, char *, unsigned __int64, int); } 
#line 196 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_v4i16_zero(short *, short *, short *, short *, unsigned __int64, int); } 
#line 197 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_v4i32_zero(int *, int *, int *, int *, unsigned __int64, int); } 
#line 198 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_array_i8_zero(char *, unsigned __int64, int, int); } 
#line 199 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_array_i16_zero(short *, unsigned __int64, int, int); } 
#line 200 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_array_i32_zero(int *, unsigned __int64, int, int); } 
#line 201 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_array_i64_zero(__int64 *, unsigned __int64, int, int); } 
#line 202 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_array_v2i8_zero(char *, char *, unsigned __int64, int, int); } 
#line 203 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_array_v2i16_zero(short *, short *, unsigned __int64, int, int); } 
#line 204 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_array_v2i32_zero(int *, int *, unsigned __int64, int, int); } 
#line 205 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_array_v2i64_zero(__int64 *, __int64 *, unsigned __int64, int, int); } 
#line 206 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_array_v4i8_zero(char *, char *, char *, char *, unsigned __int64, int, int); } 
#line 207 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_array_v4i16_zero(short *, short *, short *, short *, unsigned __int64, int, int); } 
#line 208 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_array_v4i32_zero(int *, int *, int *, int *, unsigned __int64, int, int); } 
#line 209 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_i8_zero(char *, unsigned __int64, int, int); } 
#line 210 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_i16_zero(short *, unsigned __int64, int, int); } 
#line 211 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_i32_zero(int *, unsigned __int64, int, int); } 
#line 212 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_i64_zero(__int64 *, unsigned __int64, int, int); } 
#line 213 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_v2i8_zero(char *, char *, unsigned __int64, int, int); } 
#line 214 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_v2i16_zero(short *, short *, unsigned __int64, int, int); } 
#line 215 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_v2i32_zero(int *, int *, unsigned __int64, int, int); } 
#line 216 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_v2i64_zero(__int64 *, __int64 *, unsigned __int64, int, int); } 
#line 217 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_v4i8_zero(char *, char *, char *, char *, unsigned __int64, int, int); } 
#line 218 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_v4i16_zero(short *, short *, short *, short *, unsigned __int64, int, int); } 
#line 219 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_v4i32_zero(int *, int *, int *, int *, unsigned __int64, int, int); } 
#line 220 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_array_i8_zero(char *, unsigned __int64, int, int, int); } 
#line 221 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_array_i16_zero(short *, unsigned __int64, int, int, int); } 
#line 222 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_array_i32_zero(int *, unsigned __int64, int, int, int); } 
#line 223 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_array_i64_zero(__int64 *, unsigned __int64, int, int, int); } 
#line 224 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_array_v2i8_zero(char *, char *, unsigned __int64, int, int, int); } 
#line 225 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_array_v2i16_zero(short *, short *, unsigned __int64, int, int, int); } 
#line 226 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_array_v2i32_zero(int *, int *, unsigned __int64, int, int, int); } 
#line 227 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_array_v2i64_zero(__int64 *, __int64 *, unsigned __int64, int, int, int); } 
#line 228 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_array_v4i8_zero(char *, char *, char *, char *, unsigned __int64, int, int, int); } 
#line 229 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_array_v4i16_zero(short *, short *, short *, short *, unsigned __int64, int, int, int); } 
#line 230 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_array_v4i32_zero(int *, int *, int *, int *, unsigned __int64, int, int, int); } 
#line 231 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __suld_3d_i8_zero(char *, unsigned __int64, int, int, int); } 
#line 232 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __suld_3d_i16_zero(short *, unsigned __int64, int, int, int); } 
#line 233 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __suld_3d_i32_zero(int *, unsigned __int64, int, int, int); } 
#line 234 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __suld_3d_i64_zero(__int64 *, unsigned __int64, int, int, int); } 
#line 235 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __suld_3d_v2i8_zero(char *, char *, unsigned __int64, int, int, int); } 
#line 236 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __suld_3d_v2i16_zero(short *, short *, unsigned __int64, int, int, int); } 
#line 237 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __suld_3d_v2i32_zero(int *, int *, unsigned __int64, int, int, int); } 
#line 238 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __suld_3d_v2i64_zero(__int64 *, __int64 *, unsigned __int64, int, int, int); } 
#line 239 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __suld_3d_v4i8_zero(char *, char *, char *, char *, unsigned __int64, int, int, int); } 
#line 240 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __suld_3d_v4i16_zero(short *, short *, short *, short *, unsigned __int64, int, int, int); } 
#line 241 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __suld_3d_v4i32_zero(int *, int *, int *, int *, unsigned __int64, int, int, int); } 
#line 243 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_i8_clamp(cudaSurfaceObject_t, int, unsigned char); } 
#line 244 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_i16_clamp(cudaSurfaceObject_t, int, unsigned short); } 
#line 245 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_i32_clamp(cudaSurfaceObject_t, int, unsigned); } 
#line 246 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_i64_clamp(cudaSurfaceObject_t, int, unsigned __int64); } 
#line 247 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_v2i8_clamp(cudaSurfaceObject_t, int, uchar2); } 
#line 248 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_v2i16_clamp(cudaSurfaceObject_t, int, ushort2); } 
#line 249 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_v2i32_clamp(cudaSurfaceObject_t, int, uint2); } 
#line 250 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_v2i64_clamp(cudaSurfaceObject_t, int, ulonglong2); } 
#line 251 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_v4i8_clamp(cudaSurfaceObject_t, int, uchar4); } 
#line 252 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_v4i16_clamp(cudaSurfaceObject_t, int, ushort4); } 
#line 253 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_v4i32_clamp(cudaSurfaceObject_t, int, uint4); } 
#line 254 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_array_i8_clamp(cudaSurfaceObject_t, int, int, unsigned char); } 
#line 255 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_array_i16_clamp(cudaSurfaceObject_t, int, int, unsigned short); } 
#line 256 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_array_i32_clamp(cudaSurfaceObject_t, int, int, unsigned); } 
#line 257 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_array_i64_clamp(cudaSurfaceObject_t, int, int, unsigned __int64); } 
#line 258 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_array_v2i8_clamp(cudaSurfaceObject_t, int, int, uchar2); } 
#line 259 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_array_v2i16_clamp(cudaSurfaceObject_t, int, int, ushort2); } 
#line 260 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_array_v2i32_clamp(cudaSurfaceObject_t, int, int, uint2); } 
#line 261 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_array_v2i64_clamp(cudaSurfaceObject_t, int, int, ulonglong2); } 
#line 262 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_array_v4i8_clamp(cudaSurfaceObject_t, int, int, uchar4); } 
#line 263 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_array_v4i16_clamp(cudaSurfaceObject_t, int, int, ushort4); } 
#line 264 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_array_v4i32_clamp(cudaSurfaceObject_t, int, int, uint4); } 
#line 265 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_i8_clamp(cudaSurfaceObject_t, int, int, unsigned char); } 
#line 266 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_i16_clamp(cudaSurfaceObject_t, int, int, unsigned short); } 
#line 267 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_i32_clamp(cudaSurfaceObject_t, int, int, unsigned); } 
#line 268 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_i64_clamp(cudaSurfaceObject_t, int, int, unsigned __int64); } 
#line 269 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_v2i8_clamp(cudaSurfaceObject_t, int, int, uchar2); } 
#line 270 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_v2i16_clamp(cudaSurfaceObject_t, int, int, ushort2); } 
#line 271 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_v2i32_clamp(cudaSurfaceObject_t, int, int, uint2); } 
#line 272 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_v2i64_clamp(cudaSurfaceObject_t, int, int, ulonglong2); } 
#line 273 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_v4i8_clamp(cudaSurfaceObject_t, int, int, uchar4); } 
#line 274 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_v4i16_clamp(cudaSurfaceObject_t, int, int, ushort4); } 
#line 275 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_v4i32_clamp(cudaSurfaceObject_t, int, int, uint4); } 
#line 276 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_array_i8_clamp(cudaSurfaceObject_t, int, int, int, unsigned char); } 
#line 277 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_array_i16_clamp(cudaSurfaceObject_t, int, int, int, unsigned short); } 
#line 278 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_array_i32_clamp(cudaSurfaceObject_t, int, int, int, unsigned); } 
#line 279 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_array_i64_clamp(cudaSurfaceObject_t, int, int, int, unsigned __int64); } 
#line 280 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_array_v2i8_clamp(cudaSurfaceObject_t, int, int, int, uchar2); } 
#line 281 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_array_v2i16_clamp(cudaSurfaceObject_t, int, int, int, ushort2); } 
#line 282 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_array_v2i32_clamp(cudaSurfaceObject_t, int, int, int, uint2); } 
#line 283 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_array_v2i64_clamp(cudaSurfaceObject_t, int, int, int, ulonglong2); } 
#line 284 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_array_v4i8_clamp(cudaSurfaceObject_t, int, int, int, uchar4); } 
#line 285 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_array_v4i16_clamp(cudaSurfaceObject_t, int, int, int, ushort4); } 
#line 286 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_array_v4i32_clamp(cudaSurfaceObject_t, int, int, int, uint4); } 
#line 287 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_3d_i8_clamp(cudaSurfaceObject_t, int, int, int, unsigned char); } 
#line 288 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_3d_i16_clamp(cudaSurfaceObject_t, int, int, int, unsigned short); } 
#line 289 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_3d_i32_clamp(cudaSurfaceObject_t, int, int, int, unsigned); } 
#line 290 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_3d_i64_clamp(cudaSurfaceObject_t, int, int, int, unsigned __int64); } 
#line 291 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_3d_v2i8_clamp(cudaSurfaceObject_t, int, int, int, uchar2); } 
#line 292 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_3d_v2i16_clamp(cudaSurfaceObject_t, int, int, int, ushort2); } 
#line 293 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_3d_v2i32_clamp(cudaSurfaceObject_t, int, int, int, uint2); } 
#line 294 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_3d_v2i64_clamp(cudaSurfaceObject_t, int, int, int, ulonglong2); } 
#line 295 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_3d_v4i8_clamp(cudaSurfaceObject_t, int, int, int, uchar4); } 
#line 296 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_3d_v4i16_clamp(cudaSurfaceObject_t, int, int, int, ushort4); } 
#line 297 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_3d_v4i32_clamp(cudaSurfaceObject_t, int, int, int, uint4); } 
#line 298 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_i8_trap(cudaSurfaceObject_t, int, unsigned char); } 
#line 299 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_i16_trap(cudaSurfaceObject_t, int, unsigned short); } 
#line 300 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_i32_trap(cudaSurfaceObject_t, int, unsigned); } 
#line 301 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_i64_trap(cudaSurfaceObject_t, int, unsigned __int64); } 
#line 302 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_v2i8_trap(cudaSurfaceObject_t, int, uchar2); } 
#line 303 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_v2i16_trap(cudaSurfaceObject_t, int, ushort2); } 
#line 304 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_v2i32_trap(cudaSurfaceObject_t, int, uint2); } 
#line 305 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_v2i64_trap(cudaSurfaceObject_t, int, ulonglong2); } 
#line 306 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_v4i8_trap(cudaSurfaceObject_t, int, uchar4); } 
#line 307 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_v4i16_trap(cudaSurfaceObject_t, int, ushort4); } 
#line 308 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_v4i32_trap(cudaSurfaceObject_t, int, uint4); } 
#line 309 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_array_i8_trap(cudaSurfaceObject_t, int, int, unsigned char); } 
#line 310 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_array_i16_trap(cudaSurfaceObject_t, int, int, unsigned short); } 
#line 311 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_array_i32_trap(cudaSurfaceObject_t, int, int, unsigned); } 
#line 312 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_array_i64_trap(cudaSurfaceObject_t, int, int, unsigned __int64); } 
#line 313 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_array_v2i8_trap(cudaSurfaceObject_t, int, int, uchar2); } 
#line 314 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_array_v2i16_trap(cudaSurfaceObject_t, int, int, ushort2); } 
#line 315 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_array_v2i32_trap(cudaSurfaceObject_t, int, int, uint2); } 
#line 316 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_array_v2i64_trap(cudaSurfaceObject_t, int, int, ulonglong2); } 
#line 317 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_array_v4i8_trap(cudaSurfaceObject_t, int, int, uchar4); } 
#line 318 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_array_v4i16_trap(cudaSurfaceObject_t, int, int, ushort4); } 
#line 319 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_array_v4i32_trap(cudaSurfaceObject_t, int, int, uint4); } 
#line 320 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_i8_trap(cudaSurfaceObject_t, int, int, unsigned char); } 
#line 321 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_i16_trap(cudaSurfaceObject_t, int, int, unsigned short); } 
#line 322 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_i32_trap(cudaSurfaceObject_t, int, int, unsigned); } 
#line 323 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_i64_trap(cudaSurfaceObject_t, int, int, unsigned __int64); } 
#line 324 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_v2i8_trap(cudaSurfaceObject_t, int, int, uchar2); } 
#line 325 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_v2i16_trap(cudaSurfaceObject_t, int, int, ushort2); } 
#line 326 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_v2i32_trap(cudaSurfaceObject_t, int, int, uint2); } 
#line 327 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_v2i64_trap(cudaSurfaceObject_t, int, int, ulonglong2); } 
#line 328 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_v4i8_trap(cudaSurfaceObject_t, int, int, uchar4); } 
#line 329 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_v4i16_trap(cudaSurfaceObject_t, int, int, ushort4); } 
#line 330 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_v4i32_trap(cudaSurfaceObject_t, int, int, uint4); } 
#line 331 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_array_i8_trap(cudaSurfaceObject_t, int, int, int, unsigned char); } 
#line 332 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_array_i16_trap(cudaSurfaceObject_t, int, int, int, unsigned short); } 
#line 333 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_array_i32_trap(cudaSurfaceObject_t, int, int, int, unsigned); } 
#line 334 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_array_i64_trap(cudaSurfaceObject_t, int, int, int, unsigned __int64); } 
#line 335 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_array_v2i8_trap(cudaSurfaceObject_t, int, int, int, uchar2); } 
#line 336 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_array_v2i16_trap(cudaSurfaceObject_t, int, int, int, ushort2); } 
#line 337 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_array_v2i32_trap(cudaSurfaceObject_t, int, int, int, uint2); } 
#line 338 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_array_v2i64_trap(cudaSurfaceObject_t, int, int, int, ulonglong2); } 
#line 339 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_array_v4i8_trap(cudaSurfaceObject_t, int, int, int, uchar4); } 
#line 340 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_array_v4i16_trap(cudaSurfaceObject_t, int, int, int, ushort4); } 
#line 341 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_array_v4i32_trap(cudaSurfaceObject_t, int, int, int, uint4); } 
#line 342 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_3d_i8_trap(cudaSurfaceObject_t, int, int, int, unsigned char); } 
#line 343 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_3d_i16_trap(cudaSurfaceObject_t, int, int, int, unsigned short); } 
#line 344 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_3d_i32_trap(cudaSurfaceObject_t, int, int, int, unsigned); } 
#line 345 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_3d_i64_trap(cudaSurfaceObject_t, int, int, int, unsigned __int64); } 
#line 346 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_3d_v2i8_trap(cudaSurfaceObject_t, int, int, int, uchar2); } 
#line 347 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_3d_v2i16_trap(cudaSurfaceObject_t, int, int, int, ushort2); } 
#line 348 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_3d_v2i32_trap(cudaSurfaceObject_t, int, int, int, uint2); } 
#line 349 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_3d_v2i64_trap(cudaSurfaceObject_t, int, int, int, ulonglong2); } 
#line 350 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_3d_v4i8_trap(cudaSurfaceObject_t, int, int, int, uchar4); } 
#line 351 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_3d_v4i16_trap(cudaSurfaceObject_t, int, int, int, ushort4); } 
#line 352 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_3d_v4i32_trap(cudaSurfaceObject_t, int, int, int, uint4); } 
#line 353 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_i8_zero(cudaSurfaceObject_t, int, unsigned char); } 
#line 354 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_i16_zero(cudaSurfaceObject_t, int, unsigned short); } 
#line 355 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_i32_zero(cudaSurfaceObject_t, int, unsigned); } 
#line 356 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_i64_zero(cudaSurfaceObject_t, int, unsigned __int64); } 
#line 357 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_v2i8_zero(cudaSurfaceObject_t, int, uchar2); } 
#line 358 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_v2i16_zero(cudaSurfaceObject_t, int, ushort2); } 
#line 359 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_v2i32_zero(cudaSurfaceObject_t, int, uint2); } 
#line 360 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_v2i64_zero(cudaSurfaceObject_t, int, ulonglong2); } 
#line 361 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_v4i8_zero(cudaSurfaceObject_t, int, uchar4); } 
#line 362 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_v4i16_zero(cudaSurfaceObject_t, int, ushort4); } 
#line 363 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_v4i32_zero(cudaSurfaceObject_t, int, uint4); } 
#line 364 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_array_i8_zero(cudaSurfaceObject_t, int, int, unsigned char); } 
#line 365 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_array_i16_zero(cudaSurfaceObject_t, int, int, unsigned short); } 
#line 366 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_array_i32_zero(cudaSurfaceObject_t, int, int, unsigned); } 
#line 367 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_array_i64_zero(cudaSurfaceObject_t, int, int, unsigned __int64); } 
#line 368 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_array_v2i8_zero(cudaSurfaceObject_t, int, int, uchar2); } 
#line 369 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_array_v2i16_zero(cudaSurfaceObject_t, int, int, ushort2); } 
#line 370 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_array_v2i32_zero(cudaSurfaceObject_t, int, int, uint2); } 
#line 371 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_array_v2i64_zero(cudaSurfaceObject_t, int, int, ulonglong2); } 
#line 372 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_array_v4i8_zero(cudaSurfaceObject_t, int, int, uchar4); } 
#line 373 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_array_v4i16_zero(cudaSurfaceObject_t, int, int, ushort4); } 
#line 374 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_array_v4i32_zero(cudaSurfaceObject_t, int, int, uint4); } 
#line 375 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_i8_zero(cudaSurfaceObject_t, int, int, unsigned char); } 
#line 376 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_i16_zero(cudaSurfaceObject_t, int, int, unsigned short); } 
#line 377 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_i32_zero(cudaSurfaceObject_t, int, int, unsigned); } 
#line 378 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_i64_zero(cudaSurfaceObject_t, int, int, unsigned __int64); } 
#line 379 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_v2i8_zero(cudaSurfaceObject_t, int, int, uchar2); } 
#line 380 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_v2i16_zero(cudaSurfaceObject_t, int, int, ushort2); } 
#line 381 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_v2i32_zero(cudaSurfaceObject_t, int, int, uint2); } 
#line 382 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_v2i64_zero(cudaSurfaceObject_t, int, int, ulonglong2); } 
#line 383 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_v4i8_zero(cudaSurfaceObject_t, int, int, uchar4); } 
#line 384 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_v4i16_zero(cudaSurfaceObject_t, int, int, ushort4); } 
#line 385 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_v4i32_zero(cudaSurfaceObject_t, int, int, uint4); } 
#line 386 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_array_i8_zero(cudaSurfaceObject_t, int, int, int, unsigned char); } 
#line 387 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_array_i16_zero(cudaSurfaceObject_t, int, int, int, unsigned short); } 
#line 388 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_array_i32_zero(cudaSurfaceObject_t, int, int, int, unsigned); } 
#line 389 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_array_i64_zero(cudaSurfaceObject_t, int, int, int, unsigned __int64); } 
#line 390 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_array_v2i8_zero(cudaSurfaceObject_t, int, int, int, uchar2); } 
#line 391 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_array_v2i16_zero(cudaSurfaceObject_t, int, int, int, ushort2); } 
#line 392 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_array_v2i32_zero(cudaSurfaceObject_t, int, int, int, uint2); } 
#line 393 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_array_v2i64_zero(cudaSurfaceObject_t, int, int, int, ulonglong2); } 
#line 394 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_array_v4i8_zero(cudaSurfaceObject_t, int, int, int, uchar4); } 
#line 395 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_array_v4i16_zero(cudaSurfaceObject_t, int, int, int, ushort4); } 
#line 396 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_array_v4i32_zero(cudaSurfaceObject_t, int, int, int, uint4); } 
#line 397 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_3d_i8_zero(cudaSurfaceObject_t, int, int, int, unsigned char); } 
#line 398 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_3d_i16_zero(cudaSurfaceObject_t, int, int, int, unsigned short); } 
#line 399 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_3d_i32_zero(cudaSurfaceObject_t, int, int, int, unsigned); } 
#line 400 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_3d_i64_zero(cudaSurfaceObject_t, int, int, int, unsigned __int64); } 
#line 401 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_3d_v2i8_zero(cudaSurfaceObject_t, int, int, int, uchar2); } 
#line 402 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_3d_v2i16_zero(cudaSurfaceObject_t, int, int, int, ushort2); } 
#line 403 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_3d_v2i32_zero(cudaSurfaceObject_t, int, int, int, uint2); } 
#line 404 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_3d_v2i64_zero(cudaSurfaceObject_t, int, int, int, ulonglong2); } 
#line 405 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_3d_v4i8_zero(cudaSurfaceObject_t, int, int, int, uchar4); } 
#line 406 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_3d_v4i16_zero(cudaSurfaceObject_t, int, int, int, ushort4); } 
#line 407 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_3d_v4i32_zero(cudaSurfaceObject_t, int, int, int, uint4); } 
#line 410 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dread(char * retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 412 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dread(signed char * retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 414 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dread(char1 * retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 416 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dread(unsigned char * retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 418 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dread(uchar1 * retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 420 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dread(short * retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 422 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dread(short1 * retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 424 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dread(unsigned short * retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 426 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dread(ushort1 * retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 428 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dread(int * retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 430 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dread(int1 * retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 432 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dread(unsigned * retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 434 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dread(uint1 * retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 436 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dread(__int64 * retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 438 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dread(longlong1 * retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 440 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dread(unsigned __int64 * retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 442 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dread(ulonglong1 * retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 444 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dread(float * retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 446 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dread(float1 * retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 454 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dread(char2 * retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 456 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dread(uchar2 * retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 458 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dread(short2 * retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 460 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dread(ushort2 * retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 462 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dread(int2 * retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 464 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dread(uint2 * retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 466 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dread(longlong2 * retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 468 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dread(ulonglong2 * retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 470 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dread(float2 * retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 478 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dread(char4 * retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 480 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dread(uchar4 * retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 482 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dread(short4 * retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 484 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dread(ushort4 * retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 486 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dread(int4 * retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 488 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dread(uint4 * retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 490 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dread(float4 * retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 498 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
template< class T> static __forceinline T 
#line 499 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
surf1Dread(::cudaSurfaceObject_t surfObject, int x, ::cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 500 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)surfObject;(void)x;(void)boundaryMode;
#line 504 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
::exit(___);}











#line 517 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
#line 512 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dread(char * retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 514 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dread(signed char * retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 516 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dread(char1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 518 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dread(unsigned char * retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 520 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dread(uchar1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 522 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dread(short * retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 524 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dread(short1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 526 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dread(unsigned short * retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 528 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dread(ushort1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 530 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dread(int * retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 532 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dread(int1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 534 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dread(unsigned * retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 536 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dread(uint1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 538 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dread(__int64 * retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 540 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dread(longlong1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 542 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dread(unsigned __int64 * retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 544 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dread(ulonglong1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 546 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dread(float * retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 548 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dread(float1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 556 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dread(char2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 558 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dread(uchar2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 560 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dread(short2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 562 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dread(ushort2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 564 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dread(int2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 566 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dread(uint2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 568 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dread(longlong2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 570 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dread(ulonglong2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 572 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dread(float2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 580 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dread(char4 * retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 582 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dread(uchar4 * retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 584 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dread(short4 * retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 586 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dread(ushort4 * retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 588 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dread(int4 * retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 590 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dread(uint4 * retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 592 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dread(float4 * retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 600 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
template< class T> static __forceinline T 
#line 601 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
surf2Dread(::cudaSurfaceObject_t surfObject, int x, int y, ::cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 602 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 606 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
::exit(___);}











#line 619 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
#line 614 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dread(char * retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 616 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dread(signed char * retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 618 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dread(char1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 620 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dread(unsigned char * retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 622 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dread(uchar1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 624 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dread(short * retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 626 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dread(short1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 628 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dread(unsigned short * retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 630 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dread(ushort1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 632 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dread(int * retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 634 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dread(int1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 636 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dread(unsigned * retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 638 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dread(uint1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 640 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dread(__int64 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 642 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dread(longlong1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 644 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dread(unsigned __int64 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 646 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dread(ulonglong1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 648 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dread(float * retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 650 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dread(float1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 658 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dread(char2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 660 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dread(uchar2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 662 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dread(short2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 664 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dread(ushort2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 666 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dread(int2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 668 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dread(uint2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 670 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dread(longlong2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 672 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dread(ulonglong2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 674 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dread(float2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 682 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dread(char4 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 684 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dread(uchar4 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 686 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dread(short4 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 688 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dread(ushort4 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 690 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dread(int4 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 692 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dread(uint4 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 694 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dread(float4 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 702 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
template< class T> static __forceinline T 
#line 703 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
surf3Dread(::cudaSurfaceObject_t surfObject, int x, int y, int z, ::cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 704 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 708 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
::exit(___);}











#line 721 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
#line 716 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredread(char * retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 718 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredread(signed char * retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 720 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredread(char1 * retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 722 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredread(unsigned char * retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 724 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredread(uchar1 * retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 726 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredread(short * retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 728 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredread(short1 * retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 730 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredread(unsigned short * retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 732 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredread(ushort1 * retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 734 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredread(int * retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 736 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredread(int1 * retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 738 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredread(unsigned * retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 740 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredread(uint1 * retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 742 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredread(__int64 * retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 744 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredread(longlong1 * retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 746 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredread(unsigned __int64 * retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 748 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredread(ulonglong1 * retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 750 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredread(float * retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 752 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredread(float1 * retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 760 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredread(char2 * retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 762 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredread(uchar2 * retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 764 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredread(short2 * retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 766 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredread(ushort2 * retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 768 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredread(int2 * retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 770 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredread(uint2 * retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 772 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredread(longlong2 * retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 774 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredread(ulonglong2 * retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 776 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredread(float2 * retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 784 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredread(char4 * retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 786 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredread(uchar4 * retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 788 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredread(short4 * retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 790 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredread(ushort4 * retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 792 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredread(int4 * retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 794 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredread(uint4 * retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 796 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredread(float4 * retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 804 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
template< class T> static __forceinline T 
#line 805 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
surf1DLayeredread(::cudaSurfaceObject_t surfObject, int x, int layer, ::cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 806 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 810 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
::exit(___);}











#line 823 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
#line 818 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredread(char * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 820 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredread(signed char * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 822 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredread(char1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 824 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredread(unsigned char * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 826 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredread(uchar1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 828 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredread(short * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 830 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredread(short1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 832 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredread(unsigned short * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 834 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredread(ushort1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 836 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredread(int * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 838 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredread(int1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 840 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredread(unsigned * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 842 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredread(uint1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 844 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredread(__int64 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 846 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredread(longlong1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 848 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredread(unsigned __int64 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 850 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredread(ulonglong1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 852 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredread(float * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 854 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredread(float1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 862 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredread(char2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 864 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredread(uchar2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 866 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredread(short2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 868 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredread(ushort2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 870 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredread(int2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 872 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredread(uint2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 874 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredread(longlong2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 876 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredread(ulonglong2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 878 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredread(float2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 886 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredread(char4 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 888 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredread(uchar4 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 890 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredread(short4 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 892 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredread(ushort4 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 894 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredread(int4 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 896 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredread(uint4 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 898 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredread(float4 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 906 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
template< class T> static __forceinline T 
#line 907 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
surf2DLayeredread(::cudaSurfaceObject_t surfObject, int x, int y, int layer, ::cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 908 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 912 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
::exit(___);}











#line 925 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
#line 920 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapread(char * retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 922 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapread(signed char * retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 924 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapread(char1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 926 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapread(unsigned char * retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 928 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapread(uchar1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 930 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapread(short * retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 932 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapread(short1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 934 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapread(unsigned short * retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 936 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapread(ushort1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 938 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapread(int * retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 940 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapread(int1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 942 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapread(unsigned * retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 944 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapread(uint1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 946 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapread(__int64 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 948 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapread(longlong1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 950 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapread(unsigned __int64 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 952 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapread(ulonglong1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 954 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapread(float * retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 956 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapread(float1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 964 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapread(char2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 966 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapread(uchar2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 968 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapread(short2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 970 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapread(ushort2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 972 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapread(int2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 974 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapread(uint2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 976 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapread(longlong2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 978 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapread(ulonglong2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 980 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapread(float2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 988 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapread(char4 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 990 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapread(uchar4 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 992 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapread(short4 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 994 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapread(ushort4 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 996 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapread(int4 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 998 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapread(uint4 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1000 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapread(float4 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1008 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
template< class T> static __forceinline T 
#line 1009 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
surfCubemapread(::cudaSurfaceObject_t surfObject, int x, int y, int face, ::cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 1010 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 1014 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
::exit(___);}











#line 1027 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
#line 1022 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredread(char * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1024 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredread(signed char * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1026 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredread(char1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1028 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredread(unsigned char * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1030 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredread(uchar1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1032 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredread(short * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1034 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredread(short1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1036 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredread(unsigned short * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1038 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredread(ushort1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1040 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredread(int * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1042 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredread(int1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1044 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredread(unsigned * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1046 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredread(uint1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1048 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredread(__int64 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1050 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredread(longlong1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1052 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredread(unsigned __int64 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1054 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredread(ulonglong1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1056 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredread(float * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1058 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredread(float1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1066 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredread(char2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1068 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredread(uchar2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1070 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredread(short2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1072 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredread(ushort2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1074 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredread(int2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1076 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredread(uint2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1078 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredread(longlong2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1080 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredread(ulonglong2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1082 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredread(float2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1090 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredread(char4 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1092 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredread(uchar4 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1094 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredread(short4 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1096 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredread(ushort4 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1098 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredread(int4 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1100 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredread(uint4 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1102 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredread(float4 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1110 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
template< class T> static __forceinline T 
#line 1111 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
surfCubemapLayeredread(::cudaSurfaceObject_t surfObject, int x, int y, int layerface, ::cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 1112 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
#line 1116 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
::exit(___);}











#line 1129 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
#line 1124 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dwrite(char data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1126 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dwrite(signed char data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1128 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dwrite(char1 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1130 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dwrite(unsigned char data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1132 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dwrite(uchar1 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1134 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dwrite(short data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1136 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dwrite(short1 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1138 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dwrite(unsigned short data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1140 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dwrite(ushort1 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1142 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dwrite(int data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1144 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dwrite(int1 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1146 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dwrite(unsigned data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1148 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dwrite(uint1 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1150 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dwrite(__int64 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1152 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dwrite(longlong1 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1154 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dwrite(unsigned __int64 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1156 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dwrite(ulonglong1 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1158 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dwrite(float data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1160 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dwrite(float1 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1168 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dwrite(char2 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1170 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dwrite(uchar2 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1172 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dwrite(short2 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1174 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dwrite(ushort2 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1176 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dwrite(int2 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1178 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dwrite(uint2 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1180 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dwrite(longlong2 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1182 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dwrite(ulonglong2 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1184 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dwrite(float2 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1192 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dwrite(char4 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1194 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dwrite(uchar4 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1196 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dwrite(short4 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1198 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dwrite(ushort4 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1200 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dwrite(int4 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1202 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dwrite(uint4 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1204 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dwrite(float4 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1212 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dwrite(char data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1214 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dwrite(signed char data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1216 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dwrite(char1 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1218 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dwrite(unsigned char data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1220 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dwrite(uchar1 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1222 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dwrite(short data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1224 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dwrite(short1 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1226 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dwrite(unsigned short data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1228 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dwrite(ushort1 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1230 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dwrite(int data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1232 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dwrite(int1 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1234 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dwrite(unsigned data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1236 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dwrite(uint1 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1238 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dwrite(__int64 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1240 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dwrite(longlong1 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1242 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dwrite(unsigned __int64 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1244 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dwrite(ulonglong1 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1246 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dwrite(float data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1248 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dwrite(float1 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1256 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dwrite(char2 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1258 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dwrite(uchar2 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1260 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dwrite(short2 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1262 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dwrite(ushort2 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1264 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dwrite(int2 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1266 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dwrite(uint2 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1268 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dwrite(longlong2 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1270 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dwrite(ulonglong2 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1272 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dwrite(float2 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1280 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dwrite(char4 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1282 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dwrite(uchar4 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1284 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dwrite(short4 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1286 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dwrite(ushort4 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1288 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dwrite(int4 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1290 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dwrite(uint4 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1292 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dwrite(float4 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1301 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dwrite(char data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1303 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dwrite(signed char data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1305 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dwrite(char1 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1307 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dwrite(unsigned char data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1309 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dwrite(uchar1 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1311 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dwrite(short data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1313 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dwrite(short1 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1315 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dwrite(unsigned short data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1317 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dwrite(ushort1 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1319 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dwrite(int data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1321 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dwrite(int1 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1323 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dwrite(unsigned data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1325 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dwrite(uint1 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1327 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dwrite(__int64 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1329 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dwrite(longlong1 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1331 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dwrite(unsigned __int64 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1333 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dwrite(ulonglong1 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1335 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dwrite(float data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1337 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dwrite(float1 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1345 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dwrite(char2 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1347 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dwrite(uchar2 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1349 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dwrite(short2 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1351 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dwrite(ushort2 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1353 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dwrite(int2 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1355 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dwrite(uint2 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1357 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dwrite(longlong2 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1359 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dwrite(ulonglong2 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1361 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dwrite(float2 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1369 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dwrite(char4 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1371 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dwrite(uchar4 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1373 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dwrite(short4 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1375 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dwrite(ushort4 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1377 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dwrite(int4 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1379 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dwrite(uint4 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1381 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dwrite(float4 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1389 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredwrite(char data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1391 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredwrite(signed char data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1393 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredwrite(char1 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1395 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredwrite(unsigned char data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1397 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredwrite(uchar1 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1399 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredwrite(short data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1401 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredwrite(short1 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1403 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredwrite(unsigned short data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1405 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredwrite(ushort1 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1407 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredwrite(int data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1409 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredwrite(int1 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1411 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredwrite(unsigned data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1413 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredwrite(uint1 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1415 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredwrite(__int64 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1417 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredwrite(longlong1 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1419 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredwrite(unsigned __int64 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1421 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredwrite(ulonglong1 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1423 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredwrite(float data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1425 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredwrite(float1 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1433 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredwrite(char2 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1435 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredwrite(uchar2 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1437 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredwrite(short2 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1439 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredwrite(ushort2 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1441 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredwrite(int2 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1443 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredwrite(uint2 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1445 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredwrite(longlong2 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1447 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredwrite(ulonglong2 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1449 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredwrite(float2 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1457 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredwrite(char4 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1459 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredwrite(uchar4 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1461 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredwrite(short4 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1463 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredwrite(ushort4 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1465 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredwrite(int4 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1467 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredwrite(uint4 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1469 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredwrite(float4 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1477 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredwrite(char data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1479 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredwrite(signed char data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1481 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredwrite(char1 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1483 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredwrite(unsigned char data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1485 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredwrite(uchar1 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1487 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredwrite(short data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1489 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredwrite(short1 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1491 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredwrite(unsigned short data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1493 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredwrite(ushort1 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1495 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredwrite(int data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1497 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredwrite(int1 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1499 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredwrite(unsigned data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1501 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredwrite(uint1 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1503 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredwrite(__int64 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1505 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredwrite(longlong1 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1507 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredwrite(unsigned __int64 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1509 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredwrite(ulonglong1 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1511 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredwrite(float data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1513 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredwrite(float1 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1521 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredwrite(char2 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1523 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredwrite(uchar2 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1525 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredwrite(short2 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1527 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredwrite(ushort2 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1529 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredwrite(int2 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1531 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredwrite(uint2 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1533 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredwrite(longlong2 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1535 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredwrite(ulonglong2 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1537 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredwrite(float2 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1545 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredwrite(char4 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1547 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredwrite(uchar4 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1549 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredwrite(short4 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1551 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredwrite(ushort4 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1553 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredwrite(int4 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1555 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredwrite(uint4 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1557 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredwrite(float4 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1565 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapwrite(char data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1567 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapwrite(signed char data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1569 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapwrite(char1 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1571 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapwrite(unsigned char data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1573 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapwrite(uchar1 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1575 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapwrite(short data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1577 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapwrite(short1 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1579 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapwrite(unsigned short data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1581 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapwrite(ushort1 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1583 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapwrite(int data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1585 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapwrite(int1 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1587 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapwrite(unsigned data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1589 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapwrite(uint1 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1591 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapwrite(__int64 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1593 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapwrite(longlong1 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1595 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapwrite(unsigned __int64 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1597 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapwrite(ulonglong1 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1599 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapwrite(float data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1601 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapwrite(float1 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1609 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapwrite(char2 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1611 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapwrite(uchar2 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1613 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapwrite(short2 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1615 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapwrite(ushort2 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1617 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapwrite(int2 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1619 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapwrite(uint2 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1621 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapwrite(longlong2 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1623 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapwrite(ulonglong2 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1625 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapwrite(float2 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1633 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapwrite(char4 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1635 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapwrite(uchar4 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1637 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapwrite(short4 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1639 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapwrite(ushort4 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1641 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapwrite(int4 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1643 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapwrite(uint4 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1645 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapwrite(float4 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1653 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredwrite(char data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1655 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredwrite(signed char data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1657 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredwrite(char1 data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1659 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredwrite(unsigned char data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1661 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredwrite(uchar1 data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1663 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredwrite(short data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1665 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredwrite(short1 data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1667 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredwrite(unsigned short data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1669 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredwrite(ushort1 data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1671 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredwrite(int data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1673 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredwrite(int1 data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1675 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredwrite(unsigned data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1677 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredwrite(uint1 data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1679 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredwrite(__int64 data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1681 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredwrite(longlong1 data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1683 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredwrite(unsigned __int64 data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1685 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredwrite(ulonglong1 data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1687 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredwrite(float data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1689 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredwrite(float1 data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1697 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredwrite(char2 data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1699 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredwrite(uchar2 data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1701 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredwrite(short2 data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1703 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredwrite(ushort2 data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1705 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredwrite(int2 data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1707 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredwrite(uint2 data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1709 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredwrite(longlong2 data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1711 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredwrite(ulonglong2 data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1713 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredwrite(float2 data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1721 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredwrite(char4 data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1723 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredwrite(uchar4 data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1725 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredwrite(short4 data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1727 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredwrite(ushort4 data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1729 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredwrite(int4 data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1731 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredwrite(uint4 data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1733 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredwrite(float4 data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 76 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dread(char *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 77 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
#line 89 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 118 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 91 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dread(signed char *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 92 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
#line 104 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 133 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 106 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dread(char1 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 107 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
#line 119 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 148 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 121 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dread(unsigned char *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 122 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
#line 134 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 163 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 136 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dread(uchar1 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 137 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
#line 149 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 178 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 151 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dread(short *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 152 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
#line 164 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 193 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 166 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dread(short1 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 167 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
#line 179 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 208 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 181 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dread(unsigned short *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 182 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
#line 194 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 223 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 196 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dread(ushort1 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 197 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
#line 209 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 238 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 211 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dread(int *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 212 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
#line 224 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 253 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 226 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dread(int1 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 227 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
#line 239 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 268 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 241 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dread(unsigned *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 242 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
#line 254 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 283 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 256 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dread(uint1 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 257 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
#line 269 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 298 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 271 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dread(__int64 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 272 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
#line 284 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 313 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 286 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dread(longlong1 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 287 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
#line 299 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 328 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 301 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dread(unsigned __int64 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 302 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
#line 314 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 343 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 316 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dread(ulonglong1 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 317 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
#line 329 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 358 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 331 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dread(float *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 332 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
#line 344 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 373 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 346 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dread(float1 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 347 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
#line 359 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 388 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 367 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dread(char2 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 368 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
#line 380 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 409 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 382 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dread(uchar2 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 383 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
#line 395 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 424 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 397 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dread(short2 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 398 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
#line 410 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 439 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 412 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dread(ushort2 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 413 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
#line 425 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 454 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 427 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dread(int2 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 428 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
#line 440 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 469 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 442 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dread(uint2 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 443 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
#line 455 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 484 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 457 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dread(longlong2 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 458 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
#line 470 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 499 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 472 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dread(ulonglong2 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 473 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
#line 485 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 514 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 487 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dread(float2 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 488 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
#line 500 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 529 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 508 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dread(char4 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 509 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
#line 521 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 550 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 523 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dread(uchar4 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 524 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
#line 536 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 565 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 538 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dread(short4 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 539 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
#line 551 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 580 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 553 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dread(ushort4 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 554 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
#line 566 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 595 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 568 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dread(int4 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 569 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
#line 581 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 610 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 583 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dread(uint4 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 584 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
#line 596 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 625 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 598 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dread(float4 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 599 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
#line 611 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 640 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 619 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dread(char *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 620 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 632 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 661 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 634 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dread(signed char *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 635 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 647 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 676 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 649 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dread(char1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 650 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 662 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 691 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 664 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dread(unsigned char *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 665 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 677 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 706 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 679 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dread(uchar1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 680 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 692 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 721 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 694 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dread(short *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 695 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 707 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 736 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 709 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dread(short1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 710 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 722 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 751 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 724 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dread(unsigned short *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 725 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 737 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 766 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 739 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dread(ushort1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 740 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 752 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 781 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 754 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dread(int *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 755 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 767 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 796 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 769 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dread(int1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 770 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 782 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 811 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 784 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dread(unsigned *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 785 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 797 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 826 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 799 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dread(uint1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 800 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 812 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 841 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 814 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dread(__int64 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 815 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 827 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 856 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 829 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dread(longlong1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 830 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 842 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 871 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 844 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dread(unsigned __int64 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 845 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 857 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 886 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 859 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dread(ulonglong1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 860 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 872 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 901 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 874 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dread(float *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 875 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 887 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 916 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 889 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dread(float1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 890 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 902 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 931 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 910 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dread(char2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 911 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 923 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 952 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 925 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dread(uchar2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 926 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 938 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 967 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 940 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dread(short2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 941 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 953 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 982 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 955 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dread(ushort2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 956 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 968 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 997 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 970 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dread(int2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 971 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 983 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1012 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 985 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dread(uint2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 986 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 998 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1027 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 1000 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dread(longlong2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 1001 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 1013 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1042 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 1015 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dread(ulonglong2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 1016 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 1028 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1057 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 1030 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dread(float2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 1031 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 1043 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1072 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 1051 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dread(char4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 1052 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 1064 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1093 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 1066 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dread(uchar4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 1067 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 1079 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1108 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 1081 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dread(short4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 1082 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 1094 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1123 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 1096 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dread(ushort4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 1097 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 1109 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1138 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 1111 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dread(int4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 1112 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 1124 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1153 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 1126 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dread(uint4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 1127 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 1139 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1168 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 1141 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dread(float4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 1142 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 1154 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1183 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 1162 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dread(char *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 1163 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 1175 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1204 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 1177 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dread(signed char *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 1178 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 1190 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1219 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 1192 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dread(char1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 1193 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 1205 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1234 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 1207 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dread(unsigned char *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 1208 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 1220 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1249 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 1222 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dread(uchar1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 1223 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 1235 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1264 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 1237 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dread(short *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 1238 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 1250 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1279 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 1252 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dread(short1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 1253 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 1265 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1294 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 1267 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dread(unsigned short *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 1268 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 1280 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1309 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 1282 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dread(ushort1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 1283 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 1295 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1324 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 1297 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dread(int *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 1298 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 1310 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1339 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 1312 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dread(int1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 1313 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 1325 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1354 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 1327 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dread(unsigned *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 1328 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 1340 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1369 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 1342 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dread(uint1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 1343 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 1355 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1384 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 1357 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dread(__int64 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 1358 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 1370 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1399 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 1372 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dread(longlong1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 1373 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 1385 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1414 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 1387 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dread(unsigned __int64 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 1388 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 1400 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1429 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 1402 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dread(ulonglong1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 1403 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 1415 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1444 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 1417 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dread(float *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 1418 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 1430 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1459 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 1432 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dread(float1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 1433 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 1445 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1474 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 1453 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dread(char2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 1454 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 1466 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1495 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 1468 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dread(uchar2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 1469 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 1481 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1510 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 1483 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dread(short2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 1484 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 1496 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1525 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 1498 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dread(ushort2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 1499 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 1511 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1540 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 1513 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dread(int2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 1514 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 1526 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1555 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 1528 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dread(uint2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 1529 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 1541 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1570 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 1543 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dread(longlong2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 1544 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 1556 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1585 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 1558 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dread(ulonglong2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 1559 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 1571 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1600 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 1573 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dread(float2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 1574 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 1586 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1615 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 1594 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dread(char4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 1595 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 1607 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1636 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 1609 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dread(uchar4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 1610 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 1622 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1651 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 1624 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dread(short4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 1625 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 1637 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1666 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 1639 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dread(ushort4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 1640 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 1652 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1681 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 1654 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dread(int4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 1655 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 1667 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1696 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 1669 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dread(uint4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 1670 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 1682 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1711 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 1684 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dread(float4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 1685 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 1697 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1726 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 1705 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredread(char *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 1706 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 1718 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1747 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 1720 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredread(signed char *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 1721 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 1733 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1762 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 1735 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredread(char1 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 1736 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 1748 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1777 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 1750 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredread(unsigned char *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 1751 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 1763 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1792 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 1765 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredread(uchar1 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 1766 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 1778 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1807 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 1780 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredread(short *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 1781 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 1793 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1822 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 1795 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredread(short1 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 1796 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 1808 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1837 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 1810 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredread(unsigned short *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 1811 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 1823 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1852 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 1825 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredread(ushort1 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 1826 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 1838 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1867 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 1840 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredread(int *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 1841 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 1853 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1882 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 1855 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredread(int1 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 1856 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 1868 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1897 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 1870 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredread(unsigned *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 1871 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 1883 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1912 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 1885 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredread(uint1 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 1886 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 1898 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1927 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 1900 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredread(__int64 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 1901 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 1913 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1942 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 1915 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredread(longlong1 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 1916 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 1928 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1957 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 1930 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredread(unsigned __int64 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 1931 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 1943 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1972 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 1945 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredread(ulonglong1 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 1946 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 1958 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1987 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 1960 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredread(float *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 1961 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 1973 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2002 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 1975 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredread(float1 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 1976 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 1988 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2017 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 1996 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredread(char2 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 1997 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 2009 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2038 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 2011 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredread(uchar2 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 2012 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 2024 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2053 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 2026 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredread(short2 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 2027 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 2039 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2068 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 2041 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredread(ushort2 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 2042 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 2054 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2083 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 2056 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredread(int2 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 2057 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 2069 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2098 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 2071 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredread(uint2 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 2072 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 2084 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2113 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 2086 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredread(longlong2 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 2087 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 2099 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2128 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 2101 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredread(ulonglong2 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 2102 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 2114 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2143 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 2116 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredread(float2 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 2117 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 2129 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2158 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 2137 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredread(char4 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 2138 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 2150 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2179 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 2152 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredread(uchar4 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 2153 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 2165 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2194 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 2167 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredread(short4 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 2168 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 2180 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2209 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 2182 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredread(ushort4 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 2183 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 2195 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2224 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 2197 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredread(int4 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 2198 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 2210 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2239 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 2212 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredread(uint4 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 2213 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 2225 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2254 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 2227 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredread(float4 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 2228 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 2240 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2269 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 2248 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredread(char *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 2249 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 2261 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2290 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 2263 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredread(signed char *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 2264 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 2276 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2305 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 2278 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredread(char1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 2279 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 2291 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2320 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 2293 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredread(unsigned char *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 2294 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 2306 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2335 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 2308 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredread(uchar1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 2309 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 2321 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2350 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 2323 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredread(short *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 2324 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 2336 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2365 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 2338 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredread(short1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 2339 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 2351 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2380 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 2353 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredread(unsigned short *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 2354 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 2366 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2395 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 2368 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredread(ushort1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 2369 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 2381 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2410 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 2383 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredread(int *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 2384 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 2396 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2425 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 2398 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredread(int1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 2399 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 2411 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2440 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 2413 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredread(unsigned *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 2414 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 2426 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2455 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 2428 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredread(uint1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 2429 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 2441 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2470 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 2443 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredread(__int64 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 2444 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 2456 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2485 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 2458 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredread(longlong1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 2459 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 2471 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2500 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 2473 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredread(unsigned __int64 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 2474 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 2486 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2515 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 2488 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredread(ulonglong1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 2489 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 2501 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2530 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 2503 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredread(float *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 2504 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 2516 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2545 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 2518 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredread(float1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 2519 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 2531 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2560 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 2539 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredread(char2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 2540 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 2552 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2581 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 2554 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredread(uchar2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 2555 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 2567 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2596 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 2569 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredread(short2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 2570 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 2582 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2611 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 2584 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredread(ushort2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 2585 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 2597 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2626 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 2599 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredread(int2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 2600 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 2612 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2641 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 2614 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredread(uint2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 2615 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 2627 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2656 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 2629 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredread(longlong2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 2630 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 2642 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2671 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 2644 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredread(ulonglong2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 2645 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 2657 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2686 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 2659 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredread(float2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 2660 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 2672 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2701 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 2680 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredread(char4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 2681 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 2693 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2722 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 2695 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredread(uchar4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 2696 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 2708 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2737 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 2710 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredread(short4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 2711 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 2723 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2752 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 2725 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredread(ushort4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 2726 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 2738 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2767 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 2740 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredread(int4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 2741 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 2753 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2782 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 2755 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredread(uint4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 2756 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 2768 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2797 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 2770 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredread(float4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 2771 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 2783 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2812 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 2791 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapread(char *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 2792 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 2804 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2833 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 2806 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapread(signed char *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 2807 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 2819 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2848 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 2821 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapread(char1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 2822 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 2834 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2863 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 2836 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapread(unsigned char *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 2837 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 2849 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2878 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 2851 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapread(uchar1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 2852 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 2864 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2893 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 2866 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapread(short *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 2867 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 2879 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2908 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 2881 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapread(short1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 2882 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 2894 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2923 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 2896 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapread(unsigned short *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 2897 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 2909 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2938 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 2911 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapread(ushort1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 2912 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 2924 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2953 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 2926 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapread(int *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 2927 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 2939 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2968 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 2941 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapread(int1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 2942 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 2954 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2983 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 2956 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapread(unsigned *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 2957 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 2969 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2998 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 2971 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapread(uint1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 2972 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 2984 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 3013 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 2986 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapread(__int64 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 2987 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 2999 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 3028 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 3001 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapread(longlong1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 3002 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 3014 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 3043 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 3016 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapread(unsigned __int64 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 3017 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 3029 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 3058 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 3031 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapread(ulonglong1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 3032 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 3044 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 3073 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 3046 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapread(float *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 3047 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 3059 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 3088 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 3061 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapread(float1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 3062 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 3074 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 3103 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 3082 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapread(char2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 3083 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 3095 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 3124 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 3097 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapread(uchar2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 3098 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 3110 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 3139 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 3112 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapread(short2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 3113 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 3125 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 3154 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 3127 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapread(ushort2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 3128 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 3140 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 3169 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 3142 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapread(int2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 3143 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 3155 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 3184 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 3157 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapread(uint2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 3158 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 3170 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 3199 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 3172 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapread(longlong2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 3173 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 3185 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 3214 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 3187 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapread(ulonglong2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 3188 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 3200 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 3229 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 3202 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapread(float2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 3203 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 3215 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 3244 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 3223 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapread(char4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 3224 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 3236 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 3265 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 3238 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapread(uchar4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 3239 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 3251 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 3280 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 3253 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapread(short4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 3254 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 3266 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 3295 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 3268 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapread(ushort4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 3269 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 3281 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 3310 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 3283 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapread(int4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 3284 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 3296 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 3325 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 3298 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapread(uint4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 3299 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 3311 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 3340 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 3313 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapread(float4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 3314 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 3326 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 3355 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 3334 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredread(char *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 3335 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
#line 3347 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 3376 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 3349 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredread(signed char *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 3350 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
#line 3362 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 3391 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 3364 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredread(char1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 3365 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
#line 3377 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 3406 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 3379 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredread(unsigned char *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 3380 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
#line 3392 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 3421 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 3394 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredread(uchar1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 3395 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
#line 3407 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 3436 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 3409 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredread(short *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 3410 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
#line 3422 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 3451 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 3424 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredread(short1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 3425 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
#line 3437 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 3466 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 3439 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredread(unsigned short *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 3440 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
#line 3452 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 3481 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 3454 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredread(ushort1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 3455 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
#line 3467 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 3496 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 3469 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredread(int *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 3470 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
#line 3482 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 3511 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 3484 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredread(int1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 3485 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
#line 3497 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 3526 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 3499 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredread(unsigned *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 3500 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
#line 3512 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 3541 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 3514 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredread(uint1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 3515 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
#line 3527 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 3556 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 3529 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredread(__int64 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 3530 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
#line 3542 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 3571 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 3544 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredread(longlong1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 3545 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
#line 3557 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 3586 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 3559 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredread(unsigned __int64 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 3560 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
#line 3572 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 3601 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 3574 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredread(ulonglong1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 3575 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
#line 3587 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 3616 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 3589 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredread(float *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 3590 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
#line 3602 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 3631 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 3604 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredread(float1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 3605 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
#line 3617 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 3646 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 3625 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredread(char2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 3626 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
#line 3638 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 3667 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 3640 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredread(uchar2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 3641 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
#line 3653 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 3682 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 3655 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredread(short2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 3656 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
#line 3668 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 3697 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 3670 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredread(ushort2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 3671 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
#line 3683 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 3712 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 3685 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredread(int2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 3686 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
#line 3698 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 3727 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 3700 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredread(uint2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 3701 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
#line 3713 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 3742 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 3715 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredread(longlong2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 3716 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
#line 3728 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 3757 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 3730 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredread(ulonglong2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 3731 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
#line 3743 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 3772 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 3745 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredread(float2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 3746 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
#line 3758 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 3787 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 3766 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredread(char4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 3767 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
#line 3779 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 3808 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 3781 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredread(uchar4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 3782 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
#line 3794 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 3823 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 3796 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredread(short4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 3797 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
#line 3809 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 3838 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 3811 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredread(ushort4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 3812 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
#line 3824 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 3853 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 3826 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredread(int4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 3827 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
#line 3839 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 3868 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 3841 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredread(uint4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 3842 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
#line 3854 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 3883 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 3856 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredread(float4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 3857 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
#line 3869 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 3898 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 3877 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dwrite(char data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 3878 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
#line 3888 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 3913 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 3890 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dwrite(signed char data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 3891 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
#line 3901 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 3926 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 3903 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dwrite(char1 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 3904 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
#line 3914 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 3939 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 3916 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dwrite(unsigned char data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 3917 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
#line 3927 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 3952 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 3929 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dwrite(uchar1 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 3930 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
#line 3940 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 3965 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 3942 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dwrite(short data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 3943 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
#line 3953 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 3978 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 3955 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dwrite(short1 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 3956 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
#line 3966 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 3991 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 3968 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dwrite(unsigned short data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 3969 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
#line 3979 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4004 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 3981 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dwrite(ushort1 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 3982 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
#line 3992 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4017 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 3994 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dwrite(int data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 3995 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
#line 4005 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4030 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 4007 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dwrite(int1 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 4008 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
#line 4018 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4043 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 4020 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dwrite(unsigned data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 4021 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
#line 4031 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4056 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 4033 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dwrite(uint1 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 4034 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
#line 4044 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4069 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 4046 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dwrite(__int64 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 4047 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
#line 4057 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4082 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 4059 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dwrite(longlong1 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 4060 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
#line 4070 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4095 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 4072 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dwrite(unsigned __int64 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 4073 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
#line 4083 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4108 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 4085 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dwrite(ulonglong1 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 4086 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
#line 4096 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4121 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 4098 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dwrite(float data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 4099 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
#line 4112 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 4141 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 4114 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dwrite(float1 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 4115 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
#line 4128 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 4157 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 4136 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dwrite(char2 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 4137 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
#line 4147 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4172 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 4149 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dwrite(uchar2 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 4150 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
#line 4160 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4185 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 4162 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dwrite(short2 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 4163 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
#line 4173 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4198 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 4175 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dwrite(ushort2 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 4176 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
#line 4186 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4211 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 4188 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dwrite(int2 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 4189 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
#line 4199 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4224 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 4201 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dwrite(uint2 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 4202 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
#line 4212 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4237 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 4214 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dwrite(longlong2 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 4215 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
#line 4225 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4250 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 4227 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dwrite(ulonglong2 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 4228 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
#line 4238 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4263 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 4240 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dwrite(float2 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 4241 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
#line 4254 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 4283 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 4262 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dwrite(char4 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 4263 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
#line 4273 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4298 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 4275 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dwrite(uchar4 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 4276 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
#line 4286 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4311 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 4288 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dwrite(short4 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 4289 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
#line 4299 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4324 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 4301 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dwrite(ushort4 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 4302 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
#line 4312 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4337 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 4314 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dwrite(int4 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 4315 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
#line 4325 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4350 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 4327 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dwrite(uint4 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 4328 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
#line 4338 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4363 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 4340 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dwrite(float4 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 4341 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
#line 4354 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 4383 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 4362 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dwrite(char data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 4363 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 4373 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4398 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 4375 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dwrite(signed char data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 4376 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 4386 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4411 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 4388 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dwrite(char1 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 4389 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 4399 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4424 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 4401 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dwrite(unsigned char data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 4402 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 4412 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4437 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 4414 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dwrite(uchar1 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 4415 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 4425 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4450 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 4427 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dwrite(short data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 4428 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 4438 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4463 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 4440 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dwrite(short1 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 4441 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 4451 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4476 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 4453 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dwrite(unsigned short data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 4454 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 4464 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4489 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 4466 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dwrite(ushort1 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 4467 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 4477 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4502 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 4479 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dwrite(int data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 4480 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 4490 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4515 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 4492 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dwrite(int1 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 4493 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 4503 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4528 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 4505 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dwrite(unsigned data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 4506 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 4516 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4541 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 4518 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dwrite(uint1 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 4519 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 4529 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4554 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 4531 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dwrite(__int64 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 4532 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 4542 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4567 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 4544 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dwrite(longlong1 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 4545 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 4555 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4580 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 4557 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dwrite(unsigned __int64 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 4558 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 4568 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4593 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 4570 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dwrite(ulonglong1 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 4571 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 4581 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4606 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 4583 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dwrite(float data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 4584 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 4597 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 4626 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 4599 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dwrite(float1 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 4600 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 4613 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 4642 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 4621 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dwrite(char2 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 4622 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 4632 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4657 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 4634 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dwrite(uchar2 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 4635 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 4645 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4670 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 4647 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dwrite(short2 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 4648 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 4658 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4683 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 4660 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dwrite(ushort2 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 4661 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 4671 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4696 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 4673 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dwrite(int2 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 4674 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 4684 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4709 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 4686 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dwrite(uint2 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 4687 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 4697 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4722 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 4699 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dwrite(longlong2 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 4700 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 4710 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4735 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 4712 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dwrite(ulonglong2 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 4713 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 4723 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4748 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 4725 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dwrite(float2 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 4726 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 4739 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 4768 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 4747 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dwrite(char4 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 4748 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 4758 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4783 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 4760 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dwrite(uchar4 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 4761 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 4771 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4796 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 4773 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dwrite(short4 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 4774 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 4784 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4809 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 4786 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dwrite(ushort4 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 4787 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 4797 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4822 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 4799 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dwrite(int4 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 4800 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 4810 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4835 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 4812 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dwrite(uint4 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 4813 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 4823 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4848 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 4825 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dwrite(float4 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 4826 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 4839 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 4868 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 4848 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dwrite(char data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 4849 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 4859 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4884 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 4861 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dwrite(signed char data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 4862 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 4872 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4897 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 4874 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dwrite(char1 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 4875 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 4885 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4910 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 4887 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dwrite(unsigned char data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 4888 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 4898 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4923 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 4900 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dwrite(uchar1 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 4901 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 4911 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4936 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 4913 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dwrite(short data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 4914 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 4924 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4949 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 4926 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dwrite(short1 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 4927 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 4937 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4962 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 4939 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dwrite(unsigned short data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 4940 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 4950 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4975 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 4952 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dwrite(ushort1 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 4953 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 4963 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4988 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 4965 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dwrite(int data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 4966 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 4976 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5001 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 4978 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dwrite(int1 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 4979 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 4989 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5014 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 4991 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dwrite(unsigned data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 4992 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 5002 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5027 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 5004 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dwrite(uint1 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 5005 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 5015 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5040 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 5017 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dwrite(__int64 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 5018 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 5028 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5053 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 5030 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dwrite(longlong1 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 5031 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 5041 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5066 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 5043 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dwrite(unsigned __int64 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 5044 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 5054 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5079 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 5056 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dwrite(ulonglong1 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 5057 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 5067 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5092 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 5069 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dwrite(float data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 5070 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 5083 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 5112 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 5085 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dwrite(float1 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 5086 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 5099 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 5128 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 5107 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dwrite(char2 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 5108 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 5118 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5143 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 5120 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dwrite(uchar2 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 5121 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 5131 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5156 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 5133 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dwrite(short2 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 5134 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 5144 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5169 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 5146 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dwrite(ushort2 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 5147 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 5157 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5182 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 5159 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dwrite(int2 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 5160 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 5170 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5195 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 5172 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dwrite(uint2 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 5173 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 5183 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5208 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 5185 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dwrite(longlong2 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 5186 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 5196 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5221 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 5198 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dwrite(ulonglong2 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 5199 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 5209 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5234 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 5211 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dwrite(float2 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 5212 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 5225 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 5254 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 5233 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dwrite(char4 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 5234 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 5244 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5269 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 5246 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dwrite(uchar4 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 5247 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 5257 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5282 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 5259 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dwrite(short4 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 5260 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 5270 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5295 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 5272 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dwrite(ushort4 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 5273 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 5283 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5308 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 5285 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dwrite(int4 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 5286 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 5296 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5321 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 5298 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dwrite(uint4 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 5299 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 5309 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5334 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 5311 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dwrite(float4 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 5312 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 5325 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 5354 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 5333 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredwrite(char data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 5334 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 5344 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5369 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 5346 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredwrite(signed char data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 5347 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 5357 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5382 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 5359 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredwrite(char1 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 5360 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 5370 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5395 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 5372 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredwrite(unsigned char data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 5373 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 5383 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5408 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 5385 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredwrite(uchar1 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 5386 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 5396 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5421 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 5398 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredwrite(short data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 5399 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 5409 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5434 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 5411 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredwrite(short1 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 5412 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 5422 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5447 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 5424 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredwrite(unsigned short data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 5425 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 5435 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5460 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 5437 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredwrite(ushort1 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 5438 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 5448 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5473 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 5450 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredwrite(int data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 5451 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 5461 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5486 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 5463 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredwrite(int1 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 5464 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 5474 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5499 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 5476 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredwrite(unsigned data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 5477 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 5487 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5512 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 5489 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredwrite(uint1 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 5490 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 5500 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5525 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 5502 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredwrite(__int64 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 5503 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 5513 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5538 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 5515 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredwrite(longlong1 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 5516 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 5526 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5551 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 5528 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredwrite(unsigned __int64 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 5529 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 5539 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5564 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 5541 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredwrite(ulonglong1 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 5542 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 5552 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5577 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 5554 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredwrite(float data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 5555 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 5568 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 5597 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 5570 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredwrite(float1 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 5571 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 5584 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 5613 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 5592 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredwrite(char2 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 5593 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 5603 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5628 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 5605 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredwrite(uchar2 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 5606 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 5616 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5641 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 5618 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredwrite(short2 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 5619 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 5629 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5654 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 5631 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredwrite(ushort2 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 5632 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 5642 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5667 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 5644 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredwrite(int2 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 5645 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 5655 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5680 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 5657 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredwrite(uint2 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 5658 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 5668 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5693 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 5670 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredwrite(longlong2 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 5671 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 5681 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5706 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 5683 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredwrite(ulonglong2 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 5684 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 5694 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5719 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 5696 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredwrite(float2 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 5697 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 5710 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 5739 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 5718 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredwrite(char4 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 5719 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 5729 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5754 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 5731 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredwrite(uchar4 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 5732 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 5742 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5767 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 5744 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredwrite(short4 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 5745 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 5755 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5780 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 5757 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredwrite(ushort4 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 5758 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 5768 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5793 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 5770 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredwrite(int4 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 5771 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 5781 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5806 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 5783 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredwrite(uint4 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 5784 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 5794 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5819 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 5796 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredwrite(float4 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 5797 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 5810 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 5839 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 5818 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredwrite(char data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 5819 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 5829 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5854 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 5831 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredwrite(signed char data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 5832 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 5842 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5867 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 5844 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredwrite(char1 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 5845 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 5855 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5880 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 5857 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredwrite(unsigned char data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 5858 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 5868 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5893 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 5870 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredwrite(uchar1 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 5871 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 5881 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5906 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 5883 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredwrite(short data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 5884 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 5894 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5919 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 5896 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredwrite(short1 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 5897 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 5907 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5932 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 5909 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredwrite(unsigned short data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 5910 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 5920 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5945 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 5922 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredwrite(ushort1 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 5923 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 5933 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5958 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 5935 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredwrite(int data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 5936 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 5946 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5971 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 5948 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredwrite(int1 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 5949 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 5959 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5984 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 5961 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredwrite(unsigned data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 5962 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 5972 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5997 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 5974 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredwrite(uint1 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 5975 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 5985 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6010 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 5987 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredwrite(__int64 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 5988 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 5998 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6023 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 6000 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredwrite(longlong1 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 6001 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 6011 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6036 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 6013 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredwrite(unsigned __int64 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 6014 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 6024 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6049 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 6026 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredwrite(ulonglong1 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 6027 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 6037 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6062 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 6039 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredwrite(float data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 6040 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 6053 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 6082 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 6055 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredwrite(float1 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 6056 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 6069 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 6098 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 6077 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredwrite(char2 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 6078 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 6088 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6113 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 6090 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredwrite(uchar2 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 6091 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 6101 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6126 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 6103 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredwrite(short2 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 6104 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 6114 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6139 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 6116 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredwrite(ushort2 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 6117 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 6127 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6152 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 6129 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredwrite(int2 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 6130 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 6140 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6165 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 6142 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredwrite(uint2 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 6143 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 6153 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6178 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 6155 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredwrite(longlong2 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 6156 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 6166 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6191 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 6168 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredwrite(ulonglong2 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 6169 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 6179 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6204 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 6181 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredwrite(float2 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 6182 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 6195 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 6224 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 6203 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredwrite(char4 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 6204 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 6214 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6239 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 6216 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredwrite(uchar4 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 6217 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 6227 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6252 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 6229 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredwrite(short4 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 6230 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 6240 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6265 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 6242 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredwrite(ushort4 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 6243 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 6253 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6278 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 6255 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredwrite(int4 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 6256 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 6266 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6291 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 6268 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredwrite(uint4 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 6269 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 6279 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6304 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 6281 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredwrite(float4 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 6282 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 6295 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 6324 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 6303 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapwrite(char data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 6304 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 6314 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6339 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 6316 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapwrite(signed char data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 6317 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 6327 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6352 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 6329 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapwrite(char1 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 6330 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 6340 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6365 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 6342 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapwrite(unsigned char data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 6343 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 6353 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6378 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 6355 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapwrite(uchar1 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 6356 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 6366 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6391 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 6368 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapwrite(short data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 6369 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 6379 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6404 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 6381 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapwrite(short1 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 6382 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 6392 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6417 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 6394 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapwrite(unsigned short data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 6395 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 6405 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6430 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 6407 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapwrite(ushort1 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 6408 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 6418 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6443 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 6420 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapwrite(int data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 6421 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 6431 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6456 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 6433 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapwrite(int1 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 6434 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 6444 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6469 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 6446 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapwrite(unsigned data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 6447 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 6457 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6482 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 6459 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapwrite(uint1 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 6460 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 6470 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6495 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 6472 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapwrite(__int64 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 6473 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 6483 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6508 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 6485 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapwrite(longlong1 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 6486 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 6496 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6521 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 6498 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapwrite(unsigned __int64 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 6499 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 6509 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6534 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 6511 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapwrite(ulonglong1 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 6512 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 6522 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6547 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 6524 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapwrite(float data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 6525 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 6538 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 6567 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 6540 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapwrite(float1 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 6541 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 6554 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 6583 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 6562 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapwrite(char2 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 6563 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 6573 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6598 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 6575 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapwrite(uchar2 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 6576 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 6586 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6611 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 6588 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapwrite(short2 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 6589 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 6599 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6624 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 6601 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapwrite(ushort2 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 6602 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 6612 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6637 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 6614 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapwrite(int2 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 6615 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 6625 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6650 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 6627 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapwrite(uint2 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 6628 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 6638 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6663 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 6640 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapwrite(longlong2 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 6641 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 6651 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6676 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 6653 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapwrite(ulonglong2 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 6654 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 6664 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6689 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 6666 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapwrite(float2 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 6667 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 6680 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 6709 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 6688 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapwrite(char4 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 6689 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 6699 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6724 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 6701 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapwrite(uchar4 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 6702 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 6712 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6737 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 6714 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapwrite(short4 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 6715 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 6725 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6750 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 6727 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapwrite(ushort4 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 6728 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 6738 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6763 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 6740 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapwrite(int4 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 6741 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 6751 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6776 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 6753 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapwrite(uint4 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 6754 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 6764 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6789 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 6766 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapwrite(float4 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 6767 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 6780 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 6809 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 6788 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(char data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 6789 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
#line 6799 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6824 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 6801 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(signed char data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 6802 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
#line 6812 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6837 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 6814 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(char1 data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 6815 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
#line 6825 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6850 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 6827 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(unsigned char data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 6828 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
#line 6838 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6863 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 6840 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(uchar1 data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 6841 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
#line 6851 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6876 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 6853 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(short data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 6854 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
#line 6864 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6889 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 6866 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(short1 data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 6867 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
#line 6877 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6902 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 6879 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(unsigned short data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 6880 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
#line 6890 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6915 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 6892 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(ushort1 data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 6893 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
#line 6903 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6928 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 6905 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(int data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 6906 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
#line 6916 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6941 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 6918 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(int1 data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 6919 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
#line 6929 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6954 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 6931 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(unsigned data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 6932 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
#line 6942 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6967 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 6944 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(uint1 data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 6945 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
#line 6955 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6980 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 6957 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(__int64 data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 6958 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
#line 6968 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6993 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 6970 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(longlong1 data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 6971 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
#line 6981 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 7006 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 6983 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(unsigned __int64 data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 6984 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
#line 6994 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 7019 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 6996 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(ulonglong1 data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 6997 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
#line 7007 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 7032 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 7009 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(float data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 7010 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
#line 7023 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 7052 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 7025 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(float1 data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 7026 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
#line 7039 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 7068 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 7047 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(char2 data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 7048 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
#line 7058 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 7083 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 7060 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(uchar2 data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 7061 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
#line 7071 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 7096 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 7073 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(short2 data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 7074 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
#line 7084 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 7109 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 7086 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(ushort2 data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 7087 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
#line 7097 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 7122 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 7099 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(int2 data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 7100 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
#line 7110 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 7135 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 7112 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(uint2 data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 7113 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
#line 7123 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 7148 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 7125 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(longlong2 data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 7126 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
#line 7136 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 7161 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 7138 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(ulonglong2 data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 7139 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
#line 7149 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 7174 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 7151 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(float2 data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 7152 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
#line 7165 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 7194 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 7173 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(char4 data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 7174 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
#line 7184 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 7209 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 7186 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(uchar4 data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 7187 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
#line 7197 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 7222 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 7199 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(short4 data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 7200 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
#line 7210 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 7235 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 7212 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(ushort4 data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 7213 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
#line 7223 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 7248 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 7225 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(int4 data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 7226 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
#line 7236 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 7261 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 7238 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(uint4 data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 7239 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
#line 7249 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 7274 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 7251 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(float4 data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 7252 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
#line 7265 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 7294 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\surface_indirect_functions.hpp"
#line 71 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_launch_parameters.h"
extern "C" const uint3 __device_builtin_variable_threadIdx; 
#line 72 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_launch_parameters.h"
extern "C" const uint3 __device_builtin_variable_blockIdx; 
#line 73 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_launch_parameters.h"
extern "C" const dim3 __device_builtin_variable_blockDim; 
#line 74 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_launch_parameters.h"
extern "C" const dim3 __device_builtin_variable_gridDim; 
#line 75 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\device_launch_parameters.h"
extern "C" const int __device_builtin_variable_warpSize; 
#line 172 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
template< class T> static __inline ::cudaError_t 
#line 173 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
cudaLaunchKernel(const T *
#line 174 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
func, ::dim3 
#line 175 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
gridDim, ::dim3 
#line 176 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
blockDim, void **
#line 177 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
args, ::size_t 
#line 178 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
sharedMem = 0, ::cudaStream_t 
#line 179 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
stream = 0) 
#line 181 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
{ 
#line 182 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
return ::cudaLaunchKernel((const void *)func, gridDim, blockDim, args, sharedMem, stream); 
#line 183 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
} 
#line 210 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
template< class T> static __inline ::cudaError_t 
#line 211 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
cudaSetupArgument(T 
#line 212 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
arg, ::size_t 
#line 213 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
offset) 
#line 215 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
{ 
#line 216 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
return ::cudaSetupArgument((const void *)(&arg), sizeof(T), offset); 
#line 217 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
} 
#line 249 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
static __inline cudaError_t cudaEventCreate(cudaEvent_t *
#line 250 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
event, unsigned 
#line 251 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
flags) 
#line 253 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
{ 
#line 254 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
return ::cudaEventCreateWithFlags(event, flags); 
#line 255 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
} 
#line 312 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
static __inline cudaError_t cudaMallocHost(void **
#line 313 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
ptr, size_t 
#line 314 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
size, unsigned 
#line 315 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
flags) 
#line 317 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
{ 
#line 318 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
return ::cudaHostAlloc(ptr, size, flags); 
#line 319 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
} 
#line 321 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
template< class T> static __inline ::cudaError_t 
#line 322 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
cudaHostAlloc(T **
#line 323 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
ptr, ::size_t 
#line 324 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
size, unsigned 
#line 325 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
flags) 
#line 327 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
{ 
#line 328 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
return ::cudaHostAlloc((void **)((void *)ptr), size, flags); 
#line 329 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
} 
#line 331 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
template< class T> static __inline ::cudaError_t 
#line 332 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
cudaHostGetDevicePointer(T **
#line 333 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
pDevice, void *
#line 334 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
pHost, unsigned 
#line 335 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
flags) 
#line 337 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
{ 
#line 338 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
return ::cudaHostGetDevicePointer((void **)((void *)pDevice), pHost, flags); 
#line 339 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
} 
#line 410 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
template< class T> static __inline ::cudaError_t 
#line 411 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
cudaMallocManaged(T **
#line 412 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
devPtr, ::size_t 
#line 413 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
size, unsigned 
#line 414 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
flags = 1) 
#line 416 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
{ 
#line 417 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
return ::cudaMallocManaged((void **)((void *)devPtr), size, flags); 
#line 418 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
} 
#line 486 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
template< class T> static __inline ::cudaError_t 
#line 487 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
cudaStreamAttachMemAsync(::cudaStream_t 
#line 488 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
stream, T *
#line 489 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
devPtr, ::size_t 
#line 490 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
length = 0, unsigned 
#line 491 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
flags = 4) 
#line 493 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
{ 
#line 494 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
return ::cudaStreamAttachMemAsync(stream, (void *)devPtr, length, flags); 
#line 495 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
} 
#line 497 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
template< class T> __inline ::cudaError_t 
#line 498 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
cudaMalloc(T **
#line 499 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
devPtr, ::size_t 
#line 500 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
size) 
#line 502 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
{ 
#line 503 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
return ::cudaMalloc((void **)((void *)devPtr), size); 
#line 504 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
} 
#line 506 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
template< class T> static __inline ::cudaError_t 
#line 507 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
cudaMallocHost(T **
#line 508 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
ptr, ::size_t 
#line 509 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
size, unsigned 
#line 510 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
flags = 0) 
#line 512 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
{ 
#line 513 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
return cudaMallocHost((void **)((void *)ptr), size, flags); 
#line 514 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
} 
#line 516 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
template< class T> static __inline ::cudaError_t 
#line 517 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
cudaMallocPitch(T **
#line 518 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
devPtr, ::size_t *
#line 519 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
pitch, ::size_t 
#line 520 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
width, ::size_t 
#line 521 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
height) 
#line 523 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
{ 
#line 524 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
return ::cudaMallocPitch((void **)((void *)devPtr), pitch, width, height); 
#line 525 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
} 
#line 562 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
template< class T> static __inline ::cudaError_t 
#line 563 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
cudaMemcpyToSymbol(const T &
#line 564 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
symbol, const void *
#line 565 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
src, ::size_t 
#line 566 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
count, ::size_t 
#line 567 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
offset = 0, ::cudaMemcpyKind 
#line 568 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
kind = cudaMemcpyHostToDevice) 
#line 570 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
{ 
#line 571 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
return ::cudaMemcpyToSymbol((const void *)(&symbol), src, count, offset, kind); 
#line 572 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
} 
#line 614 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
template< class T> static __inline ::cudaError_t 
#line 615 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
cudaMemcpyToSymbolAsync(const T &
#line 616 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
symbol, const void *
#line 617 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
src, ::size_t 
#line 618 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
count, ::size_t 
#line 619 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
offset = 0, ::cudaMemcpyKind 
#line 620 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
kind = cudaMemcpyHostToDevice, ::cudaStream_t 
#line 621 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
stream = 0) 
#line 623 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
{ 
#line 624 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
return ::cudaMemcpyToSymbolAsync((const void *)(&symbol), src, count, offset, kind, stream); 
#line 625 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
} 
#line 660 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
template< class T> static __inline ::cudaError_t 
#line 661 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
cudaMemcpyFromSymbol(void *
#line 662 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
dst, const T &
#line 663 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
symbol, ::size_t 
#line 664 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
count, ::size_t 
#line 665 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
offset = 0, ::cudaMemcpyKind 
#line 666 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
kind = cudaMemcpyDeviceToHost) 
#line 668 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
{ 
#line 669 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
return ::cudaMemcpyFromSymbol(dst, (const void *)(&symbol), count, offset, kind); 
#line 670 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
} 
#line 712 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
template< class T> static __inline ::cudaError_t 
#line 713 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
cudaMemcpyFromSymbolAsync(void *
#line 714 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
dst, const T &
#line 715 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
symbol, ::size_t 
#line 716 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
count, ::size_t 
#line 717 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
offset = 0, ::cudaMemcpyKind 
#line 718 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
kind = cudaMemcpyDeviceToHost, ::cudaStream_t 
#line 719 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
stream = 0) 
#line 721 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
{ 
#line 722 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
return ::cudaMemcpyFromSymbolAsync(dst, (const void *)(&symbol), count, offset, kind, stream); 
#line 723 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
} 
#line 745 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
template< class T> static __inline ::cudaError_t 
#line 746 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
cudaGetSymbolAddress(void **
#line 747 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
devPtr, const T &
#line 748 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
symbol) 
#line 750 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
{ 
#line 751 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
return ::cudaGetSymbolAddress(devPtr, (const void *)(&symbol)); 
#line 752 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
} 
#line 774 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
template< class T> static __inline ::cudaError_t 
#line 775 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
cudaGetSymbolSize(::size_t *
#line 776 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
size, const T &
#line 777 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
symbol) 
#line 779 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
{ 
#line 780 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
return ::cudaGetSymbolSize(size, (const void *)(&symbol)); 
#line 781 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
} 
#line 817 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
template< class T, int dim, cudaTextureReadMode readMode> static __inline ::cudaError_t 
#line 818 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
cudaBindTexture(::size_t *
#line 819 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
offset, const texture< T, dim, readMode>  &
#line 820 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
tex, const void *
#line 821 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
devPtr, const ::cudaChannelFormatDesc &
#line 822 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
desc, ::size_t 
#line 823 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
size = 4294967295U) 
#line 825 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
{ 
#line 826 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
return ::cudaBindTexture(offset, &tex, devPtr, &desc, size); 
#line 827 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
} 
#line 862 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
template< class T, int dim, cudaTextureReadMode readMode> static __inline ::cudaError_t 
#line 863 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
cudaBindTexture(::size_t *
#line 864 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
offset, const texture< T, dim, readMode>  &
#line 865 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
tex, const void *
#line 866 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
devPtr, ::size_t 
#line 867 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
size = 4294967295U) 
#line 869 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
{ 
#line 870 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
return cudaBindTexture(offset, tex, devPtr, (tex.channelDesc), size); 
#line 871 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
} 
#line 918 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
template< class T, int dim, cudaTextureReadMode readMode> static __inline ::cudaError_t 
#line 919 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
cudaBindTexture2D(::size_t *
#line 920 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
offset, const texture< T, dim, readMode>  &
#line 921 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
tex, const void *
#line 922 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
devPtr, const ::cudaChannelFormatDesc &
#line 923 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
desc, ::size_t 
#line 924 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
width, ::size_t 
#line 925 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
height, ::size_t 
#line 926 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
pitch) 
#line 928 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
{ 
#line 929 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
return ::cudaBindTexture2D(offset, &tex, devPtr, &desc, width, height, pitch); 
#line 930 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
} 
#line 976 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
template< class T, int dim, cudaTextureReadMode readMode> static __inline ::cudaError_t 
#line 977 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
cudaBindTexture2D(::size_t *
#line 978 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
offset, const texture< T, dim, readMode>  &
#line 979 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
tex, const void *
#line 980 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
devPtr, ::size_t 
#line 981 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
width, ::size_t 
#line 982 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
height, ::size_t 
#line 983 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
pitch) 
#line 985 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
{ 
#line 986 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
return ::cudaBindTexture2D(offset, &tex, devPtr, &(tex.channelDesc), width, height, pitch); 
#line 987 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
} 
#line 1018 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
template< class T, int dim, cudaTextureReadMode readMode> static __inline ::cudaError_t 
#line 1019 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
cudaBindTextureToArray(const texture< T, dim, readMode>  &
#line 1020 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
tex, ::cudaArray_const_t 
#line 1021 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
array, const ::cudaChannelFormatDesc &
#line 1022 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
desc) 
#line 1024 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
{ 
#line 1025 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
return ::cudaBindTextureToArray(&tex, array, &desc); 
#line 1026 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
} 
#line 1056 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
template< class T, int dim, cudaTextureReadMode readMode> static __inline ::cudaError_t 
#line 1057 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
cudaBindTextureToArray(const texture< T, dim, readMode>  &
#line 1058 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
tex, ::cudaArray_const_t 
#line 1059 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
array) 
#line 1061 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
{ 
#line 1062 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
::cudaChannelFormatDesc desc; 
#line 1063 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
::cudaError_t err = ::cudaGetChannelDesc(&desc, array); 
#line 1065 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
return (err == (cudaSuccess)) ? cudaBindTextureToArray(tex, array, desc) : err; 
#line 1066 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
} 
#line 1097 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
template< class T, int dim, cudaTextureReadMode readMode> static __inline ::cudaError_t 
#line 1098 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
cudaBindTextureToMipmappedArray(const texture< T, dim, readMode>  &
#line 1099 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
tex, ::cudaMipmappedArray_const_t 
#line 1100 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
mipmappedArray, const ::cudaChannelFormatDesc &
#line 1101 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
desc) 
#line 1103 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
{ 
#line 1104 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
return ::cudaBindTextureToMipmappedArray(&tex, mipmappedArray, &desc); 
#line 1105 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
} 
#line 1135 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
template< class T, int dim, cudaTextureReadMode readMode> static __inline ::cudaError_t 
#line 1136 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
cudaBindTextureToMipmappedArray(const texture< T, dim, readMode>  &
#line 1137 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
tex, ::cudaMipmappedArray_const_t 
#line 1138 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
mipmappedArray) 
#line 1140 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
{ 
#line 1141 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
::cudaChannelFormatDesc desc; 
#line 1142 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
::cudaArray_t levelArray; 
#line 1143 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
::cudaError_t err = ::cudaGetMipmappedArrayLevel(&levelArray, mipmappedArray, 0); 
#line 1145 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
if (err != (cudaSuccess)) { 
#line 1146 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
return err; 
#line 1147 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
}  
#line 1148 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
err = ::cudaGetChannelDesc(&desc, levelArray); 
#line 1150 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
return (err == (cudaSuccess)) ? cudaBindTextureToMipmappedArray(tex, mipmappedArray, desc) : err; 
#line 1151 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
} 
#line 1174 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
template< class T, int dim, cudaTextureReadMode readMode> static __inline ::cudaError_t 
#line 1175 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
cudaUnbindTexture(const texture< T, dim, readMode>  &
#line 1176 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
tex) 
#line 1178 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
{ 
#line 1179 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
return ::cudaUnbindTexture(&tex); 
#line 1180 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
} 
#line 1208 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
template< class T, int dim, cudaTextureReadMode readMode> static __inline ::cudaError_t 
#line 1209 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
cudaGetTextureAlignmentOffset(::size_t *
#line 1210 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
offset, const texture< T, dim, readMode>  &
#line 1211 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
tex) 
#line 1213 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
{ 
#line 1214 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
return ::cudaGetTextureAlignmentOffset(offset, &tex); 
#line 1215 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
} 
#line 1260 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
template< class T> static __inline ::cudaError_t 
#line 1261 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
cudaFuncSetCacheConfig(T *
#line 1262 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
func, ::cudaFuncCache 
#line 1263 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
cacheConfig) 
#line 1265 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
{ 
#line 1266 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
return ::cudaFuncSetCacheConfig((const void *)func, cacheConfig); 
#line 1267 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
} 
#line 1269 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
template< class T> static __inline ::cudaError_t 
#line 1270 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
cudaFuncSetSharedMemConfig(T *
#line 1271 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
func, ::cudaSharedMemConfig 
#line 1272 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
config) 
#line 1274 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
{ 
#line 1275 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
return ::cudaFuncSetSharedMemConfig((const void *)func, config); 
#line 1276 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
} 
#line 1305 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
template< class T> __inline ::cudaError_t 
#line 1306 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
cudaOccupancyMaxActiveBlocksPerMultiprocessor(int *
#line 1307 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
numBlocks, T 
#line 1308 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
func, int 
#line 1309 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
blockSize, ::size_t 
#line 1310 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
dynamicSMemSize) 
#line 1311 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
{ 
#line 1312 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
return ::cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags(numBlocks, (const void *)func, blockSize, dynamicSMemSize, 0); 
#line 1313 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
} 
#line 1356 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
template< class T> __inline ::cudaError_t 
#line 1357 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags(int *
#line 1358 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
numBlocks, T 
#line 1359 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
func, int 
#line 1360 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
blockSize, ::size_t 
#line 1361 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
dynamicSMemSize, unsigned 
#line 1362 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
flags) 
#line 1363 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
{ 
#line 1364 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
return ::cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags(numBlocks, (const void *)func, blockSize, dynamicSMemSize, flags); 
#line 1365 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
} 
#line 1370 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
class __cudaOccupancyB2DHelper { 
#line 1371 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
size_t n; 
#line 1373 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
public: __cudaOccupancyB2DHelper(size_t n_) : n(n_) { } 
#line 1374 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
size_t operator()(int) 
#line 1375 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
{ 
#line 1376 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
return n; 
#line 1377 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
} 
#line 1378 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
}; 
#line 1380 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
template< class UnaryFunction, class T> static __inline ::cudaError_t 
#line 1381 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
cudaOccupancyMaxPotentialBlockSizeVariableSMemWithFlags(int *
#line 1382 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
minGridSize, int *
#line 1383 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
blockSize, T 
#line 1384 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
func, UnaryFunction 
#line 1385 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
blockSizeToDynamicSMemSize, int 
#line 1386 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
blockSizeLimit = 0, unsigned 
#line 1387 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
flags = 0) 
#line 1388 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
{ 
#line 1389 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
::cudaError_t status; 
#line 1392 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
int device; 
#line 1393 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
::cudaFuncAttributes attr; 
#line 1396 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
int maxThreadsPerMultiProcessor; 
#line 1397 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
int warpSize; 
#line 1398 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
int devMaxThreadsPerBlock; 
#line 1399 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
int multiProcessorCount; 
#line 1400 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
int funcMaxThreadsPerBlock; 
#line 1401 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
int occupancyLimit; 
#line 1402 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
int granularity; 
#line 1405 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
int maxBlockSize = 0; 
#line 1406 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
int numBlocks = 0; 
#line 1407 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
int maxOccupancy = 0; 
#line 1410 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
int blockSizeToTryAligned; 
#line 1411 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
int blockSizeToTry; 
#line 1412 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
int blockSizeLimitAligned; 
#line 1413 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
int occupancyInBlocks; 
#line 1414 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
int occupancyInThreads; 
#line 1415 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
int dynamicSMemSize; 
#line 1421 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
if (((!minGridSize) || (!blockSize)) || (!func)) { 
#line 1422 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
return cudaErrorInvalidValue; 
#line 1423 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
}  
#line 1429 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
status = ::cudaGetDevice(&device); 
#line 1430 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
if (status != (cudaSuccess)) { 
#line 1431 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
return status; 
#line 1432 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
}  
#line 1434 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
status = cudaDeviceGetAttribute(&maxThreadsPerMultiProcessor, cudaDevAttrMaxThreadsPerMultiProcessor, device); 
#line 1438 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
if (status != (cudaSuccess)) { 
#line 1439 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
return status; 
#line 1440 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
}  
#line 1442 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
status = cudaDeviceGetAttribute(&warpSize, cudaDevAttrWarpSize, device); 
#line 1446 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
if (status != (cudaSuccess)) { 
#line 1447 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
return status; 
#line 1448 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
}  
#line 1450 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
status = cudaDeviceGetAttribute(&devMaxThreadsPerBlock, cudaDevAttrMaxThreadsPerBlock, device); 
#line 1454 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
if (status != (cudaSuccess)) { 
#line 1455 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
return status; 
#line 1456 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
}  
#line 1458 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
status = cudaDeviceGetAttribute(&multiProcessorCount, cudaDevAttrMultiProcessorCount, device); 
#line 1462 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
if (status != (cudaSuccess)) { 
#line 1463 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
return status; 
#line 1464 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
}  
#line 1466 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
status = cudaFuncGetAttributes(&attr, func); 
#line 1467 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
if (status != (cudaSuccess)) { 
#line 1468 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
return status; 
#line 1469 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
}  
#line 1471 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
funcMaxThreadsPerBlock = (attr.maxThreadsPerBlock); 
#line 1477 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
occupancyLimit = maxThreadsPerMultiProcessor; 
#line 1478 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
granularity = warpSize; 
#line 1480 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
if (blockSizeLimit == 0) { 
#line 1481 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
blockSizeLimit = devMaxThreadsPerBlock; 
#line 1482 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
}  
#line 1484 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
if (devMaxThreadsPerBlock < blockSizeLimit) { 
#line 1485 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
blockSizeLimit = devMaxThreadsPerBlock; 
#line 1486 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
}  
#line 1488 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
if (funcMaxThreadsPerBlock < blockSizeLimit) { 
#line 1489 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
blockSizeLimit = funcMaxThreadsPerBlock; 
#line 1490 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
}  
#line 1492 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
blockSizeLimitAligned = (((blockSizeLimit + (granularity - 1)) / granularity) * granularity); 
#line 1494 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
for (blockSizeToTryAligned = blockSizeLimitAligned; blockSizeToTryAligned > 0; blockSizeToTryAligned -= granularity) { 
#line 1498 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
if (blockSizeLimit < blockSizeToTryAligned) { 
#line 1499 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
blockSizeToTry = blockSizeLimit; 
#line 1500 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
} else { 
#line 1501 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
blockSizeToTry = blockSizeToTryAligned; 
#line 1502 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
}  
#line 1504 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
dynamicSMemSize = blockSizeToDynamicSMemSize(blockSizeToTry); 
#line 1506 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
status = cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags(&occupancyInBlocks, func, blockSizeToTry, dynamicSMemSize, flags); 
#line 1513 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
if (status != (cudaSuccess)) { 
#line 1514 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
return status; 
#line 1515 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
}  
#line 1517 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
occupancyInThreads = (blockSizeToTry * occupancyInBlocks); 
#line 1519 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
if (occupancyInThreads > maxOccupancy) { 
#line 1520 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
maxBlockSize = blockSizeToTry; 
#line 1521 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
numBlocks = occupancyInBlocks; 
#line 1522 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
maxOccupancy = occupancyInThreads; 
#line 1523 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
}  
#line 1527 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
if (occupancyLimit == maxOccupancy) { 
#line 1528 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
break; 
#line 1529 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
}  
#line 1530 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
}  
#line 1538 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
(*minGridSize) = (numBlocks * multiProcessorCount); 
#line 1539 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
(*blockSize) = maxBlockSize; 
#line 1541 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
return status; 
#line 1542 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
} 
#line 1575 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
template< class UnaryFunction, class T> static __inline ::cudaError_t 
#line 1576 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
cudaOccupancyMaxPotentialBlockSizeVariableSMem(int *
#line 1577 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
minGridSize, int *
#line 1578 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
blockSize, T 
#line 1579 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
func, UnaryFunction 
#line 1580 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
blockSizeToDynamicSMemSize, int 
#line 1581 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
blockSizeLimit = 0) 
#line 1582 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
{ 
#line 1583 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
return cudaOccupancyMaxPotentialBlockSizeVariableSMemWithFlags(minGridSize, blockSize, func, blockSizeToDynamicSMemSize, blockSizeLimit, 0); 
#line 1584 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
} 
#line 1620 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
template< class T> static __inline ::cudaError_t 
#line 1621 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
cudaOccupancyMaxPotentialBlockSize(int *
#line 1622 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
minGridSize, int *
#line 1623 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
blockSize, T 
#line 1624 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
func, ::size_t 
#line 1625 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
dynamicSMemSize = 0, int 
#line 1626 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
blockSizeLimit = 0) 
#line 1627 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
{ 
#line 1628 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
return cudaOccupancyMaxPotentialBlockSizeVariableSMemWithFlags(minGridSize, blockSize, func, ((::__cudaOccupancyB2DHelper)(dynamicSMemSize)), blockSizeLimit, 0); 
#line 1629 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
} 
#line 1679 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
template< class T> static __inline ::cudaError_t 
#line 1680 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
cudaOccupancyMaxPotentialBlockSizeWithFlags(int *
#line 1681 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
minGridSize, int *
#line 1682 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
blockSize, T 
#line 1683 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
func, ::size_t 
#line 1684 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
dynamicSMemSize = 0, int 
#line 1685 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
blockSizeLimit = 0, unsigned 
#line 1686 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
flags = 0) 
#line 1687 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
{ 
#line 1688 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
return cudaOccupancyMaxPotentialBlockSizeVariableSMemWithFlags(minGridSize, blockSize, func, ((::__cudaOccupancyB2DHelper)(dynamicSMemSize)), blockSizeLimit, flags); 
#line 1689 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
} 
#line 1772 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
template< class T> static __inline ::cudaError_t 
#line 1773 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
cudaLaunch(T *
#line 1774 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
func) 
#line 1776 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
{ 
#line 1777 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
return ::cudaLaunch((const void *)func); 
#line 1778 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
} 
#line 1809 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
template< class T> __inline ::cudaError_t 
#line 1810 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
cudaFuncGetAttributes(::cudaFuncAttributes *
#line 1811 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
attr, T *
#line 1812 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
entry) 
#line 1814 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
{ 
#line 1815 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
return ::cudaFuncGetAttributes(attr, (const void *)entry); 
#line 1816 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
} 
#line 1838 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
template< class T, int dim> static __inline ::cudaError_t 
#line 1839 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
cudaBindSurfaceToArray(const surface< T, dim>  &
#line 1840 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
surf, ::cudaArray_const_t 
#line 1841 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
array, const ::cudaChannelFormatDesc &
#line 1842 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
desc) 
#line 1844 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
{ 
#line 1845 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
return ::cudaBindSurfaceToArray(&surf, array, &desc); 
#line 1846 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
} 
#line 1867 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
template< class T, int dim> static __inline ::cudaError_t 
#line 1868 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
cudaBindSurfaceToArray(const surface< T, dim>  &
#line 1869 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
surf, ::cudaArray_const_t 
#line 1870 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
array) 
#line 1872 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
{ 
#line 1873 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
::cudaChannelFormatDesc desc; 
#line 1874 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
::cudaError_t err = ::cudaGetChannelDesc(&desc, array); 
#line 1876 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
return (err == (cudaSuccess)) ? cudaBindSurfaceToArray(surf, array, desc) : err; 
#line 1877 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
} 
#line 1891 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda_runtime.h"
#pragma warning(pop)
#line 210 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { typedef unsigned CUdeviceptr; }
#line 215 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { typedef int CUdevice; }
#line 216 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { typedef struct CUctx_st *CUcontext; }
#line 217 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { typedef struct CUmod_st *CUmodule; }
#line 218 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { typedef struct CUfunc_st *CUfunction; }
#line 219 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { typedef struct CUarray_st *CUarray; }
#line 220 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { typedef struct CUmipmappedArray_st *CUmipmappedArray; }
#line 221 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { typedef struct CUtexref_st *CUtexref; }
#line 222 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { typedef struct CUsurfref_st *CUsurfref; }
#line 223 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { typedef CUevent_st *CUevent; }
#line 224 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { typedef CUstream_st *CUstream; }
#line 225 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { typedef struct CUgraphicsResource_st *CUgraphicsResource; }
#line 226 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { typedef unsigned __int64 CUtexObject; }
#line 227 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { typedef unsigned __int64 CUsurfObject; }
#line 231 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { typedef 
#line 229 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
struct CUuuid_st { 
#line 230 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
char bytes[16]; 
#line 231 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
} CUuuid; }
#line 246 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { typedef 
#line 244 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
struct CUipcEventHandle_st { 
#line 245 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
char reserved[64]; 
#line 246 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
} CUipcEventHandle; }
#line 253 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { typedef 
#line 251 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
struct CUipcMemHandle_st { 
#line 252 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
char reserved[64]; 
#line 253 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
} CUipcMemHandle; }
#line 260 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { typedef 
#line 258 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
enum CUipcMem_flags_enum { 
#line 259 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_IPC_MEM_LAZY_ENABLE_PEER_ACCESS = 1
#line 260 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
} CUipcMem_flags; }
#line 271 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { typedef 
#line 267 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
enum CUmemAttach_flags_enum { 
#line 268 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_MEM_ATTACH_GLOBAL = 1, 
#line 269 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_MEM_ATTACH_HOST, 
#line 270 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_MEM_ATTACH_SINGLE = 4
#line 271 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
} CUmemAttach_flags; }
#line 288 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { typedef 
#line 276 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
enum CUctx_flags_enum { 
#line 277 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_CTX_SCHED_AUTO, 
#line 278 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_CTX_SCHED_SPIN, 
#line 279 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_CTX_SCHED_YIELD, 
#line 280 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_CTX_SCHED_BLOCKING_SYNC = 4, 
#line 281 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_CTX_BLOCKING_SYNC = 4, 
#line 284 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_CTX_SCHED_MASK = 7, 
#line 285 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_CTX_MAP_HOST, 
#line 286 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_CTX_LMEM_RESIZE_TO_MAX = 16, 
#line 287 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_CTX_FLAGS_MASK = 31
#line 288 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
} CUctx_flags; }
#line 296 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { typedef 
#line 293 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
enum CUstream_flags_enum { 
#line 294 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_STREAM_DEFAULT, 
#line 295 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_STREAM_NON_BLOCKING
#line 296 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
} CUstream_flags; }
#line 326 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { typedef 
#line 321 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
enum CUevent_flags_enum { 
#line 322 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_EVENT_DEFAULT, 
#line 323 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_EVENT_BLOCKING_SYNC, 
#line 324 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_EVENT_DISABLE_TIMING, 
#line 325 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_EVENT_INTERPROCESS = 4
#line 326 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
} CUevent_flags; }
#line 334 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { typedef 
#line 331 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
enum CUoccupancy_flags_enum { 
#line 332 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_OCCUPANCY_DEFAULT, 
#line 333 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_OCCUPANCY_DISABLE_CACHING_OVERRIDE
#line 334 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
} CUoccupancy_flags; }
#line 348 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { typedef 
#line 339 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
enum CUarray_format_enum { 
#line 340 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_AD_FORMAT_UNSIGNED_INT8 = 1, 
#line 341 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_AD_FORMAT_UNSIGNED_INT16, 
#line 342 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_AD_FORMAT_UNSIGNED_INT32, 
#line 343 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_AD_FORMAT_SIGNED_INT8 = 8, 
#line 344 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_AD_FORMAT_SIGNED_INT16, 
#line 345 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_AD_FORMAT_SIGNED_INT32, 
#line 346 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_AD_FORMAT_HALF = 16, 
#line 347 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_AD_FORMAT_FLOAT = 32
#line 348 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
} CUarray_format; }
#line 358 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { typedef 
#line 353 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
enum CUaddress_mode_enum { 
#line 354 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_TR_ADDRESS_MODE_WRAP, 
#line 355 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_TR_ADDRESS_MODE_CLAMP, 
#line 356 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_TR_ADDRESS_MODE_MIRROR, 
#line 357 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_TR_ADDRESS_MODE_BORDER
#line 358 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
} CUaddress_mode; }
#line 366 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { typedef 
#line 363 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
enum CUfilter_mode_enum { 
#line 364 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_TR_FILTER_MODE_POINT, 
#line 365 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_TR_FILTER_MODE_LINEAR
#line 366 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
} CUfilter_mode; }
#line 463 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { typedef 
#line 371 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
enum CUdevice_attribute_enum { 
#line 372 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_DEVICE_ATTRIBUTE_MAX_THREADS_PER_BLOCK = 1, 
#line 373 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_DEVICE_ATTRIBUTE_MAX_BLOCK_DIM_X, 
#line 374 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_DEVICE_ATTRIBUTE_MAX_BLOCK_DIM_Y, 
#line 375 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_DEVICE_ATTRIBUTE_MAX_BLOCK_DIM_Z, 
#line 376 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_DEVICE_ATTRIBUTE_MAX_GRID_DIM_X, 
#line 377 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_DEVICE_ATTRIBUTE_MAX_GRID_DIM_Y, 
#line 378 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_DEVICE_ATTRIBUTE_MAX_GRID_DIM_Z, 
#line 379 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_DEVICE_ATTRIBUTE_MAX_SHARED_MEMORY_PER_BLOCK, 
#line 380 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_DEVICE_ATTRIBUTE_SHARED_MEMORY_PER_BLOCK = 8, 
#line 381 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_DEVICE_ATTRIBUTE_TOTAL_CONSTANT_MEMORY, 
#line 382 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_DEVICE_ATTRIBUTE_WARP_SIZE, 
#line 383 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_DEVICE_ATTRIBUTE_MAX_PITCH, 
#line 384 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_DEVICE_ATTRIBUTE_MAX_REGISTERS_PER_BLOCK, 
#line 385 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_DEVICE_ATTRIBUTE_REGISTERS_PER_BLOCK = 12, 
#line 386 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_DEVICE_ATTRIBUTE_CLOCK_RATE, 
#line 387 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_DEVICE_ATTRIBUTE_TEXTURE_ALIGNMENT, 
#line 388 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_DEVICE_ATTRIBUTE_GPU_OVERLAP, 
#line 389 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_DEVICE_ATTRIBUTE_MULTIPROCESSOR_COUNT, 
#line 390 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_DEVICE_ATTRIBUTE_KERNEL_EXEC_TIMEOUT, 
#line 391 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_DEVICE_ATTRIBUTE_INTEGRATED, 
#line 392 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_DEVICE_ATTRIBUTE_CAN_MAP_HOST_MEMORY, 
#line 393 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_DEVICE_ATTRIBUTE_COMPUTE_MODE, 
#line 394 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE1D_WIDTH, 
#line 395 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_WIDTH, 
#line 396 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_HEIGHT, 
#line 397 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE3D_WIDTH, 
#line 398 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE3D_HEIGHT, 
#line 399 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE3D_DEPTH, 
#line 400 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_LAYERED_WIDTH, 
#line 401 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_LAYERED_HEIGHT, 
#line 402 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_LAYERED_LAYERS, 
#line 403 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_ARRAY_WIDTH = 27, 
#line 404 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_ARRAY_HEIGHT, 
#line 405 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_ARRAY_NUMSLICES, 
#line 406 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_DEVICE_ATTRIBUTE_SURFACE_ALIGNMENT, 
#line 407 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_DEVICE_ATTRIBUTE_CONCURRENT_KERNELS, 
#line 408 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_DEVICE_ATTRIBUTE_ECC_ENABLED, 
#line 409 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_DEVICE_ATTRIBUTE_PCI_BUS_ID, 
#line 410 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_DEVICE_ATTRIBUTE_PCI_DEVICE_ID, 
#line 411 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_DEVICE_ATTRIBUTE_TCC_DRIVER, 
#line 412 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_DEVICE_ATTRIBUTE_MEMORY_CLOCK_RATE, 
#line 413 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_DEVICE_ATTRIBUTE_GLOBAL_MEMORY_BUS_WIDTH, 
#line 414 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_DEVICE_ATTRIBUTE_L2_CACHE_SIZE, 
#line 415 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_DEVICE_ATTRIBUTE_MAX_THREADS_PER_MULTIPROCESSOR, 
#line 416 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_DEVICE_ATTRIBUTE_ASYNC_ENGINE_COUNT, 
#line 417 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_DEVICE_ATTRIBUTE_UNIFIED_ADDRESSING, 
#line 418 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE1D_LAYERED_WIDTH, 
#line 419 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE1D_LAYERED_LAYERS, 
#line 420 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_DEVICE_ATTRIBUTE_CAN_TEX2D_GATHER, 
#line 421 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_GATHER_WIDTH, 
#line 422 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_GATHER_HEIGHT, 
#line 423 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE3D_WIDTH_ALTERNATE, 
#line 424 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE3D_HEIGHT_ALTERNATE, 
#line 425 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE3D_DEPTH_ALTERNATE, 
#line 426 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_DEVICE_ATTRIBUTE_PCI_DOMAIN_ID, 
#line 427 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_DEVICE_ATTRIBUTE_TEXTURE_PITCH_ALIGNMENT, 
#line 428 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURECUBEMAP_WIDTH, 
#line 429 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURECUBEMAP_LAYERED_WIDTH, 
#line 430 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURECUBEMAP_LAYERED_LAYERS, 
#line 431 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACE1D_WIDTH, 
#line 432 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACE2D_WIDTH, 
#line 433 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACE2D_HEIGHT, 
#line 434 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACE3D_WIDTH, 
#line 435 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACE3D_HEIGHT, 
#line 436 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACE3D_DEPTH, 
#line 437 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACE1D_LAYERED_WIDTH, 
#line 438 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACE1D_LAYERED_LAYERS, 
#line 439 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACE2D_LAYERED_WIDTH, 
#line 440 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACE2D_LAYERED_HEIGHT, 
#line 441 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACE2D_LAYERED_LAYERS, 
#line 442 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACECUBEMAP_WIDTH, 
#line 443 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACECUBEMAP_LAYERED_WIDTH, 
#line 444 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACECUBEMAP_LAYERED_LAYERS, 
#line 445 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE1D_LINEAR_WIDTH, 
#line 446 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_LINEAR_WIDTH, 
#line 447 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_LINEAR_HEIGHT, 
#line 448 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_LINEAR_PITCH, 
#line 449 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_MIPMAPPED_WIDTH, 
#line 450 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_MIPMAPPED_HEIGHT, 
#line 451 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_DEVICE_ATTRIBUTE_COMPUTE_CAPABILITY_MAJOR, 
#line 452 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_DEVICE_ATTRIBUTE_COMPUTE_CAPABILITY_MINOR, 
#line 453 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE1D_MIPMAPPED_WIDTH, 
#line 454 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_DEVICE_ATTRIBUTE_STREAM_PRIORITIES_SUPPORTED, 
#line 455 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_DEVICE_ATTRIBUTE_GLOBAL_L1_CACHE_SUPPORTED, 
#line 456 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_DEVICE_ATTRIBUTE_LOCAL_L1_CACHE_SUPPORTED, 
#line 457 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_DEVICE_ATTRIBUTE_MAX_SHARED_MEMORY_PER_MULTIPROCESSOR, 
#line 458 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_DEVICE_ATTRIBUTE_MAX_REGISTERS_PER_MULTIPROCESSOR, 
#line 459 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_DEVICE_ATTRIBUTE_MANAGED_MEMORY, 
#line 460 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_DEVICE_ATTRIBUTE_MULTI_GPU_BOARD, 
#line 461 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_DEVICE_ATTRIBUTE_MULTI_GPU_BOARD_GROUP_ID, 
#line 462 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_DEVICE_ATTRIBUTE_MAX
#line 463 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
} CUdevice_attribute; }
#line 479 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { typedef 
#line 468 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
struct CUdevprop_st { 
#line 469 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
int maxThreadsPerBlock; 
#line 470 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
int maxThreadsDim[3]; 
#line 471 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
int maxGridSize[3]; 
#line 472 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
int sharedMemPerBlock; 
#line 473 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
int totalConstantMemory; 
#line 474 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
int SIMDWidth; 
#line 475 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
int memPitch; 
#line 476 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
int regsPerBlock; 
#line 477 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
int clockRate; 
#line 478 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
int textureAlign; 
#line 479 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
} CUdevprop; }
#line 493 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { typedef 
#line 484 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
enum CUpointer_attribute_enum { 
#line 485 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_POINTER_ATTRIBUTE_CONTEXT = 1, 
#line 486 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_POINTER_ATTRIBUTE_MEMORY_TYPE, 
#line 487 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_POINTER_ATTRIBUTE_DEVICE_POINTER, 
#line 488 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_POINTER_ATTRIBUTE_HOST_POINTER, 
#line 489 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_POINTER_ATTRIBUTE_P2P_TOKENS, 
#line 490 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_POINTER_ATTRIBUTE_SYNC_MEMOPS, 
#line 491 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_POINTER_ATTRIBUTE_BUFFER_ID, 
#line 492 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_POINTER_ATTRIBUTE_IS_MANAGED
#line 493 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
} CUpointer_attribute; }
#line 554 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { typedef 
#line 498 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
enum CUfunction_attribute_enum { 
#line 504 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_FUNC_ATTRIBUTE_MAX_THREADS_PER_BLOCK, 
#line 511 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_FUNC_ATTRIBUTE_SHARED_SIZE_BYTES, 
#line 517 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_FUNC_ATTRIBUTE_CONST_SIZE_BYTES, 
#line 522 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_FUNC_ATTRIBUTE_LOCAL_SIZE_BYTES, 
#line 527 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_FUNC_ATTRIBUTE_NUM_REGS, 
#line 536 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_FUNC_ATTRIBUTE_PTX_VERSION, 
#line 545 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_FUNC_ATTRIBUTE_BINARY_VERSION, 
#line 551 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_FUNC_ATTRIBUTE_CACHE_MODE_CA, 
#line 553 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_FUNC_ATTRIBUTE_MAX
#line 554 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
} CUfunction_attribute; }
#line 564 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { typedef 
#line 559 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
enum CUfunc_cache_enum { 
#line 560 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_FUNC_CACHE_PREFER_NONE, 
#line 561 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_FUNC_CACHE_PREFER_SHARED, 
#line 562 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_FUNC_CACHE_PREFER_L1, 
#line 563 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_FUNC_CACHE_PREFER_EQUAL
#line 564 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
} CUfunc_cache; }
#line 573 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { typedef 
#line 569 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
enum CUsharedconfig_enum { 
#line 570 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_SHARED_MEM_CONFIG_DEFAULT_BANK_SIZE, 
#line 571 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_SHARED_MEM_CONFIG_FOUR_BYTE_BANK_SIZE, 
#line 572 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_SHARED_MEM_CONFIG_EIGHT_BYTE_BANK_SIZE
#line 573 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
} CUsharedconfig; }
#line 583 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { typedef 
#line 578 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
enum CUmemorytype_enum { 
#line 579 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_MEMORYTYPE_HOST = 1, 
#line 580 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_MEMORYTYPE_DEVICE, 
#line 581 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_MEMORYTYPE_ARRAY, 
#line 582 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_MEMORYTYPE_UNIFIED
#line 583 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
} CUmemorytype; }
#line 593 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { typedef 
#line 588 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
enum CUcomputemode_enum { 
#line 589 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_COMPUTEMODE_DEFAULT, 
#line 590 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_COMPUTEMODE_EXCLUSIVE, 
#line 591 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_COMPUTEMODE_PROHIBITED, 
#line 592 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_COMPUTEMODE_EXCLUSIVE_PROCESS
#line 593 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
} CUcomputemode; }
#line 731 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { typedef 
#line 598 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
enum CUjit_option_enum { 
#line 605 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_JIT_MAX_REGISTERS, 
#line 620 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_JIT_THREADS_PER_BLOCK, 
#line 628 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_JIT_WALL_TIME, 
#line 637 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_JIT_INFO_LOG_BUFFER, 
#line 646 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_JIT_INFO_LOG_BUFFER_SIZE_BYTES, 
#line 655 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_JIT_ERROR_LOG_BUFFER, 
#line 664 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_JIT_ERROR_LOG_BUFFER_SIZE_BYTES, 
#line 672 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_JIT_OPTIMIZATION_LEVEL, 
#line 680 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_JIT_TARGET_FROM_CUCONTEXT, 
#line 688 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_JIT_TARGET, 
#line 697 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_JIT_FALLBACK_STRATEGY, 
#line 705 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_JIT_GENERATE_DEBUG_INFO, 
#line 712 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_JIT_LOG_VERBOSE, 
#line 719 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_JIT_GENERATE_LINE_INFO, 
#line 727 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_JIT_CACHE_MODE, 
#line 729 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_JIT_NUM_OPTIONS
#line 731 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
} CUjit_option; }
#line 750 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { typedef 
#line 736 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
enum CUjit_target_enum { 
#line 738 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_TARGET_COMPUTE_10 = 10, 
#line 739 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_TARGET_COMPUTE_11, 
#line 740 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_TARGET_COMPUTE_12, 
#line 741 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_TARGET_COMPUTE_13, 
#line 742 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_TARGET_COMPUTE_20 = 20, 
#line 743 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_TARGET_COMPUTE_21, 
#line 744 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_TARGET_COMPUTE_30 = 30, 
#line 745 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_TARGET_COMPUTE_32 = 32, 
#line 746 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_TARGET_COMPUTE_35 = 35, 
#line 747 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_TARGET_COMPUTE_37 = 37, 
#line 748 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_TARGET_COMPUTE_50 = 50, 
#line 749 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_TARGET_COMPUTE_52 = 52
#line 750 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
} CUjit_target; }
#line 761 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { typedef 
#line 755 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
enum CUjit_fallback_enum { 
#line 757 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_PREFER_PTX, 
#line 759 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_PREFER_BINARY
#line 761 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
} CUjit_fallback; }
#line 771 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { typedef 
#line 766 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
enum CUjit_cacheMode_enum { 
#line 768 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_JIT_CACHE_OPTION_NONE, 
#line 769 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_JIT_CACHE_OPTION_CG, 
#line 770 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_JIT_CACHE_OPTION_CA
#line 771 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
} CUjit_cacheMode; }
#line 809 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { typedef 
#line 776 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
enum CUjitInputType_enum { 
#line 782 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_JIT_INPUT_CUBIN, 
#line 788 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_JIT_INPUT_PTX, 
#line 794 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_JIT_INPUT_FATBINARY, 
#line 800 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_JIT_INPUT_OBJECT, 
#line 806 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_JIT_INPUT_LIBRARY, 
#line 808 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_JIT_NUM_INPUT_TYPES
#line 809 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
} CUjitInputType; }
#line 812 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { typedef struct CUlinkState_st *CUlinkState; }
#line 824 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { typedef 
#line 818 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
enum CUgraphicsRegisterFlags_enum { 
#line 819 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_GRAPHICS_REGISTER_FLAGS_NONE, 
#line 820 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_GRAPHICS_REGISTER_FLAGS_READ_ONLY, 
#line 821 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_GRAPHICS_REGISTER_FLAGS_WRITE_DISCARD, 
#line 822 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_GRAPHICS_REGISTER_FLAGS_SURFACE_LDST = 4, 
#line 823 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_GRAPHICS_REGISTER_FLAGS_TEXTURE_GATHER = 8
#line 824 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
} CUgraphicsRegisterFlags; }
#line 833 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { typedef 
#line 829 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
enum CUgraphicsMapResourceFlags_enum { 
#line 830 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_GRAPHICS_MAP_RESOURCE_FLAGS_NONE, 
#line 831 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_GRAPHICS_MAP_RESOURCE_FLAGS_READ_ONLY, 
#line 832 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_GRAPHICS_MAP_RESOURCE_FLAGS_WRITE_DISCARD
#line 833 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
} CUgraphicsMapResourceFlags; }
#line 845 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { typedef 
#line 838 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
enum CUarray_cubemap_face_enum { 
#line 839 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_CUBEMAP_FACE_POSITIVE_X, 
#line 840 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_CUBEMAP_FACE_NEGATIVE_X, 
#line 841 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_CUBEMAP_FACE_POSITIVE_Y, 
#line 842 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_CUBEMAP_FACE_NEGATIVE_Y, 
#line 843 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_CUBEMAP_FACE_POSITIVE_Z, 
#line 844 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_CUBEMAP_FACE_NEGATIVE_Z
#line 845 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
} CUarray_cubemap_face; }
#line 857 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { typedef 
#line 850 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
enum CUlimit_enum { 
#line 851 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_LIMIT_STACK_SIZE, 
#line 852 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_LIMIT_PRINTF_FIFO_SIZE, 
#line 853 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_LIMIT_MALLOC_HEAP_SIZE, 
#line 854 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_LIMIT_DEV_RUNTIME_SYNC_DEPTH, 
#line 855 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_LIMIT_DEV_RUNTIME_PENDING_LAUNCH_COUNT, 
#line 856 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_LIMIT_MAX
#line 857 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
} CUlimit; }
#line 867 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { typedef 
#line 862 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
enum CUresourcetype_enum { 
#line 863 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_RESOURCE_TYPE_ARRAY, 
#line 864 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_RESOURCE_TYPE_MIPMAPPED_ARRAY, 
#line 865 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_RESOURCE_TYPE_LINEAR, 
#line 866 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_RESOURCE_TYPE_PITCH2D
#line 867 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
} CUresourcetype; }
#line 1263 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { typedef 
#line 872 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
enum cudaError_enum { 
#line 878 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CUDA_SUCCESS, 
#line 884 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CUDA_ERROR_INVALID_VALUE, 
#line 890 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CUDA_ERROR_OUT_OF_MEMORY, 
#line 896 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CUDA_ERROR_NOT_INITIALIZED, 
#line 901 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CUDA_ERROR_DEINITIALIZED, 
#line 908 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CUDA_ERROR_PROFILER_DISABLED, 
#line 916 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CUDA_ERROR_PROFILER_NOT_INITIALIZED, 
#line 923 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CUDA_ERROR_PROFILER_ALREADY_STARTED, 
#line 930 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CUDA_ERROR_PROFILER_ALREADY_STOPPED, 
#line 936 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CUDA_ERROR_NO_DEVICE = 100, 
#line 942 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CUDA_ERROR_INVALID_DEVICE, 
#line 949 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CUDA_ERROR_INVALID_IMAGE = 200, 
#line 959 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CUDA_ERROR_INVALID_CONTEXT, 
#line 968 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CUDA_ERROR_CONTEXT_ALREADY_CURRENT, 
#line 973 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CUDA_ERROR_MAP_FAILED = 205, 
#line 978 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CUDA_ERROR_UNMAP_FAILED, 
#line 984 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CUDA_ERROR_ARRAY_IS_MAPPED, 
#line 989 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CUDA_ERROR_ALREADY_MAPPED, 
#line 997 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CUDA_ERROR_NO_BINARY_FOR_GPU, 
#line 1002 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CUDA_ERROR_ALREADY_ACQUIRED, 
#line 1007 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CUDA_ERROR_NOT_MAPPED, 
#line 1013 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CUDA_ERROR_NOT_MAPPED_AS_ARRAY, 
#line 1019 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CUDA_ERROR_NOT_MAPPED_AS_POINTER, 
#line 1025 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CUDA_ERROR_ECC_UNCORRECTABLE, 
#line 1031 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CUDA_ERROR_UNSUPPORTED_LIMIT, 
#line 1038 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CUDA_ERROR_CONTEXT_ALREADY_IN_USE, 
#line 1044 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CUDA_ERROR_PEER_ACCESS_UNSUPPORTED, 
#line 1049 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CUDA_ERROR_INVALID_PTX, 
#line 1054 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CUDA_ERROR_INVALID_GRAPHICS_CONTEXT, 
#line 1059 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CUDA_ERROR_INVALID_SOURCE = 300, 
#line 1064 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CUDA_ERROR_FILE_NOT_FOUND, 
#line 1069 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CUDA_ERROR_SHARED_OBJECT_SYMBOL_NOT_FOUND, 
#line 1074 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CUDA_ERROR_SHARED_OBJECT_INIT_FAILED, 
#line 1079 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CUDA_ERROR_OPERATING_SYSTEM, 
#line 1085 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CUDA_ERROR_INVALID_HANDLE = 400, 
#line 1091 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CUDA_ERROR_NOT_FOUND = 500, 
#line 1099 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CUDA_ERROR_NOT_READY = 600, 
#line 1108 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CUDA_ERROR_ILLEGAL_ADDRESS = 700, 
#line 1119 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CUDA_ERROR_LAUNCH_OUT_OF_RESOURCES, 
#line 1130 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CUDA_ERROR_LAUNCH_TIMEOUT, 
#line 1136 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CUDA_ERROR_LAUNCH_INCOMPATIBLE_TEXTURING, 
#line 1143 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CUDA_ERROR_PEER_ACCESS_ALREADY_ENABLED, 
#line 1150 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CUDA_ERROR_PEER_ACCESS_NOT_ENABLED, 
#line 1156 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CUDA_ERROR_PRIMARY_CONTEXT_ACTIVE = 708, 
#line 1163 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CUDA_ERROR_CONTEXT_IS_DESTROYED, 
#line 1171 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CUDA_ERROR_ASSERT, 
#line 1178 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CUDA_ERROR_TOO_MANY_PEERS, 
#line 1184 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CUDA_ERROR_HOST_MEMORY_ALREADY_REGISTERED, 
#line 1190 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CUDA_ERROR_HOST_MEMORY_NOT_REGISTERED, 
#line 1199 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CUDA_ERROR_HARDWARE_STACK_ERROR, 
#line 1207 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CUDA_ERROR_ILLEGAL_INSTRUCTION, 
#line 1216 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CUDA_ERROR_MISALIGNED_ADDRESS, 
#line 1227 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CUDA_ERROR_INVALID_ADDRESS_SPACE, 
#line 1235 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CUDA_ERROR_INVALID_PC, 
#line 1245 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CUDA_ERROR_LAUNCH_FAILED, 
#line 1251 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CUDA_ERROR_NOT_PERMITTED = 800, 
#line 1257 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CUDA_ERROR_NOT_SUPPORTED, 
#line 1262 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CUDA_ERROR_UNKNOWN = 999
#line 1263 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
} CUresult; }
#line 1277 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { typedef void (__stdcall *CUstreamCallback)(CUstream hStream, CUresult status, void * userData); }
#line 1285 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { typedef size_t (__stdcall *CUoccupancyB2DSize)(int blockSize); }
#line 1361 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { typedef 
#line 1340 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
struct CUDA_MEMCPY2D_st { 
#line 1341 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
size_t srcXInBytes; 
#line 1342 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
size_t srcY; 
#line 1344 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CUmemorytype srcMemoryType; 
#line 1345 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
const void *srcHost; 
#line 1346 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CUdeviceptr srcDevice; 
#line 1347 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CUarray srcArray; 
#line 1348 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
size_t srcPitch; 
#line 1350 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
size_t dstXInBytes; 
#line 1351 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
size_t dstY; 
#line 1353 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CUmemorytype dstMemoryType; 
#line 1354 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
void *dstHost; 
#line 1355 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CUdeviceptr dstDevice; 
#line 1356 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CUarray dstArray; 
#line 1357 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
size_t dstPitch; 
#line 1359 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
size_t WidthInBytes; 
#line 1360 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
size_t Height; 
#line 1361 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
} CUDA_MEMCPY2D; }
#line 1394 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { typedef 
#line 1366 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
struct CUDA_MEMCPY3D_st { 
#line 1367 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
size_t srcXInBytes; 
#line 1368 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
size_t srcY; 
#line 1369 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
size_t srcZ; 
#line 1370 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
size_t srcLOD; 
#line 1371 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CUmemorytype srcMemoryType; 
#line 1372 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
const void *srcHost; 
#line 1373 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CUdeviceptr srcDevice; 
#line 1374 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CUarray srcArray; 
#line 1375 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
void *reserved0; 
#line 1376 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
size_t srcPitch; 
#line 1377 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
size_t srcHeight; 
#line 1379 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
size_t dstXInBytes; 
#line 1380 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
size_t dstY; 
#line 1381 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
size_t dstZ; 
#line 1382 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
size_t dstLOD; 
#line 1383 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CUmemorytype dstMemoryType; 
#line 1384 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
void *dstHost; 
#line 1385 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CUdeviceptr dstDevice; 
#line 1386 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CUarray dstArray; 
#line 1387 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
void *reserved1; 
#line 1388 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
size_t dstPitch; 
#line 1389 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
size_t dstHeight; 
#line 1391 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
size_t WidthInBytes; 
#line 1392 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
size_t Height; 
#line 1393 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
size_t Depth; 
#line 1394 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
} CUDA_MEMCPY3D; }
#line 1427 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { typedef 
#line 1399 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
struct CUDA_MEMCPY3D_PEER_st { 
#line 1400 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
size_t srcXInBytes; 
#line 1401 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
size_t srcY; 
#line 1402 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
size_t srcZ; 
#line 1403 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
size_t srcLOD; 
#line 1404 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CUmemorytype srcMemoryType; 
#line 1405 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
const void *srcHost; 
#line 1406 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CUdeviceptr srcDevice; 
#line 1407 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CUarray srcArray; 
#line 1408 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CUcontext srcContext; 
#line 1409 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
size_t srcPitch; 
#line 1410 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
size_t srcHeight; 
#line 1412 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
size_t dstXInBytes; 
#line 1413 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
size_t dstY; 
#line 1414 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
size_t dstZ; 
#line 1415 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
size_t dstLOD; 
#line 1416 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CUmemorytype dstMemoryType; 
#line 1417 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
void *dstHost; 
#line 1418 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CUdeviceptr dstDevice; 
#line 1419 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CUarray dstArray; 
#line 1420 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CUcontext dstContext; 
#line 1421 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
size_t dstPitch; 
#line 1422 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
size_t dstHeight; 
#line 1424 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
size_t WidthInBytes; 
#line 1425 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
size_t Height; 
#line 1426 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
size_t Depth; 
#line 1427 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
} CUDA_MEMCPY3D_PEER; }
#line 1439 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { typedef 
#line 1432 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
struct CUDA_ARRAY_DESCRIPTOR_st { 
#line 1434 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
size_t Width; 
#line 1435 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
size_t Height; 
#line 1437 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CUarray_format Format; 
#line 1438 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
unsigned NumChannels; 
#line 1439 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
} CUDA_ARRAY_DESCRIPTOR; }
#line 1453 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { typedef 
#line 1444 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
struct CUDA_ARRAY3D_DESCRIPTOR_st { 
#line 1446 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
size_t Width; 
#line 1447 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
size_t Height; 
#line 1448 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
size_t Depth; 
#line 1450 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CUarray_format Format; 
#line 1451 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
unsigned NumChannels; 
#line 1452 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
unsigned Flags; 
#line 1453 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
} CUDA_ARRAY3D_DESCRIPTOR; }
#line 1493 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { typedef 
#line 1462 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
struct CUDA_RESOURCE_DESC_st { 
#line 1464 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CUresourcetype resType; 
#line 1466 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
union { 
#line 1467 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
struct { 
#line 1468 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CUarray hArray; 
#line 1469 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
} array; 
#line 1470 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
struct { 
#line 1471 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CUmipmappedArray hMipmappedArray; 
#line 1472 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
} mipmap; 
#line 1473 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
struct { 
#line 1474 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CUdeviceptr devPtr; 
#line 1475 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CUarray_format format; 
#line 1476 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
unsigned numChannels; 
#line 1477 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
size_t sizeInBytes; 
#line 1478 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
} linear; 
#line 1479 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
struct { 
#line 1480 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CUdeviceptr devPtr; 
#line 1481 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CUarray_format format; 
#line 1482 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
unsigned numChannels; 
#line 1483 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
size_t width; 
#line 1484 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
size_t height; 
#line 1485 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
size_t pitchInBytes; 
#line 1486 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
} pitch2D; 
#line 1487 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
struct { 
#line 1488 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
int reserved[32]; 
#line 1489 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
} reserved; 
#line 1490 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
} res; 
#line 1492 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
unsigned flags; 
#line 1493 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
} CUDA_RESOURCE_DESC; }
#line 1508 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { typedef 
#line 1498 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
struct CUDA_TEXTURE_DESC_st { 
#line 1499 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CUaddress_mode addressMode[3]; 
#line 1500 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CUfilter_mode filterMode; 
#line 1501 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
unsigned flags; 
#line 1502 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
unsigned maxAnisotropy; 
#line 1503 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CUfilter_mode mipmapFilterMode; 
#line 1504 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
float mipmapLevelBias; 
#line 1505 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
float minMipmapLevelClamp; 
#line 1506 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
float maxMipmapLevelClamp; 
#line 1507 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
int reserved[16]; 
#line 1508 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
} CUDA_TEXTURE_DESC; }
#line 1550 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { typedef 
#line 1513 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
enum CUresourceViewFormat_enum { 
#line 1515 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_RES_VIEW_FORMAT_NONE, 
#line 1516 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_RES_VIEW_FORMAT_UINT_1X8, 
#line 1517 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_RES_VIEW_FORMAT_UINT_2X8, 
#line 1518 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_RES_VIEW_FORMAT_UINT_4X8, 
#line 1519 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_RES_VIEW_FORMAT_SINT_1X8, 
#line 1520 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_RES_VIEW_FORMAT_SINT_2X8, 
#line 1521 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_RES_VIEW_FORMAT_SINT_4X8, 
#line 1522 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_RES_VIEW_FORMAT_UINT_1X16, 
#line 1523 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_RES_VIEW_FORMAT_UINT_2X16, 
#line 1524 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_RES_VIEW_FORMAT_UINT_4X16, 
#line 1525 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_RES_VIEW_FORMAT_SINT_1X16, 
#line 1526 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_RES_VIEW_FORMAT_SINT_2X16, 
#line 1527 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_RES_VIEW_FORMAT_SINT_4X16, 
#line 1528 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_RES_VIEW_FORMAT_UINT_1X32, 
#line 1529 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_RES_VIEW_FORMAT_UINT_2X32, 
#line 1530 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_RES_VIEW_FORMAT_UINT_4X32, 
#line 1531 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_RES_VIEW_FORMAT_SINT_1X32, 
#line 1532 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_RES_VIEW_FORMAT_SINT_2X32, 
#line 1533 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_RES_VIEW_FORMAT_SINT_4X32, 
#line 1534 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_RES_VIEW_FORMAT_FLOAT_1X16, 
#line 1535 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_RES_VIEW_FORMAT_FLOAT_2X16, 
#line 1536 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_RES_VIEW_FORMAT_FLOAT_4X16, 
#line 1537 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_RES_VIEW_FORMAT_FLOAT_1X32, 
#line 1538 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_RES_VIEW_FORMAT_FLOAT_2X32, 
#line 1539 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_RES_VIEW_FORMAT_FLOAT_4X32, 
#line 1540 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_RES_VIEW_FORMAT_UNSIGNED_BC1, 
#line 1541 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_RES_VIEW_FORMAT_UNSIGNED_BC2, 
#line 1542 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_RES_VIEW_FORMAT_UNSIGNED_BC3, 
#line 1543 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_RES_VIEW_FORMAT_UNSIGNED_BC4, 
#line 1544 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_RES_VIEW_FORMAT_SIGNED_BC4, 
#line 1545 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_RES_VIEW_FORMAT_UNSIGNED_BC5, 
#line 1546 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_RES_VIEW_FORMAT_SIGNED_BC5, 
#line 1547 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_RES_VIEW_FORMAT_UNSIGNED_BC6H, 
#line 1548 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_RES_VIEW_FORMAT_SIGNED_BC6H, 
#line 1549 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CU_RES_VIEW_FORMAT_UNSIGNED_BC7
#line 1550 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
} CUresourceViewFormat; }
#line 1566 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { typedef 
#line 1555 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
struct CUDA_RESOURCE_VIEW_DESC_st { 
#line 1557 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
CUresourceViewFormat format; 
#line 1558 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
size_t width; 
#line 1559 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
size_t height; 
#line 1560 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
size_t depth; 
#line 1561 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
unsigned firstMipmapLevel; 
#line 1562 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
unsigned lastMipmapLevel; 
#line 1563 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
unsigned firstLayer; 
#line 1564 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
unsigned lastLayer; 
#line 1565 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
unsigned reserved[16]; 
#line 1566 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
} CUDA_RESOURCE_VIEW_DESC; }
#line 1574 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { typedef 
#line 1571 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
struct CUDA_POINTER_ATTRIBUTE_P2P_TOKENS_st { 
#line 1572 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
unsigned __int64 p2pToken; 
#line 1573 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
unsigned vaSpaceToken; 
#line 1574 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
} CUDA_POINTER_ATTRIBUTE_P2P_TOKENS; }
#line 1711 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuGetErrorString(CUresult error, const char ** pStr); } 
#line 1730 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuGetErrorName(CUresult error, const char ** pStr); } 
#line 1762 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuInit(unsigned Flags); } 
#line 1792 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuDriverGetVersion(int * driverVersion); } 
#line 1832 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuDeviceGet(CUdevice * device, int ordinal); } 
#line 1857 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuDeviceGetCount(int * count); } 
#line 1885 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuDeviceGetName(char * name, int len, CUdevice dev); } 
#line 1912 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuDeviceTotalMem_v2(size_t * bytes, CUdevice dev); } 
#line 2098 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuDeviceGetAttribute(int * pi, CUdevice_attribute attrib, CUdevice dev); } 
#line 2175 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuDeviceGetProperties(CUdevprop * prop, CUdevice dev); } 
#line 2208 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuDeviceComputeCapability(int * major, int * minor, CUdevice dev); } 
#line 2278 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuDevicePrimaryCtxRetain(CUcontext * pctx, CUdevice dev); } 
#line 2312 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuDevicePrimaryCtxRelease(CUdevice dev); } 
#line 2375 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuDevicePrimaryCtxSetFlags(CUdevice dev, unsigned flags); } 
#line 2399 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuDevicePrimaryCtxGetState(CUdevice dev, unsigned * flags, int * active); } 
#line 2437 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuDevicePrimaryCtxReset(CUdevice dev); } 
#line 2545 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuCtxCreate_v2(CUcontext * pctx, unsigned flags, CUdevice dev); } 
#line 2585 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuCtxDestroy_v2(CUcontext ctx); } 
#line 2621 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuCtxPushCurrent_v2(CUcontext ctx); } 
#line 2655 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuCtxPopCurrent_v2(CUcontext * pctx); } 
#line 2681 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuCtxSetCurrent(CUcontext ctx); } 
#line 2700 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuCtxGetCurrent(CUcontext * pctx); } 
#line 2730 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuCtxGetDevice(CUdevice * device); } 
#line 2758 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuCtxGetFlags(unsigned * flags); } 
#line 2788 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuCtxSynchronize(); } 
#line 2883 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuCtxSetLimit(CUlimit limit, size_t value); } 
#line 2922 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuCtxGetLimit(size_t * pvalue, CUlimit limit); } 
#line 2965 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuCtxGetCacheConfig(CUfunc_cache * pconfig); } 
#line 3015 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuCtxSetCacheConfig(CUfunc_cache config); } 
#line 3057 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuCtxGetSharedMemConfig(CUsharedconfig * pConfig); } 
#line 3109 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuCtxSetSharedMemConfig(CUsharedconfig config); } 
#line 3147 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuCtxGetApiVersion(CUcontext ctx, unsigned * version); } 
#line 3186 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuCtxGetStreamPriorityRange(int * leastPriority, int * greatestPriority); } 
#line 3241 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuCtxAttach(CUcontext * pctx, unsigned flags); } 
#line 3277 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuCtxDetach(CUcontext ctx); } 
#line 3331 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuModuleLoad(CUmodule * module, const char * fname); } 
#line 3367 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuModuleLoadData(CUmodule * module, const void * image); } 
#line 3409 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuModuleLoadDataEx(CUmodule * module, const void * image, unsigned numOptions, CUjit_option * options, void ** optionValues); } 
#line 3450 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuModuleLoadFatBinary(CUmodule * module, const void * fatCubin); } 
#line 3475 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuModuleUnload(CUmodule hmod); } 
#line 3505 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuModuleGetFunction(CUfunction * hfunc, CUmodule hmod, const char * name); } 
#line 3539 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuModuleGetGlobal_v2(CUdeviceptr * dptr, size_t * bytes, CUmodule hmod, const char * name); } 
#line 3573 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuModuleGetTexRef(CUtexref * pTexRef, CUmodule hmod, const char * name); } 
#line 3604 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuModuleGetSurfRef(CUsurfref * pSurfRef, CUmodule hmod, const char * name); } 
#line 3646 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuLinkCreate_v2(unsigned numOptions, CUjit_option * options, void ** optionValues, CUlinkState * stateOut); } 
#line 3683 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuLinkAddData_v2(CUlinkState state, CUjitInputType type, void * data, size_t size, const char * name, unsigned numOptions, CUjit_option * options, void ** optionValues); } 
#line 3722 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuLinkAddFile_v2(CUlinkState state, CUjitInputType type, const char * path, unsigned numOptions, CUjit_option * options, void ** optionValues); } 
#line 3749 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuLinkComplete(CUlinkState state, void ** cubinOut, size_t * sizeOut); } 
#line 3763 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuLinkDestroy(CUlinkState state); } 
#line 3811 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuMemGetInfo_v2(size_t * free, size_t * total); } 
#line 3844 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuMemAlloc_v2(CUdeviceptr * dptr, size_t bytesize); } 
#line 3905 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuMemAllocPitch_v2(CUdeviceptr * dptr, size_t * pPitch, size_t WidthInBytes, size_t Height, unsigned ElementSizeBytes); } 
#line 3934 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuMemFree_v2(CUdeviceptr dptr); } 
#line 3967 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuMemGetAddressRange_v2(CUdeviceptr * pbase, size_t * psize, CUdeviceptr dptr); } 
#line 4013 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuMemAllocHost_v2(void ** pp, size_t bytesize); } 
#line 4043 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuMemFreeHost(void * p); } 
#line 4125 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuMemHostAlloc(void ** pp, size_t bytesize, unsigned Flags); } 
#line 4163 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuMemHostGetDevicePointer_v2(CUdeviceptr * pdptr, void * p, unsigned Flags); } 
#line 4188 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuMemHostGetFlags(unsigned * pFlags, void * p); } 
#line 4270 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuMemAllocManaged(CUdeviceptr * dptr, size_t bytesize, unsigned flags); } 
#line 4299 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuDeviceGetByPCIBusId(CUdevice * dev, const char * pciBusId); } 
#line 4327 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuDeviceGetPCIBusId(char * pciBusId, int len, CUdevice dev); } 
#line 4369 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuIpcGetEventHandle(CUipcEventHandle * pHandle, CUevent event); } 
#line 4406 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuIpcOpenEventHandle(CUevent * phEvent, CUipcEventHandle handle); } 
#line 4443 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuIpcGetMemHandle(CUipcMemHandle * pHandle, CUdeviceptr dptr); } 
#line 4494 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuIpcOpenMemHandle(CUdeviceptr * pdptr, CUipcMemHandle handle, unsigned Flags); } 
#line 4525 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuIpcCloseMemHandle(CUdeviceptr dptr); } 
#line 4593 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuMemHostRegister_v2(void * p, size_t bytesize, unsigned Flags); } 
#line 4617 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuMemHostUnregister(void * p); } 
#line 4653 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuMemcpy(CUdeviceptr dst, CUdeviceptr src, size_t ByteCount); } 
#line 4682 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuMemcpyPeer(CUdeviceptr dstDevice, CUcontext dstContext, CUdeviceptr srcDevice, CUcontext srcContext, size_t ByteCount); } 
#line 4718 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuMemcpyHtoD_v2(CUdeviceptr dstDevice, const void * srcHost, size_t ByteCount); } 
#line 4751 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuMemcpyDtoH_v2(void * dstHost, CUdeviceptr srcDevice, size_t ByteCount); } 
#line 4784 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuMemcpyDtoD_v2(CUdeviceptr dstDevice, CUdeviceptr srcDevice, size_t ByteCount); } 
#line 4819 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuMemcpyDtoA_v2(CUarray dstArray, size_t dstOffset, CUdeviceptr srcDevice, size_t ByteCount); } 
#line 4856 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuMemcpyAtoD_v2(CUdeviceptr dstDevice, CUarray srcArray, size_t srcOffset, size_t ByteCount); } 
#line 4891 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuMemcpyHtoA_v2(CUarray dstArray, size_t dstOffset, const void * srcHost, size_t ByteCount); } 
#line 4926 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuMemcpyAtoH_v2(void * dstHost, CUarray srcArray, size_t srcOffset, size_t ByteCount); } 
#line 4965 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuMemcpyAtoA_v2(CUarray dstArray, size_t dstOffset, CUarray srcArray, size_t srcOffset, size_t ByteCount); } 
#line 5126 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuMemcpy2D_v2(const CUDA_MEMCPY2D * pCopy); } 
#line 5285 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuMemcpy2DUnaligned_v2(const CUDA_MEMCPY2D * pCopy); } 
#line 5453 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuMemcpy3D_v2(const CUDA_MEMCPY3D * pCopy); } 
#line 5478 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuMemcpy3DPeer(const CUDA_MEMCPY3D_PEER * pCopy); } 
#line 5518 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuMemcpyAsync(CUdeviceptr dst, CUdeviceptr src, size_t ByteCount, CUstream hStream); } 
#line 5549 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuMemcpyPeerAsync(CUdeviceptr dstDevice, CUcontext dstContext, CUdeviceptr srcDevice, CUcontext srcContext, size_t ByteCount, CUstream hStream); } 
#line 5588 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuMemcpyHtoDAsync_v2(CUdeviceptr dstDevice, const void * srcHost, size_t ByteCount, CUstream hStream); } 
#line 5625 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuMemcpyDtoHAsync_v2(void * dstHost, CUdeviceptr srcDevice, size_t ByteCount, CUstream hStream); } 
#line 5662 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuMemcpyDtoDAsync_v2(CUdeviceptr dstDevice, CUdeviceptr srcDevice, size_t ByteCount, CUstream hStream); } 
#line 5701 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuMemcpyHtoAAsync_v2(CUarray dstArray, size_t dstOffset, const void * srcHost, size_t ByteCount, CUstream hStream); } 
#line 5740 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuMemcpyAtoHAsync_v2(void * dstHost, CUarray srcArray, size_t srcOffset, size_t ByteCount, CUstream hStream); } 
#line 5905 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuMemcpy2DAsync_v2(const CUDA_MEMCPY2D * pCopy, CUstream hStream); } 
#line 6077 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuMemcpy3DAsync_v2(const CUDA_MEMCPY3D * pCopy, CUstream hStream); } 
#line 6104 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuMemcpy3DPeerAsync(const CUDA_MEMCPY3D_PEER * pCopy, CUstream hStream); } 
#line 6140 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuMemsetD8_v2(CUdeviceptr dstDevice, unsigned char uc, size_t N); } 
#line 6174 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuMemsetD16_v2(CUdeviceptr dstDevice, unsigned short us, size_t N); } 
#line 6208 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuMemsetD32_v2(CUdeviceptr dstDevice, unsigned ui, size_t N); } 
#line 6247 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuMemsetD2D8_v2(CUdeviceptr dstDevice, size_t dstPitch, unsigned char uc, size_t Width, size_t Height); } 
#line 6287 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuMemsetD2D16_v2(CUdeviceptr dstDevice, size_t dstPitch, unsigned short us, size_t Width, size_t Height); } 
#line 6327 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuMemsetD2D32_v2(CUdeviceptr dstDevice, size_t dstPitch, unsigned ui, size_t Width, size_t Height); } 
#line 6363 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuMemsetD8Async(CUdeviceptr dstDevice, unsigned char uc, size_t N, CUstream hStream); } 
#line 6399 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuMemsetD16Async(CUdeviceptr dstDevice, unsigned short us, size_t N, CUstream hStream); } 
#line 6434 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuMemsetD32Async(CUdeviceptr dstDevice, unsigned ui, size_t N, CUstream hStream); } 
#line 6475 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuMemsetD2D8Async(CUdeviceptr dstDevice, size_t dstPitch, unsigned char uc, size_t Width, size_t Height, CUstream hStream); } 
#line 6517 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuMemsetD2D16Async(CUdeviceptr dstDevice, size_t dstPitch, unsigned short us, size_t Width, size_t Height, CUstream hStream); } 
#line 6559 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuMemsetD2D32Async(CUdeviceptr dstDevice, size_t dstPitch, unsigned ui, size_t Width, size_t Height, CUstream hStream); } 
#line 6662 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuArrayCreate_v2(CUarray * pHandle, const CUDA_ARRAY_DESCRIPTOR * pAllocateArray); } 
#line 6695 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuArrayGetDescriptor_v2(CUDA_ARRAY_DESCRIPTOR * pArrayDescriptor, CUarray hArray); } 
#line 6726 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuArrayDestroy(CUarray hArray); } 
#line 6906 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuArray3DCreate_v2(CUarray * pHandle, const CUDA_ARRAY3D_DESCRIPTOR * pAllocateArray); } 
#line 6942 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuArray3DGetDescriptor_v2(CUDA_ARRAY3D_DESCRIPTOR * pArrayDescriptor, CUarray hArray); } 
#line 7069 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuMipmappedArrayCreate(CUmipmappedArray * pHandle, const CUDA_ARRAY3D_DESCRIPTOR * pMipmappedArrayDesc, unsigned numMipmapLevels); } 
#line 7095 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuMipmappedArrayGetLevel(CUarray * pLevelArray, CUmipmappedArray hMipmappedArray, unsigned level); } 
#line 7115 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuMipmappedArrayDestroy(CUmipmappedArray hMipmappedArray); } 
#line 7361 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuPointerGetAttribute(void * data, CUpointer_attribute attribute, CUdeviceptr ptr); } 
#line 7405 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuPointerSetAttribute(const void * value, CUpointer_attribute attribute, CUdeviceptr ptr); } 
#line 7447 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuPointerGetAttributes(unsigned numAttributes, CUpointer_attribute * attributes, void ** data, CUdeviceptr ptr); } 
#line 7495 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuStreamCreate(CUstream * phStream, unsigned Flags); } 
#line 7543 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuStreamCreateWithPriority(CUstream * phStream, unsigned flags, int priority); } 
#line 7573 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuStreamGetPriority(CUstream hStream, int * priority); } 
#line 7600 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuStreamGetFlags(CUstream hStream, unsigned * flags); } 
#line 7641 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuStreamWaitEvent(CUstream hStream, CUevent hEvent, unsigned Flags); } 
#line 7712 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuStreamAddCallback(CUstream hStream, CUstreamCallback callback, void * userData, unsigned flags); } 
#line 7788 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuStreamAttachMemAsync(CUstream hStream, CUdeviceptr dptr, size_t length, unsigned flags); } 
#line 7819 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuStreamQuery(CUstream hStream); } 
#line 7846 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuStreamSynchronize(CUstream hStream); } 
#line 7875 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuStreamDestroy_v2(CUstream hStream); } 
#line 7930 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuEventCreate(CUevent * phEvent, unsigned Flags); } 
#line 7966 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuEventRecord(CUevent hEvent, CUstream hStream); } 
#line 8000 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuEventQuery(CUevent hEvent); } 
#line 8034 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuEventSynchronize(CUevent hEvent); } 
#line 8063 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuEventDestroy_v2(CUevent hEvent); } 
#line 8107 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuEventElapsedTime(float * pMilliseconds, CUevent hStart, CUevent hEnd); } 
#line 8174 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuFuncGetAttribute(int * pi, CUfunction_attribute attrib, CUfunction hfunc); } 
#line 8217 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuFuncSetCacheConfig(CUfunction hfunc, CUfunc_cache config); } 
#line 8269 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuFuncSetSharedMemConfig(CUfunction hfunc, CUsharedconfig config); } 
#line 8383 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuLaunchKernel(CUfunction f, unsigned gridDimX, unsigned gridDimY, unsigned gridDimZ, unsigned blockDimX, unsigned blockDimY, unsigned blockDimZ, unsigned sharedMemBytes, CUstream hStream, void ** kernelParams, void ** extra); } 
#line 8444 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuFuncSetBlockShape(CUfunction hfunc, int x, int y, int z); } 
#line 8478 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuFuncSetSharedSize(CUfunction hfunc, unsigned bytes); } 
#line 8510 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuParamSetSize(CUfunction hfunc, unsigned numbytes); } 
#line 8543 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuParamSeti(CUfunction hfunc, int offset, unsigned value); } 
#line 8576 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuParamSetf(CUfunction hfunc, int offset, float value); } 
#line 8611 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuParamSetv(CUfunction hfunc, int offset, void * ptr, unsigned numbytes); } 
#line 8648 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuLaunch(CUfunction f); } 
#line 8687 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuLaunchGrid(CUfunction f, int grid_width, int grid_height); } 
#line 8734 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuLaunchGridAsync(CUfunction f, int grid_width, int grid_height, CUstream hStream); } 
#line 8759 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuParamSetTexRef(CUfunction hfunc, int texunit, CUtexref hTexRef); } 
#line 8797 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuOccupancyMaxActiveBlocksPerMultiprocessor(int * numBlocks, CUfunction func, int blockSize, size_t dynamicSMemSize); } 
#line 8837 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuOccupancyMaxActiveBlocksPerMultiprocessorWithFlags(int * numBlocks, CUfunction func, int blockSize, size_t dynamicSMemSize, unsigned flags); } 
#line 8887 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuOccupancyMaxPotentialBlockSize(int * minGridSize, int * blockSize, CUfunction func, CUoccupancyB2DSize blockSizeToDynamicSMemSize, size_t dynamicSMemSize, int blockSizeLimit); } 
#line 8931 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuOccupancyMaxPotentialBlockSizeWithFlags(int * minGridSize, int * blockSize, CUfunction func, CUoccupancyB2DSize blockSizeToDynamicSMemSize, size_t dynamicSMemSize, int blockSizeLimit, unsigned flags); } 
#line 8974 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuTexRefSetArray(CUtexref hTexRef, CUarray hArray, unsigned Flags); } 
#line 9001 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuTexRefSetMipmappedArray(CUtexref hTexRef, CUmipmappedArray hMipmappedArray, unsigned Flags); } 
#line 9045 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuTexRefSetAddress_v2(size_t * ByteOffset, CUtexref hTexRef, CUdeviceptr dptr, size_t bytes); } 
#line 9097 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuTexRefSetAddress2D_v3(CUtexref hTexRef, const CUDA_ARRAY_DESCRIPTOR * desc, CUdeviceptr dptr, size_t Pitch); } 
#line 9126 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuTexRefSetFormat(CUtexref hTexRef, CUarray_format fmt, int NumPackedComponents); } 
#line 9166 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuTexRefSetAddressMode(CUtexref hTexRef, int dim, CUaddress_mode am); } 
#line 9199 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuTexRefSetFilterMode(CUtexref hTexRef, CUfilter_mode fm); } 
#line 9232 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuTexRefSetMipmapFilterMode(CUtexref hTexRef, CUfilter_mode fm); } 
#line 9258 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuTexRefSetMipmapLevelBias(CUtexref hTexRef, float bias); } 
#line 9286 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuTexRefSetMipmapLevelClamp(CUtexref hTexRef, float minMipmapLevelClamp, float maxMipmapLevelClamp); } 
#line 9312 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuTexRefSetMaxAnisotropy(CUtexref hTexRef, unsigned maxAniso); } 
#line 9347 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuTexRefSetFlags(CUtexref hTexRef, unsigned Flags); } 
#line 9373 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuTexRefGetAddress_v2(CUdeviceptr * pdptr, CUtexref hTexRef); } 
#line 9399 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuTexRefGetArray(CUarray * phArray, CUtexref hTexRef); } 
#line 9424 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuTexRefGetMipmappedArray(CUmipmappedArray * phMipmappedArray, CUtexref hTexRef); } 
#line 9450 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuTexRefGetAddressMode(CUaddress_mode * pam, CUtexref hTexRef, int dim); } 
#line 9474 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuTexRefGetFilterMode(CUfilter_mode * pfm, CUtexref hTexRef); } 
#line 9500 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuTexRefGetFormat(CUarray_format * pFormat, int * pNumChannels, CUtexref hTexRef); } 
#line 9524 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuTexRefGetMipmapFilterMode(CUfilter_mode * pfm, CUtexref hTexRef); } 
#line 9548 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuTexRefGetMipmapLevelBias(float * pbias, CUtexref hTexRef); } 
#line 9573 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuTexRefGetMipmapLevelClamp(float * pminMipmapLevelClamp, float * pmaxMipmapLevelClamp, CUtexref hTexRef); } 
#line 9597 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuTexRefGetMaxAnisotropy(int * pmaxAniso, CUtexref hTexRef); } 
#line 9620 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuTexRefGetFlags(unsigned * pFlags, CUtexref hTexRef); } 
#line 9659 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuTexRefCreate(CUtexref * pTexRef); } 
#line 9679 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuTexRefDestroy(CUtexref hTexRef); } 
#line 9718 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuSurfRefSetArray(CUsurfref hSurfRef, CUarray hArray, unsigned Flags); } 
#line 9739 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuSurfRefGetArray(CUarray * phArray, CUsurfref hSurfRef); } 
#line 9961 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuTexObjectCreate(CUtexObject * pTexObject, const CUDA_RESOURCE_DESC * pResDesc, const CUDA_TEXTURE_DESC * pTexDesc, const CUDA_RESOURCE_VIEW_DESC * pResViewDesc); } 
#line 9979 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuTexObjectDestroy(CUtexObject texObject); } 
#line 9998 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuTexObjectGetResourceDesc(CUDA_RESOURCE_DESC * pResDesc, CUtexObject texObject); } 
#line 10017 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuTexObjectGetTextureDesc(CUDA_TEXTURE_DESC * pTexDesc, CUtexObject texObject); } 
#line 10037 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuTexObjectGetResourceViewDesc(CUDA_RESOURCE_VIEW_DESC * pResViewDesc, CUtexObject texObject); } 
#line 10078 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuSurfObjectCreate(CUsurfObject * pSurfObject, const CUDA_RESOURCE_DESC * pResDesc); } 
#line 10096 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuSurfObjectDestroy(CUsurfObject surfObject); } 
#line 10115 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuSurfObjectGetResourceDesc(CUDA_RESOURCE_DESC * pResDesc, CUsurfObject surfObject); } 
#line 10157 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuDeviceCanAccessPeer(int * canAccessPeer, CUdevice dev, CUdevice peerDev); } 
#line 10206 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuCtxEnablePeerAccess(CUcontext peerContext, unsigned Flags); } 
#line 10231 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuCtxDisablePeerAccess(CUcontext peerContext); } 
#line 10275 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuGraphicsUnregisterResource(CUgraphicsResource resource); } 
#line 10313 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuGraphicsSubResourceGetMappedArray(CUarray * pArray, CUgraphicsResource resource, unsigned arrayIndex, unsigned mipLevel); } 
#line 10344 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuGraphicsResourceGetMappedMipmappedArray(CUmipmappedArray * pMipmappedArray, CUgraphicsResource resource); } 
#line 10380 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuGraphicsResourceGetMappedPointer_v2(CUdeviceptr * pDevPtr, size_t * pSize, CUgraphicsResource resource); } 
#line 10421 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuGraphicsResourceSetMapFlags_v2(CUgraphicsResource resource, unsigned flags); } 
#line 10460 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuGraphicsMapResources(unsigned count, CUgraphicsResource * resources, CUstream hStream); } 
#line 10496 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuGraphicsUnmapResources(unsigned count, CUgraphicsResource * resources, CUstream hStream); } 
#line 10500 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\cuda.h"
extern "C" { CUresult __stdcall cuGetExportTable(const void ** ppExportTable, const CUuuid * pExportTableId); } 
#line 21 "C:/Users/MSB/Documents/Visual Studio 2015/Projects/Neural-Net/CUDA/kernel.cu"
extern "C" {  __declspec(noinline) void FeedFoward(double *inputs, double *weightMatrix, double *biases, double *activations, int numInputNeurons) ;



















#line 42 "C:/Users/MSB/Documents/Visual Studio 2015/Projects/Neural-Net/CUDA/kernel.cu"
} 
#line 32 "C:/Users/MSB/Documents/Visual Studio 2015/Projects/Neural-Net/CUDA/kernel.cu"
extern "C" {  __declspec(noinline) void BackPropFirstLayer(double *errors, double *activations, double *correct) ;









#line 43 "C:/Users/MSB/Documents/Visual Studio 2015/Projects/Neural-Net/CUDA/kernel.cu"
} 
#line 38 "C:/Users/MSB/Documents/Visual Studio 2015/Projects/Neural-Net/CUDA/kernel.cu"
extern "C" {  __declspec(noinline) void BackProp(double *input_errors, double *output_errors, double *activations, double *weightMatrix, int numOutputNeurons, int numInputNeurons) ;





















#line 61 "C:/Users/MSB/Documents/Visual Studio 2015/Projects/Neural-Net/CUDA/kernel.cu"
} 
#line 50 "C:/Users/MSB/Documents/Visual Studio 2015/Projects/Neural-Net/CUDA/kernel.cu"
extern "C" {  __declspec(noinline) void AverageAndCorrect(double *errors, double *weightMatrix, double *biases, double *prevLayerActivations, int numInputNeurons, int miniBatchSize) ;





















#line 73 "C:/Users/MSB/Documents/Visual Studio 2015/Projects/Neural-Net/CUDA/kernel.cu"
} 
#line 63 "C:/Users/MSB/Documents/Visual Studio 2015/Projects/Neural-Net/CUDA/kernel.cu"
int main() 
#line 64 "C:/Users/MSB/Documents/Visual Studio 2015/Projects/Neural-Net/CUDA/kernel.cu"
{ 
#line 65 "C:/Users/MSB/Documents/Visual Studio 2015/Projects/Neural-Net/CUDA/kernel.cu"
return 0; 
#line 66 "C:/Users/MSB/Documents/Visual Studio 2015/Projects/Neural-Net/CUDA/kernel.cu"
} 
#line 1 "kernel.cudafe1.stub.c"

#line 1 "kernel.cudafe1.stub.c"
#line 1 "c:\\users\\msb\\documents\\visual studio 2015\\projects\\neural-net\\cuda\\debug\\kernel.cudafe1.stub.c"

#line 1 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\crt/host_runtime.h"







































































#line 73 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\crt/host_runtime.h"

template <typename T>
static inline T *__cudaAddressOf(T &val) 
{
    return (T *)((void *)(&(const_cast<char &>(reinterpret_cast<const volatile char &>(val)))));
}





        











          



          







#line 109 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\crt/host_runtime.h"


#line 112 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\crt/host_runtime.h"




#line 117 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\crt/host_runtime.h"


#line 120 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\crt/host_runtime.h"

static void ____nv_dummy_param_ref(void *param) { volatile static void **__ref; __ref = (volatile void **)param; }




extern "C" {
void __cudaRegisterLinkedBinary__NV_MODULE_ID ( void (*)(void **), void *, void *, void (*)(void *));
}




extern "C" {

#pragma data_seg("__nv_module_id")
  static const __declspec(allocate("__nv_module_id")) unsigned char __module_id_str[] = "__NV_MODULE_ID";
#pragma data_seg()




#line 143 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\crt/host_runtime.h"









}

extern "C" {
extern void** __stdcall __cudaRegisterFatBinary(
  void *fatCubin
);

extern void __stdcall __cudaUnregisterFatBinary(
  void **fatCubinHandle
);

extern void __stdcall __cudaRegisterVar(
        void **fatCubinHandle,
        char  *hostVar,
        char  *deviceAddress,
  const char  *deviceName,
        int    ext,
        int    size,
        int    constant,
        int    global
);

extern void __stdcall __cudaRegisterManagedVar(
        void **fatCubinHandle,
        void **hostVarPtrAddress,
        char  *deviceAddress,
  const char  *deviceName,
        int    ext,
        int    size,
        int    constant,
        int    global
);

extern char __stdcall __cudaInitModule(
        void **fatCubinHandle
);

extern void __stdcall __cudaRegisterTexture(
        void                    **fatCubinHandle,
  const struct textureReference  *hostVar,
  const void                    **deviceAddress,
  const char                     *deviceName,
        int                       dim,       
        int                       norm,      
        int                        ext        
);

extern void __stdcall __cudaRegisterSurface(
        void                    **fatCubinHandle,
  const struct surfaceReference  *hostVar,
  const void                    **deviceAddress,
  const char                     *deviceName,
        int                       dim,       
        int                       ext        
);

extern void __stdcall __cudaRegisterFunction(
        void   **fatCubinHandle,
  const char    *hostFun,
        char    *deviceFun,
  const char    *deviceName,
        int      thread_limit,
        uint3   *tid,
        uint3   *bid,
        dim3    *bDim,
        dim3    *gDim,
        int     *wSize
);




#line 225 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\crt/host_runtime.h"


#line 228 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\crt/host_runtime.h"
extern int __cdecl atexit(void(__cdecl *)(void));
#line 230 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\crt/host_runtime.h"

}

static void **__cudaFatCubinHandle;

static void __cdecl __cudaUnregisterBinaryUtil(void)
{
  ____nv_dummy_param_ref((void *)&__cudaFatCubinHandle);
  __cudaUnregisterFatBinary(__cudaFatCubinHandle);
}

static char __nv_init_managed_rt_with_module(void **handle)
{
  return __cudaInitModule(handle);
}

#line 1 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\common_functions.h"




















































































































































































































#line 214 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\common_functions.h"








#line 223 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\common_functions.h"

#line 1 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"
















































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































#line 9714 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"





#line 9720 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"


















































































































































































































#line 9931 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"







#line 1 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\crt/func_macro.h"













































#line 47 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\crt/func_macro.h"





#line 53 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\crt/func_macro.h"









#line 63 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\crt/func_macro.h"







#line 71 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\crt/func_macro.h"

#line 73 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\crt/func_macro.h"

#line 75 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\crt/func_macro.h"
#line 9939 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"



#pragma warning(disable : 4211)

#line 9945 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"

static inline double rsqrt(double a);

static inline double rcbrt(double a);

static inline double sinpi(double a);

static inline double cospi(double a);

static inline void sincospi(double a, double *sptr, double *cptr);

static inline double erfinv(double a);

static inline double erfcinv(double a);

static inline double normcdfinv(double a);

static inline double normcdf(double a);

static inline double erfcx(double a);

static inline float rsqrtf(float a);

static inline float rcbrtf(float a);

static inline float sinpif(float a);

static inline float cospif(float a);

static inline void sincospif(float a, float *sptr, float *cptr);

static inline float erfinvf(float a);

static inline float erfcinvf(float a);

static inline float normcdfinvf(float a);

static inline float normcdff(float a);

static inline float erfcxf(float a);

static inline int min(int a, int b);

static inline unsigned int umin(unsigned int a, unsigned int b);

static inline long long int llmin(long long int a, long long int b);

static inline unsigned long long int ullmin(unsigned long long int a, unsigned long long int b);

static inline int max(int a, int b);

static inline unsigned int umax(unsigned int a, unsigned int b);

static inline long long int llmax(long long int a, long long int b);

static inline unsigned long long int ullmax(unsigned long long int a, unsigned long long int b);



static inline int __isnan(double a);

#line 10007 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"



static inline void sincos(double a, double *sptr, double *cptr);

#line 10013 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"



static inline double exp10(double a);

static inline float exp10f(float a);

static inline void sincosf(float a, float *sptr, float *cptr);

static inline int __isinf(double a);

#line 10025 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"





#line 10031 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"



static inline int __signbit(double a);

static inline int __finite(double a);

static inline int __signbitl(long double a);

static inline int __signbitf(float a);

static inline int __finitel(long double a);

static inline int __finitef(float a);

static inline int __isinfl(long double a);

static inline int __isinff(float a);

static inline int __isnanl(long double a);

static inline int __isnanf(float a);

#line 10055 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"













































































































































#line 10197 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"



#pragma warning(default: 4211)

#line 10203 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"

#line 10205 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"

#line 10207 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"



#line 1 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
























































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































#line 1050 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"


#line 1 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\host_defines.h"
















































































































































































































































#line 242 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\host_defines.h"
#line 1053 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
#line 1 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_constants.h"























































































































































#line 153 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_constants.h"
#line 1054 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"


























































































































































































































































































































































































































































































































































































#line 1625 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"







#line 1 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\crt/func_macro.h"









































































#line 75 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\crt/func_macro.h"
#line 1633 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"



#pragma warning(disable : 4211)

#line 1639 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"



static inline int __isnan(double a)
{
  volatile union {
    double                 d;
    unsigned long long int l;
  } cvt;

  cvt.d = a;

  return cvt.l << 1 > 0xffe0000000000000ull;
}

#line 1655 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"









static inline double exp10(double a)
{
  return pow(10.0, a);
}

static inline float exp10f(float a)
{
    return (float)exp10((double)a);
}

static inline void sincos(double a, double *sptr, double *cptr)
{
  *sptr = sin(a);
  *cptr = cos(a);
}

static inline void sincosf(float a, float *sptr, float *cptr)
{
  double s, c;

  sincos((double)a, &s, &c);
  *sptr = (float)s;
  *cptr = (float)c;
}

static inline int __isinf(double a)
{
  volatile union {
    double                 d;
    unsigned long long int l;
  } cvt;

  cvt.d = a;

  return cvt.l << 1 == 0xffe0000000000000ull;
}

#line 1702 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"








#line 1711 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"

#line 1713 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"









static inline int __signbit(double a)
{
  volatile union {
    double               d;
    signed long long int l;
  } cvt;

  cvt.d = a;
  return cvt.l < 0ll;
}














#line 1747 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"

static inline int __finite(double a)
{
  volatile union {
    double                 d;
    unsigned long long int l;
  } cvt;

  cvt.d = a;
  return cvt.l << 1 < 0xffe0000000000000ull;
}








































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































#line 3111 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"








static inline int __signbitl(long double a)
{
  return __signbit((double)a);
}

static inline int __signbitf(float a)
{
  return __signbit((double)a);
}

static inline int __finitel(long double a)
{
  return __finite((double)a);
}

static inline int __finitef(float a)
{
  return __finite((double)a);
}

static inline int __isinfl(long double a)
{
  return __isinf((double)a);
}

static inline int __isinff(float a)
{
  return __isinf((double)a);
}

static inline int __isnanl(long double a)
{
  return __isnan((double)a);
}

static inline int __isnanf(float a)
{
  return __isnan((double)a);
}























































































































































#line 3310 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"


























































#line 3369 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"

#line 3371 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"







static inline double rsqrt(double a)
{
  return 1.0 / sqrt(a);
}

static inline double rcbrt(double a)
{
  double s, t;

  if (__isnan(a)) {
    return a + a;
  }
  if (a == 0.0 || __isinf(a)) {
    return 1.0 / a;
  } 
  s = fabs(a);
  t = exp2(-3.3333333333333333e-1 * log2(s));                
  t = ((t*t) * (-s*t) + 1.0) * (3.3333333333333333e-1*t) + t;


#line 3399 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
  if (__signbit(a))
#line 3401 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"
  {
    t = -t;
  }
  return t;
}

static inline double sinpi(double a)
{
  int n;

  if (__isnan(a)) {
    return a + a;
  }
  if (a == 0.0 || __isinf(a)) {
    return sin (a);
  } 
  if (a == floor(a)) {
    return ((a / 1.0e308) / 1.0e308) / 1.0e308;
  }
  a = remquo (a, 0.5, &n);
  a = a * 3.1415926535897931e+0;
  if (n & 1) {
    a = cos (a);
  } else {
    a = sin (a);
  }
  if (n & 2) {
    a = -a;
  }
  return a;
}

static inline double cospi(double a)
{
  int n;

  if (__isnan(a)) {
    return a + a;
  }
  if (__isinf(a)) {
    return cos (a);
  } 
  if (fabs(a) > 9.0071992547409920e+015) {
    a = 0.0;
  }
  a = remquo (a, 0.5, &n);
  a = a * 3.1415926535897931e+0;
  n++;
  if (n & 1) {
    a = cos (a);
  } else {
    a = sin (a);
  }
  if (n & 2) {
    a = -a;
  }
  if (a == 0.0) {
    a = fabs(a);
  }
  return a;
}

static inline void sincospi(double a, double *sptr, double *cptr)
{
  *sptr = sinpi(a);
  *cptr = cospi(a);
}

static inline double erfinv(double a)
{
  double p, q, t, fa;
  volatile union {
    double d;
    unsigned long long int l;
  } cvt;

  fa = fabs(a);
  if (fa >= 1.0) {
    cvt.l = 0xfff8000000000000ull;
    t = cvt.d;                    
    if (fa == 1.0) {
      t = a * exp(1000.0);        
    }
  } else if (fa >= 0.9375) {
    



    t = log1p(-fa);
    t = 1.0 / sqrt(-t);
    p =         2.7834010353747001060e-3;
    p = p * t + 8.6030097526280260580e-1;
    p = p * t + 2.1371214997265515515e+0;
    p = p * t + 3.1598519601132090206e+0;
    p = p * t + 3.5780402569085996758e+0;
    p = p * t + 1.5335297523989890804e+0;
    p = p * t + 3.4839207139657522572e-1;
    p = p * t + 5.3644861147153648366e-2;
    p = p * t + 4.3836709877126095665e-3;
    p = p * t + 1.3858518113496718808e-4;
    p = p * t + 1.1738352509991666680e-6;
    q =     t + 2.2859981272422905412e+0;
    q = q * t + 4.3859045256449554654e+0;
    q = q * t + 4.6632960348736635331e+0;
    q = q * t + 3.9846608184671757296e+0;
    q = q * t + 1.6068377709719017609e+0;
    q = q * t + 3.5609087305900265560e-1;
    q = q * t + 5.3963550303200816744e-2;
    q = q * t + 4.3873424022706935023e-3;
    q = q * t + 1.3858762165532246059e-4;
    q = q * t + 1.1738313872397777529e-6;
    t = p / (q * t);
    if (a < 0.0) t = -t;
  } else if (fa >= 0.75) {
    



    t = a * a - .87890625;
    p =         .21489185007307062000e+0;
    p = p * t - .64200071507209448655e+1;
    p = p * t + .29631331505876308123e+2;
    p = p * t - .47644367129787181803e+2;
    p = p * t + .34810057749357500873e+2;
    p = p * t - .12954198980646771502e+2;
    p = p * t + .25349389220714893917e+1;
    p = p * t - .24758242362823355486e+0;
    p = p * t + .94897362808681080020e-2;
    q =     t - .12831383833953226499e+2;
    q = q * t + .41409991778428888716e+2;
    q = q * t - .53715373448862143349e+2;
    q = q * t + .33880176779595142685e+2;
    q = q * t - .11315360624238054876e+2;
    q = q * t + .20369295047216351160e+1;
    q = q * t - .18611650627372178511e+0;
    q = q * t + .67544512778850945940e-2;
    p = p / q;
    t = a * p;
  } else {
    



    t = a * a - .5625;
    p =       - .23886240104308755900e+2;
    p = p * t + .45560204272689128170e+3;
    p = p * t - .22977467176607144887e+4;
    p = p * t + .46631433533434331287e+4;
    p = p * t - .43799652308386926161e+4;
    p = p * t + .19007153590528134753e+4;
    p = p * t - .30786872642313695280e+3;
    q =     t - .83288327901936570000e+2;
    q = q * t + .92741319160935318800e+3;
    q = q * t - .35088976383877264098e+4;
    q = q * t + .59039348134843665626e+4;
    q = q * t - .48481635430048872102e+4;
    q = q * t + .18997769186453057810e+4;
    q = q * t - .28386514725366621129e+3;
    p = p / q;
    t = a * p;
  }
  return t;
}

static inline double erfcinv(double a)
{
  double t;
  volatile union {
    double d;
    unsigned long long int l;
  } cvt;

  if (__isnan(a)) {
    return a + a;
  }
  if (a <= 0.0) {
    cvt.l = 0xfff8000000000000ull;
    t = cvt.d;                        
    if (a == 0.0) {
        t = (1.0 - a) * exp(1000.0);  
    }
  } 
  else if (a >= 0.0625) {
    t = erfinv (1.0 - a);
  }
  else if (a >= 1e-100) {
    



    double p, q;
    t = log(a);
    t = 1.0 / sqrt(-t);
    p =         2.7834010353747001060e-3;
    p = p * t + 8.6030097526280260580e-1;
    p = p * t + 2.1371214997265515515e+0;
    p = p * t + 3.1598519601132090206e+0;
    p = p * t + 3.5780402569085996758e+0;
    p = p * t + 1.5335297523989890804e+0;
    p = p * t + 3.4839207139657522572e-1;
    p = p * t + 5.3644861147153648366e-2;
    p = p * t + 4.3836709877126095665e-3;
    p = p * t + 1.3858518113496718808e-4;
    p = p * t + 1.1738352509991666680e-6;
    q =     t + 2.2859981272422905412e+0;
    q = q * t + 4.3859045256449554654e+0;
    q = q * t + 4.6632960348736635331e+0;
    q = q * t + 3.9846608184671757296e+0;
    q = q * t + 1.6068377709719017609e+0;
    q = q * t + 3.5609087305900265560e-1;
    q = q * t + 5.3963550303200816744e-2;
    q = q * t + 4.3873424022706935023e-3;
    q = q * t + 1.3858762165532246059e-4;
    q = q * t + 1.1738313872397777529e-6;
    t = p / (q * t);
  }
  else {
    



    double p, q;
    t = log(a);
    t = 1.0 / sqrt(-t);
    p =         6.9952990607058154858e-1;
    p = p * t + 1.9507620287580568829e+0;
    p = p * t + 8.2810030904462690216e-1;
    p = p * t + 1.1279046353630280005e-1;
    p = p * t + 6.0537914739162189689e-3;
    p = p * t + 1.3714329569665128933e-4;
    p = p * t + 1.2964481560643197452e-6;
    p = p * t + 4.6156006321345332510e-9;
    p = p * t + 4.5344689563209398450e-12;
    q =     t + 1.5771922386662040546e+0;
    q = q * t + 2.1238242087454993542e+0;
    q = q * t + 8.4001814918178042919e-1;
    q = q * t + 1.1311889334355782065e-1;
    q = q * t + 6.0574830550097140404e-3;
    q = q * t + 1.3715891988350205065e-4;
    q = q * t + 1.2964671850944981713e-6;
    q = q * t + 4.6156017600933592558e-9;
    q = q * t + 4.5344687377088206783e-12;
    t = p / (q * t);
  }
  return t;
}

static inline double normcdfinv(double a)
{
  return -1.4142135623730951 * erfcinv(a + a);
}

static inline double normcdf(double a)
{
  double ah, al, t1, t2, u1, u2, v1, v2, z;
  if (fabs (a) > 38.5) a = copysign (38.5, a);
  ah = a * 134217729.0;
  u1 = (a - ah) + ah;
  u2 = a - u1;
  v1 = -7.0710678398609161e-01;
  v2 =  2.7995440410322203e-09;
  t1 = a * -7.0710678118654757e-1;
  t2 = (((u1 * v1 - t1) + u1 * v2) + u2 * v1) + u2 * v2;
  t2 = (a * -(-4.8336466567264567e-17)) + t2;
  ah = t1 + t2;
  z = erfc (ah);
  if (a < -1.0) {
    al = (t1 - ah) + t2;
    t1 = -2.0 * ah * z;
    z = t1 * al + z;
  }
  return 0.5 * z;
}

static inline double erfcx(double a)
{
  double x, t1, t2, t3;

  if (__isnan(a)) {
    return a + a;
  }
  x = fabs(a); 
  if (x < 32.0) {
    








  
     
     
    t1 = x - 4.0; 
    t2 = x + 4.0; 
    t2 = t1 / t2;
       
    t1 =         - 3.5602694826817400E-010; 
    t1 = t1 * t2 - 9.7239122591447274E-009; 
    t1 = t1 * t2 - 8.9350224851649119E-009; 
    t1 = t1 * t2 + 1.0404430921625484E-007; 
    t1 = t1 * t2 + 5.8806698585341259E-008; 
    t1 = t1 * t2 - 8.2147414929116908E-007; 
    t1 = t1 * t2 + 3.0956409853306241E-007; 
    t1 = t1 * t2 + 5.7087871844325649E-006; 
    t1 = t1 * t2 - 1.1231787437600085E-005; 
    t1 = t1 * t2 - 2.4399558857200190E-005; 
    t1 = t1 * t2 + 1.5062557169571788E-004; 
    t1 = t1 * t2 - 1.9925637684786154E-004; 
    t1 = t1 * t2 - 7.5777429182785833E-004; 
    t1 = t1 * t2 + 5.0319698792599572E-003; 
    t1 = t1 * t2 - 1.6197733895953217E-002; 
    t1 = t1 * t2 + 3.7167515553018733E-002; 
    t1 = t1 * t2 - 6.6330365827532434E-002; 
    t1 = t1 * t2 + 9.3732834997115544E-002; 
    t1 = t1 * t2 - 1.0103906603555676E-001; 
    t1 = t1 * t2 + 6.8097054254735140E-002; 
    t1 = t1 * t2 + 1.5379652102605428E-002; 
    t1 = t1 * t2 - 1.3962111684056291E-001; 
    t1 = t1 * t2 + 1.2329951186255526E+000; 
      
    t2 = 2.0 * x + 1.0; 
    t1 = t1 / t2;
  } else {
    
    t2 = 1.0 / x;
    t3 = t2 * t2;
    t1 =         -29.53125;
    t1 = t1 * t3 + 6.5625;
    t1 = t1 * t3 - 1.875;
    t1 = t1 * t3 + 0.75;
    t1 = t1 * t3 - 0.5;
    t1 = t1 * t3 + 1.0;
    t2 = t2 * 5.6418958354775628e-001;
    t1 = t1 * t2;
  }
  if (a < 0.0) {
    
    t2 = ((int)(x * 16.0)) * 0.0625;
    t3 = (x - t2) * (x + t2);
    t3 = exp(t2 * t2) * exp(t3);
    t3 = t3 + t3;
    t1 = t3 - t1;
  }
  return t1;
}

static inline float rsqrtf(float a)
{
  return (float)rsqrt((double)a);
}

static inline float rcbrtf(float a)
{
  return (float)rcbrt((double)a);
}

static inline float sinpif(float a)
{
  return (float)sinpi((double)a);
}

static inline float cospif(float a)
{
  return (float)cospi((double)a);
}

static inline void sincospif(float a, float *sptr, float *cptr)
{
  double s, c;

  sincospi((double)a, &s, &c);
  *sptr = (float)s;
  *cptr = (float)c;
}

static inline float erfinvf(float a)
{
  return (float)erfinv((double)a);
}

static inline float erfcinvf(float a)
{
  return (float)erfcinv((double)a);
}

static inline float normcdfinvf(float a)
{
  return (float)normcdfinv((double)a);
}

static inline float normcdff(float a)
{
  return (float)normcdf((double)a);
}

static inline float erfcxf(float a)
{
  return (float)erfcx((double)a);
}



#pragma warning(default: 4211)

#line 3809 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"

#line 3811 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"

#line 3813 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"

#line 3815 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.hpp"


#line 10211 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"

#line 10213 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"

#line 1 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions_dbl_ptx3.h"






















































#line 56 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions_dbl_ptx3.h"

#line 58 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions_dbl_ptx3.h"

#line 60 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions_dbl_ptx3.h"













































































































































































































#line 266 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions_dbl_ptx3.h"




#line 1 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions_dbl_ptx3.hpp"






















































#line 56 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions_dbl_ptx3.hpp"

#line 58 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions_dbl_ptx3.hpp"

#line 60 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions_dbl_ptx3.hpp"











































































































































































































































































































































































































































































































#line 552 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions_dbl_ptx3.hpp"



#line 556 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions_dbl_ptx3.hpp"

#line 271 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions_dbl_ptx3.h"
#line 272 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions_dbl_ptx3.h"

#line 274 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions_dbl_ptx3.h"
#line 10215 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"

#line 10217 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\math_functions.h"

#line 225 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\common_functions.h"

#line 227 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\common_functions.h"

#line 247 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\crt/host_runtime.h"





#line 253 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\crt/host_runtime.h"

#pragma pack()



#pragma warning(disable: 4099)



#pragma warning(disable: 4408)

#line 265 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\crt/host_runtime.h"

#line 267 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\crt/host_runtime.h"

#line 269 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\crt/host_runtime.h"

#line 271 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\crt/host_runtime.h"
#line 3 "c:\\users\\msb\\documents\\visual studio 2015\\projects\\neural-net\\cuda\\debug\\kernel.cudafe1.stub.c"
#line 1 "c:\\users\\msb\\documents\\visual studio 2015\\projects\\neural-net\\cuda\\debug\\kernel.fatbin.c"
#line 1 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\fatBinaryCtl.h"
































#line 1 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\fatbinary.h"
















































typedef struct fatBinaryHeader *computeFatBinaryFormat_t;




#line 55 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\fatbinary.h"



#line 59 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\fatbinary.h"



















struct __declspec(align(8)) fatBinaryHeader
{
  unsigned int           magic;
  unsigned short         version;
  unsigned short         headerSize;
  unsigned long long int fatSize;
};


typedef enum {
  FATBIN_KIND_PTX      = 0x0001,
  FATBIN_KIND_ELF      = 0x0002,
  FATBIN_KIND_OLDCUBIN = 0x0004,
} fatBinaryCodeKind;

#line 94 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.5\\include\\fatbinary.h"
#line 34 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\fatBinaryCtl.h"






typedef enum {
  FBCTL_ERROR_NONE = 0,
  FBCTL_ERROR_NULL,           
  FBCTL_ERROR_UNRECOGNIZED,   
  FBCTL_ERROR_NO_CANDIDATE,   
  FBCTL_ERROR_COMPILE_FAILED, 
  FBCTL_ERROR_INTERNAL        
} fatBinaryCtlError_t;
extern char* fatBinaryCtl_Errmsg (fatBinaryCtlError_t e);

extern fatBinaryCtlError_t fatBinaryCtl_Create (void* *data);

extern void fatBinaryCtl_Delete (void* data);


extern fatBinaryCtlError_t fatBinaryCtl (void* data, int request, ...);














typedef enum {
  fatBinary_PreferBestCode,  
  fatBinary_AvoidPTX,        
  fatBinary_ForcePTX,        
  fatBinary_JITIfNotMatch    
} fatBinary_CompilationPolicy;





extern fatBinaryCtlError_t fatBinaryCtl_PickCandidate (void* data);







extern fatBinaryCtlError_t fatBinaryCtl_Compile (void* data, 
                                                 void* *elf, size_t *esize);








typedef struct {
  int magic;
  int version;
  const unsigned long long* data;
  void *filename_or_fatbins;  

} __fatBinC_Wrapper_t;

















#line 124 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\fatBinaryCtl.h"



#line 128 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.5\\include\\fatBinaryCtl.h"
#line 2 "c:\\users\\msb\\documents\\visual studio 2015\\projects\\neural-net\\cuda\\debug\\kernel.fatbin.c"



extern "C" {
#line 7 "c:\\users\\msb\\documents\\visual studio 2015\\projects\\neural-net\\cuda\\debug\\kernel.fatbin.c"

#pragma data_seg(".nv_fatbin")
static const __declspec(allocate(".nv_fatbin")) unsigned long long fatbinData[]= {
0x00100001ba55ed50,0x0000000000006fa8,0x0000009001010002,0x0000000000004f60,
0x0000000000004f60,0x0000001400010007,0x0000004c00000040,0x0000000000002046,
0x0000000000000000,0x000000000000ef7c,0x73726573552f3a43,0x636f442f42534d2f,
0x562f73746e656d75,0x7453206c61757369,0x313032206f696475,0x63656a6f72502f35,
0x617275654e2f7374,0x55432f74654e2d6c,0x656e72656b2f4144,0x0000000075632e6c,
0x010101464c457fa2,0x0002530001000733,0x1c15f5000c4b00be,0x140000e7ec0000ef,
0x0300200034001401,0x000001002e002800,0x617472747368732e,0x6d792700082e0062,
0x6e68735f1bf50008,0x692e766e2e007864,0x7865742e006f666e,0x6f505f385a5f2e74,
0x456449746e695f77,0x0024695f30535f54,0x6c65723f04001e0f,0x6265645f700b003d,
0x725fb200435f6775,0x00737361735f6765,0x6d6172665200152e,0x5101001109004465,
0x72506b6361428600,0x670012090082706f,0x0014646572616873,0x6397003909008a05,
0x30746e6174736e6f,0x5f03f700b0020017,0x326d735f61647563,0x36665f7669645f30,
0x0601001d0f00ec34,0x1a0101003b0f00eb,0x6f4664656546a600,0x140b004c64726177,
0x0500160800b80300,0x00bc06003f0b0059,0x05fe00be0e001908,0x6e725f7063726c62,
0x746170776f6c735f,0x2b0f00cc33765f68,0x6946ae0137090800,0x726579614c747372,
0x01840b001c0b017a,0x2108017b0e001e0b,0x6f70335902350300,0x0700120402666477,
0x000f01002504025a,0x67617265764102f6,0x72726f43646e4165,0x001b0f003d746365,
0x00001d0f00a60303,0x060300540f006305,0x02450f00200e00c1,0x0f024e0e015a0506,
0x6c43032303050026,0x009900031f656e69,0x080011060100180f,0x000c020010020336,
0x0076657262626186,0x6119002a0103762e,0x636f290037030011,0x55001a636f240046,
0x89006f65676e6172,0x73656d616e627570,0x00a8050015060049,0x7478745f7874707f,
0x0f01043c0f20047f,0x0f0e02f10f270494,0xbf0f04600b4304b6,0x047b0f02e5051c04,
0x705f6f1804dc0f00,0x0f2504e36d617261,0x0d0c05000f0902a9,0xaa0ea3050b0f04a2,
0x04a40e96051e0f04,0x00010c96ff05300f,0x25000353000c4717,0x00037099000c8000,
0x0020c10029002200,0x05480010d9000439,0x0026330010010000,0x004004b82000103e,
0x2139002065002739,0xba00273400108300,0x2d1000300a100030,0x0028390020070a75,
0x1069002239001050,0x480010cf00293900,0x233900100322002a,0x89002b3900104300,
0x0010f5002c390010,0x3900100415002448,0x00063900105e002d,0x10a600073900108a,
0x390010b400083900,0x000a390010d10009,0x051e000b480010f9,0x000c32000c330010,
0x2500120000039093,0x000d48930010f700,0x0130350026101200,0x002b33002000d020,
0x00200880200010f5,0xe0100110bc002833,0xe077002a10430020,0x2c1f001002802000,
0x25910be5040306ff,0x0000040033316466,0x0513001610190095,0x3133001608170016,
0x53024f0400160600,0x1d00140000367225,0x201d003c00004080,0x0119002c1013006c,
0x702100422018002c,0x00000048550c9031,0x0210012b01001450,0x387f007e68150010,
0x0052780500000300,0x7e011c0147901002,0x0000be0300160900,0x0c005401582a0014,
0x00a05700fc02003e,0x003170006ab00000,0x0702d1a805000007,0x05100136341000e8,
0x60002c0188260028,0x0028050000090034,0xd433702100589014,0x00d4d81501dd0000,
0x0000e855006a3711,0x0028341100fcf000,0x110014f815001000,0x1015001000001435,
0x38026500d0010050,0x3711001440000001,0x2100d00140270014,0x1500f40000143870,
0x0000143911001460,0x2d08001478130010,0x31052d0006d10005,0x00da000148346466,
0x0500280f00de9813,0xa00000014f018601,0xa02f004c00100050,0x2f004c000f005002,
0x32724007005002a8,0x0f010300017d0a00,0x01e6316621080027,0x009ec0000001b85f,
0x0023000027321109,0x02b003080027d01f,0x00ec02982f002300,0xec58000001d85f0f,
0x500f0028e0131000,0xf010022c39110700,0x39110a00500f01b4,0x500f0028f81302a8,
0x950002ba35110700,0x35110a0050101f05,0x18000002085f02cc,0x281f004c00100050,
0x301f004c00100050,0x00018e35110901dc,0x110a0077481f01d8,0x701f002400020437,
0x000b0037730a0077,0x00500f0028500500,0x02582f00c7381107,0x28090038370d0167,
0x3031cf0701670f00,0x0002600500000c00,0x3031470a00516800,0x0800520f00290d00,
0x00f3681f00523111,0x681f00523131210e,0x00034931120e00f4,0x370b0052801f0025,
0x00520f00290b0032,0x52781f02ae331108,0x781f02af33110f00,0x00005235110f0052,
0x370b0052981f0025,0x02610f0029070035,0x0002c05f06100206,0x055301090027c800,
0x00a0d01f00230510,0xee02f02103f0000d,0x03f1000b00a00f07,0xf20308000002f86f,
0x03182f004e001000,0x202c004e001000f2,0x382c003b00069b03,0x020016201f069b03,
0x004260000003485d,0x077303582c001600,0x077303502c001600,0x140a075f03001609,
0x02003e0c01770200,0x166819006600052d,0x1d009200006a0000,0x881d002800002c70,
0xca0500167013002c,0x0013076c015b260e,0x0213080048170892,0xb539110014060890,
0x3031210014301900,0x31110015401a010a,0x4b020015501a0135,0x011d020015601a03,
0x1500780000007065,0x7c0708d014002300,0xe200002a31322108,0x313221087c901608,
0x98000000885700dd,0xbf1000333047087c,0x6611100017011608,0x0001360200830a07,
0x35210083a81508d5,0x03002aa81803cf36,0xc8000000c05b0990,0x3d030a9dc8130990,
0x0a8e000052301100,0x0900c0020015e816,0x031b3235723208d2,0x011435722208d308,
0x21097c0817001100,0x1800130002f53030,0x170700303700d430,0x0000d40200430300,
0x8802001518160913,0x0015201800110003,0x2818001100053300,0x6d281c00ae02006d,
0x05001704016f0200,0x00130000c702002e,0x0500323f002e3818,0x7800018602010017,
0x170901b40cf82d09,0x1a0a9701020b0300,0xaf0309b70902870d,0x0028081500140002,
0x1200290b0a1c3111,0x7017001100036631,0xf7701300c102025d,0x1605130016011509,
0x015b02002c801600,0x002b06c025002700,0x0300158013036402,0x0a240004a602002a,
0x000492020425a816,0x324303a4b0160015,0x80e8170a27080033,0x170a150900333300,
0x1301b2341100ace8,0x170016011509b5a8,0x3515002c0400160d,0x3533002cf0170a08,
0x002cf01709f70b00,0xc81709e60c003633,0x09fc0d00363b002c,0x1b00b03711001600,
0x1b00b037110058e8,0x9f000838020058e8,0x2602002c02082609,0x11002c0400160408,
0x33002cf81b00b039,0x002c0709910b0039,0x16097f00047a3312,0x0900303347002c38,
0x003133002c040016,0x33002c201709830a,0x2c201709710b0031,0x00580b0312321200,
0x0058201b01083211,0x002c281b00583311,0x002c301b00583311,0x16001200002c3411,
0x0b00343347020f40,0x039602002c040016,0x330058601709e400,0x58601709d20d0035,
0x2c501b0108361100,0x002c080986361500,0x0209c4601701b802,0x2c04001609170016,
0x002c08094d381500,0x002c701b00843811,0x901708ac08003933,0x001609003937002c,
0x801a09f702034004,0x881b09e43412002c,0x021203183112002c,0x0917001601150cef,
0x01b802002c040016,0x1b01b802002c981b,0x1200037002002ca0,0x037002002cc01700,
0x7002002c04001604,0x037002002cb01b03,0x000beb02002cb81b,0xd902002cd817093b,
0x02002c040016040b,0x7002002cc81b0370,0x01b802002cd01b03,0x02002cf017001200,
0x002c0400160401b8,0x02002ce01b01b802,0xb802002ce81b01b8,0x1601150972f01301,
0x04ce040016091700,0x12002cf81a01b802,0x2c08098b0001b835,0x1509780401b80200,
0x12098e091e001601,0x02002c101b01b835,0xb802002c181b01b8,0xba33352909a40b01,
0x2901b802002c0409,0x01b8351203700328,0xb835120370033029,0x01b802002c381b01,
0x00036f02002c381a,0x6e02060048160011,0x2a06502b00150003,0x002a0909a5481300,
0x1209fa781509e200,0x9015099f0004f731,0x0000153032210015,0x304009cea0170011,
0x00130002e7120034,0x1300343007550417,0x06820900170302e8,0x068204682b067e00,
0x02002a7015067e00,0xc8000003c0551009,0x0010000ff602006c,0x00100011ab03d82a,
0x001000119703e02a,0x8ee818119703e82a,0x0004106a11970300,0x0010001197041800,
0x04405e00e404302d,0x17481300e4500000,0x0004585e002e0b00,0x02001704002ea800,
0x805500d43311002e,0x3411001488000004,0x04982a0010000014,0x04a02a001000121b,
0x480c0050a017121b,0x72615f3233738117,0x1f160d0008633067,0x550176030b0029e0,
0x0201f704d0000004,0xf8000004c8550b27,0x2600002a61120015,0x001401002ad81600,
0x002905f825001000,0xe8260078000a2502,0x0445134c01094504,0xb532120029080000,
0x3370200067f01813,0xd02a00100210013d,0x102708df00006605,0x05450a8b010be005,
0x0eaf020015800000,0x025705b026002500,0x000005186600cc00,0x0000140002570520,
0x1b02003c28150010,0x0014301500100007,0x382600100008bb02,0x055607430101bf05,
0x14000d3705400000,0xd205602600100000,0x000548660755000c,0x10e7010a23055000,
0x0a4b055800000556,0x12003c5819001400,0x682b001100037831,0x90270011000cbd05,
0x701a0462000c3a05,0x1c781907fd020015,0x0000055a0fa30401,0x001488180c4f05a8,
0x004f000c78317222,0x06da37120015b816,0x1a0092381100150a,0xa818130b02003fa0,
0x3eb0190ca3030185,0x0011000228321200,0x15e81a047206082b,0x6705f02701d80200,
0x1b00100103f30302,0x0000061055005306,0x023f307621001518,0x030c06202f001100,
0x0000287473643107,0x1500007b28180024,0x0015801600110000,0x0006605600903611,
0x0015371100156800,0x020b807817001100,0xb000000670561645,0x7813002c351205ab,
0x03f1010041030016,0x0015881600670510,0x150011051003f201,0x0000d23312001590,
0xcc010015a8160011,0xa000000698056701,0x80a01b0afa020080,0x0080a8180afa0200,
0x682d00130004c606,0x702c00170004c60c,0xe02c0c6c0010540c,0xe826001600108008,
0xc810021402008608,0x0d02008607160183,0x06b2040016d01315,0x000006e057020202,
0x160b00303706ddf8,0x1007e402002c0400,0x361200580601b3e8,0x58040016f01307e4,
0x07003e01033f0200,0x001600133402002c,0x2a132102002c0817,0x2a02870200580720,
0x002c341100580720,0x37002c4017001200,0x002c040016070034,0x03002c301b07e402,
0x583611002c0b07e4,0x002c701700120000,0x2c04001604027b02,0x00074857099c0200,
0x13099c02002c5800,0xb502002c04001650,0x049b020058581b03,0x1b099c020058581b,
0x681a099c02002c60,0x12000d0c3712002c,0x0c37120210781600,0x02002c040016040d,
0x9800000778560595,0x80130d0c37120058,0xc332120058040016,0x01083211002c0b0e,
0x0001b802002c901b,0xb802002cb0170012,0x02002c0400160401,0x0c02002ca01b05f1,
0x053c02002ca81b0d,0x03002cc817001200,0x002c0400160308c6,0x02002cb81b060d02,
0x1e02002cc01b0555,0x002ce01700120004,0x2c04001604041e02,0x002cd01b01b80200,
0x02002cd81b01b802,0x2cf8170012000370,0x0300160403700200,0x2c0a05723813002c,
0x2cf01b0370381200,0x1600120007750200,0x0407c8381201e410,0x037002002c040016,
0x037002002c08002a,0x01b802002c08082a,0x03002c2817001200,0x002c0400160307cf,
0x02002c181b01b802,0xb802002c201b01b8,0x002c401700120001,0x2c0400160401b802,
0x002c301b01b80200,0x02002c381b01b802,0x2c581700120001b8,0x0400160401b80200,
0x2c481b01b802002c,0x02002c0b080b0300,0x2c701700120001b8,0x0300160401b80200,
0x081908243913002c,0x682901b839120370,0x1b01b83912037008,0x701a01b802002c70,
0x120004d03112002c,0x0713168408902800,0x00168408982c0016,0x6c16b00b802c1f04,
0x00580b8800000888,0x000058a81d005400,0x0206cb08b0250054,0xc8000008c056002b,
0x00110001b6020015,0x01e330120082d817,0xb40938000008d067,0x0017d813002e0206,
0xa02c06b00006b40a,0xa81506b00006b409,0x6af8101ae202002c,0x0a88361200140500,
0x0942091000000955,0x000009460c533012,0x1100095802001518,0x0905020015201600,
0x3170220093092027,0x5000000948560cce,0x00110008dc020015,0x09785e00eb09682d,
0x17801300eb880000,0x0009905e002e0b00,0x02001704002ee000,0x09451d843712002e,
0x181f020014c00000,0x020099d016001000,0x15d8160011000d54,0x0052d8170d550200,
0x012bf0100a0c950f,0xf8670f0c95000a2f,0x010c950a08000009,0x0a3000000a5b1971,
0x0a102a0026000c95,0x0b30270010000c2f,0x000a561679010c95,0x0014000c950a2000,
0x0c950a4027001000,0x9503006708165f01,0x660b082a0010000c,0x0a4800000a386700,
0x004e000052000c95,0x1992010c950ab826,0x0c950ae800000a56,0x00000a506600cc00,
0x5603fc010c950a58,0x000c950a6000000a,0x0a68260010000014,0x0010000014000c95,
0x03e0010c950a7026,0x0c950a7800000a56,0x9800000a56022e01,0x0a56022b010c950a,
0x0e010c950a880000,0x950a9000000a5616,0x12003c090225010c,0xa0270011000b5d31,
0x0a57218f010c950a,0x9b000c950ac80000,0x05ce020015a81a04,0x001b9803011cb019,
0x0818e40ae02b0011,0x0008f83172220014,0x010c950af027004f,0x92381100150a0713,
0xf93912003fd81a00,0x190c950301850803,0x0002283212003ee8,0x290c570b402b0011,
0x2701d80200150b20,0x000c950302670b28,0x6b00530b382b0010,0x0c950b5000000b48,
0x0c950b582f001100,0x003d60150024000f,0x15001100039c3312,0x5602b934120015b8,
0x020015a000000b98,0x8bb016001100183f,0x0ba8560507391205,0xd1391205b7e80000,
0x0041030016b01300,0x00000b4610493312,0x461d9e34120015c0,0x32020015c800000b,
0x0015e01600110005,0x00000bd05718eb02,0xd81b02d7020080d8,0x80e018060b020080,
0x2d00130004c80600,0x0400170404c80bf8,0x001200025002005a,0x1dd539130cc20816,
0x1219d71000000b45,0x28160ed7001c7334,0x4701ad3639220cd6,0x361100415800000c,
0x6000000c50590041,0x000c4903b201002c,0x470e1d01002ca000,0x3712002ca800000c,
0x2c8000000c471d18,0x000c4719de371200,0x229d3812002c8800,0x001601151a860c12,
0x2c04001603228b01,0x2600120002d90200,0x05003937002c0d18,0x0e600200f1030016,
0x6034121aa10d0028,0x7907002a0d08220e,0x0a1e150000df392b,0xb0201b0632021d9c,
0x3e1d48091b82011d,0x08ba021d9b020039,0x091e4f011db0501c,0x681c1b8f31112656,
0xd2021daf051e1dc4,0x3c0088261db00002,0x121db00a0c3b0302,0xaf031db00b0c3b31,
0x1b5535121daf0b1c,0x2f1dae061d1dae0d,0xa93312281dae3833,0x8033332e1dae0a00,
0x121dae0a091b0426,0x01041dae0b032333,0x091701041dad0a17,0xac0a02ca33121dac,
0x1dac0a0ae533121d,0x3512011dac37332f,0x6935121dab0b00c0,0x00d735121daa0b01,
0x0c061e35121d920b,0x1d3f00017f020016,0x00160901ab01582c,0x08382a1dba317225,
0x060bbc015829027d,0x001d3c03782b003d,0x0613213680190015,0x010a2e01b8281da8,
0x0ade0600160311e8,0x286b90191d930a13,0x02002c0400160b17,0x31121d3e801a1006,
0x31121d3e881a1006,0x160227e590170c96,0x00160027d30b1b00,0x020058b81b01b102,
0x26020058b81b07f4,0x002cd8171d540007,0x2c04001604080c02,0x002cc81b10060200,
0x03002cd01a100602,0x21021d3ed81b072b,0x02a1021d6ad81b20,0x1dc2311f1dc2e01b,
0x021dc20c0e4e0202,0x19a2021dc20c0e4e,0xc20b19a2021dc20c,0x10281dc23432251d,
0x19001609171eca03,0x0a271d10131eca00,0x1eb4022733081eca,0x1c02002c0b083301,
0x01b802002c281b06,0x171eca06274e3013,0x041eb40015001607,0x0b1b1eca48191dc2,
0xac06171eb4022790,0x1dc2071f1eca061d,0x021dc20b05940300,0x0abe021dc20c0e4e,
0xc20c0e4e021dc20c,0x061dc20b16b5031d,0x061f1eca781926aa,0x901d268406001dc2,
0x1eca031dc20b1eca,0xc20b051f031dc20b,0x121dc20b0e50031d,0x33121dc20b037033,
0x0521031dc20b0370,0x0b01b833121dc20b,0xc20b01b833121dc2,0x121dc20b0635031d,
0x33121dc20b01b833,0x01b8021dc20c01b8,0xc20c01b8021dc20c,0x021dc20c01b8021d,
0x01b8021dc20c01b8,0xc20c01b8021dc20c,0x031dc20c01b8021d,0xb834121dc20a17b5,
0xb834120370f81a01,0xca0310281dc20001,0x002c081dac06131e,0x1c6603102b275006,
0x1c660917f9031022,0x1b002a061b1dd601,0x1dbe0700231d6718,0x6d010c5e051d2b00,
0x1e0c5e002777082a,0xf6001dbc0326f609,0x1670131dbcd01d26,0x1c1e290023bc0a00,
0x100b00950023bc04,0x1003982a1d7c001d,0x1d10a81b0010001d,0x001d10b01b001000,
0xb8181d10b81b0010,0x001d3836702f008e,0x0000e2051d38371e,0x1300e204202c1d3a,
0x285d002c0a001618,0x1604002c78000004,0x2a1d4a001d0c0800,0x1b0010001d0c0458,
0x701b0010001d0c68,0x0c0f005070171d0c,0x0cb01f1d5d000a1d,0x77001d729018111d,
0x2b1d870000cd0010,0x041d8808107704c8,0x05c82b0010001d0c,0x08339904b0221077,
0x77021d49b81a1077,0x1d0c030067c01810,0x006605a02a001000,0x281077051dd9d017,
0x001077021c6c04d8,0x08131d0c80171d86,0x1c025304f0261d86,0x01071572121d8508,
0x0813107705160010,0x3d011d0c08171d85,0x192072021d990907,0x84091889021d4810,
0x1d840a034972121d,0xde031d840a085302,0x130c05001d850929,0x341f1d36071d8608,
0x0a07f73112001d87,0x0011001077031d88,0x1458180bad05782a,0x1d89091310770000,
0x681a1077091d2500,0x3f701a1b69020015,0x031d890910770200,0x2403003e80191d0c,
0x0015d81800110010,0x7705d82b1d210813,0x0c03026705c02710,0x0053d01c0010001d,
0x7705e8000005e06b,0x0f1d4e0000110010,0x72131d72090d1077,0x22226205f82709b0,
0x0006305604bb3272,0x220f710200153800,0x0124420622a10638,0x2442061d4c03131e,
0x7c001d620c132001,0x1d62581800670002,0x6000000657294d01,0x7708110c011d3606,
0x281d8c001d36041d,0x081d8c0424960670,0x802c1d8c38150080,0x0a1d78801304c406,
0x24c20600160404c4,0xc20698281d8f0413,0x0f1d900733770124,0x770f1dcd030a3377,
0x00500f1db4070e33,0x0050071f1ddc0109,0x0f1aac00004c000f,0x2f1dd103130833c7,
0x0023000e33c706c8,0x27000e004e06d02f,0x0833ee0f1c970000,0xee06e02f1e1a0613,
0x07a82f0023000e33,0x681f1e27000f0113,0x0f0028f013100113,0x882f0238000d33ee,
0x002808130f33ee07,0x1f1f07160e339e0f,0x0f1e81070a339e0f,0x381f004c00090050,
0xee0f1ea508100050,0x33ee0f1e48080833,0xee07802f00240009,0xee0f002860130f33,
0xee0f0167681e0d33,0x33ee0f0028040233,0x33ee071f1e8d010e,0x0e33ee0f00290410,
0x0333ee0f00f3781e,0x000e33ee0f002904,0x1033ee07902f0025,0x1e0e33ee0f002904,
0x040333ee0f005288,0x90220e32fc0f0029,0x040e32fc0f037807,0xdb000c33ee0f0029,
0x080e33ee07d82f1e,0x7b080a33ee0f1eec,0x1e8e000a33ee0f1e,0xa1081000f208182f,
0x004e000a00f20f1e,0x04132ab8061e4a00,0x132ab80850281e72,0xdc050016001e7205,
0x23dc041e71001c23,0x00404d0f002a4013,0x15ae040a5e001226,0x334a040a3500a026,
0x15ae0e0a20005826,0x001615ae010b7b02,0x152e08079f0109f8,0x005050191d097212,
0x0000005a136d3712,0x3115d4093b420060,0x95681b0029316466,0x2204001503002715,
0xe8391f15e9061d0a,0xe6060215e70f0115,0x030b02002a901615,0x0402f7023c3d901a,
0xf902130a76050015,0x00170b6800a02715,0xdd0b184196053c7c,0x3dc50e013dc60f00,
0x0f011b001c01a703,0x48183dad05013dae,0x0850183dac040130,0x08a81800f3041301,
0x0400c9053d840401,0x003f0900c9040015,0x13002a0416aea818,0x2a1741f40e0015b0,
0x601700a802130229,0x0216182710143dd7,0x9017027911130215,0x0028092b6d01183b,
0x0014501926763911,0x019760052c1f6e02,0x3602170935c1031f,0x00023e082b7b010c,
0x0c02180f031e0c21,0x981a01014b981f01,0xe01c180d33150136,0xfa0417d0a0180253,
0xfa00c02b0160000f,0x3526060175b01a0f,0x7a050023170d5017,0x010cf30500150017,
0x3475043e6808042e,0x348a361f002a401a,0x361f01348a371f01,0x013488361f013489,
0x9b02482b34883115,0x7c02017a01802902,0x0d1e00170988181a,0x130cb70016c6001c,
0x0bfa01b02b344500,0x180db0030054b018,0x94090d5c033416c8,0x1651031c0cb70016,
0x16163a03130fd700,0x002904b00212ca00,0x380b13d002163902,0x0233f90b049c0216,
0x2a410433f8090c4a,0x1c0d35013da21017,0x03130d350033f603,0x170d090228271633,
0x0001740ef033de03,0x040001ffffffff00,0x00288080810c007c,0x808007288081ff08,
0x8207103000050880,0x8410000583100005,0x8610000585100005,0x0828808080500005,
0x2880808208500033,0x2810002328100023,0x2830002328100023,0x0005881000058707,
0x00058a1000058910,0x00058c1000058b10,0x00058e1000058d10,0x0005901000468f10,
0x0005921000059110,0x0005941000059310,0x0005961000059510,0x0005981000059710,
0x00059a1000059910,0x00059c1000059b10,0x00059e1000059d10,0x0005a01000559f10,
0x0005a2100005a110,0x0005a4100019a310,0x0005a6100005a510,0x0005a8100019a710,
0x0005aa100005a910,0x0005ac100019ab10,0x0005ae100005ad10,0x0005b0100019af10,
0x0005b2100005b110,0x0005b4100019b310,0x0005b6100005b510,0x0005b8100019b710,
0x0005ba100005b910,0x0005bc100019bb10,0x0164be100005bd10,0x8823000100240036,
0x0425018002131903,0x68ff01a00f000bde,0x000d407501a01817,0x940f0195034e0400,
0x043f28380072ff01,0xe9007bff0194021c,0x0f01940034043e46,0x5c00c82a69ff065c,
0x007dff065c2e1f06,0x2001959c04261e86,0xa30cf4000a3f030e,0x0101000a0efb0101,
0x09c405110bdc0101,0x0100cd03000419f4,0x0201030118020503,0x0201038080f30120,
0x0383838081840118,0x8082f2f001180203,0x80f1846300178084,0x0282a1000e848080,
0x828184f084f00390,0x000802808076003c,0x0103b850005a0101,0x81f0f3910001f084,
0x003c81f38082f1f1,0x01f10003f0808030,0xf2f0808083808183,0x020382f08082f181,
0xf02e0002f0120042,0x0320008e01000280,0x0118020273000504,0x8ff0140008f28080,
0x8482f03500080400,0x02b0028280a9004f,0x11003c00c8020303,0x007cf1862f0087f0,
0x06fb002986f02168,0xf201300204038581,0x800100f802030382,0x220149f080f28080,
0x82f0f36f014901bf,0x460f02014af08080,0xb80f0208f0106901,0xb602020187110100,
0x1700dc0e002e0200,0x1002090356027e1e,0x025801202f011601,0x5a010258069c2503,
0x0251f110013c0600,0xa8f38082f0808062,0x13012f0000a20102,0x031202c320007983,
0x4365f0031201412c,0x2f73726573552f3a,0x75636f442f42534d,0x69562f73746e656d,
0x757453206c617573,0x35313032206f6964,0x7463656a6f72502f,0x6c617275654e2f73,
0x4455432f74654e2d,0x72705c5c3a630041,0x6966206d6172676f,0x69766e5c5c73656c,
0x2075706720616964,0x6e697475706d6f63,0x696b6c6f6f742067,0x5c07f313a15c5c74,
0x695c5c352e37765c,0x005c6564756c636e,0x100046505c5c3a43,0x78282003fa004646,
0x63694d5c5c293638,0x952074666f736f72,0x5c5c302e32318700,0x6b0023f000444356,
0x75632e6c656e7265,0xfa05b69defe30100,0x5f65636976656410,0x6e6f6974636e7566,
0xb702007070682e73,0x6d0994aa05aebf92,0x549800001c05547b,0x1000253312521a00,
0x00247081200025b8,0xe9a1c80300682ec5,0x40044302dc8e0591,0x1d0001b607f40304,
0x02021d3002013202,0x00053802013201d0,0xf0027c50001a8012,0x3001cf0628710103,
0x3de8110032250301,0x025f010005281000,0x6fe0027e03013864,0x03030440003d0002,
0xb6030104830055ca,0x281700110a90027e,0x020b970302700011,0x0274e94300120190,
0x006f2002290053f8,0x6a00d823005f1410,0x43006f0b00a20100,0xa411006adc030304,
0x03d00201035c0059,0x470300381f130048,0x0440002100e82a00,0x00c8690018088203,
0x3116003a01800201,0x915000b5181000f1,0xef14006e00c0020b,0x2815014a201500b5,
0x6601009ed813009e,0x082501110110f000,0x0610011108030b13,0x87012e020000081b,
0x063b063a08030840,0x000503342e0b1349,0x0024040000a0000f,0x0910160b0b3e0803,
0x1201110c3f60002a,0x7700300616301201,0x110700000b330a02,0x2b010b2038800000,
0x0018340900004900,0x1d0b500038340a2b,0x0658a3002b133101,0x3100050c00000659,
0x0803003b0dc0001a,0x101349000f0e0000,0xff10df087d003400,0x666e65676c010404,
0x3420474445203a65,0x162f03930400392e,0x433100010403082f,0x534d5c5500555c3a,
0x00555c1e00555c42,0x00555c1600555c14,0x6466029403e85c11,0x0008006564697669,
0x000005c45000c200,0x00106103290449f2,0x0400a0000f620329,0x0400656c62756f64,
0x0070786502501546,0x00f72622cd000004,0x0500260010080042,0x0984000009045998,
0x0999040030040323,0x001b585f069c0159,0x02ab99c8b19006b5,0x5d110018595f0602,
0x020195e4b17f442e,0x00150f035abc0500,0x7203f527003f0001,0x079c015910670000,
0x04000100001b585f,0x006e02001400006e,0x00480832006eb610,0x5f093100090e2abf,
0x000003f69000324e,0x15168b3b00000867,0x13001d5a11001db0,0x1701cb8e140063fb,
0x9e00000b072e0e05,0xeaa5000000155300,0x69069c8536530224,0x10001f737475706e,
0xeb15fb0310009a7a,0x7468676965770607,0x002178697274614d,0x6169625c00212411,
0x001b2811003c6573,0x3861766974636161,0x00202c1100200b05,0x00007a496d756e40,
0x011a010024080246,0x96080721144e0310,0x1800090000083118,0x00376e0a21000958,
0x0017290098644922,0x186d7573094101c1,0x39da10022c181300,0x0926155900a82201,
0x1913004104007869,0x0b32000d15100041,0x1fd98813154400ff,0x31001b000a3a1d10,
0x0168010239b49006,0x050064696f760d7f,0x130000130f0019d6,0xd812017e05181d01,
0x726f72726565029a,0x420c017e08001f73,0xcb6313017d201b01,0x23017e01001c0a17,
0x1800090116ae3808,0x2215013a0b0009b8,0x002602fbb511013a,0x2a004df10600d200,
0x0d402600be261800,0x261b00c45f17023c,0x002274756f3f00c4,0x261b0200e6241f06,
0x49261e02840d0248,0x1a024a74754f3b02,0x2409026e0e024a26,0x19d1000134341100,
0x1800090031662810,0x281f01340b000920,0x61026e291304026e,0x00137a0a0000014d,
0x0239020472002e24,0x860a011a02028506,0x868b1500592a1302,0x0286b81317500002,
0x3205040a00482f10,0x002d010290b59006,0x002d0bf02f217400,0xb390e2b39007c006,
0x0444b50b000204d6,0x0c21002e0032a807,0x0024f2b7210024d3,0x0eb612000ee20c21,
0x0e1a460e04580200,0x663219004e000012,0x66321f02e8021c04,0x1b070466321f0d04,
0x7665727041021e32,0x321f0247411b0361,0xdb0225321b10046f,0x63746142696e696d,
0x060022657a695368,0x18021a0260230223,0x341a02230b000950,0x1a0100ff0a110223,
0x0b23068400362a00,0x351231400403abb5,0x023e04072d0801ba,0xfeb312001762062b,
0x0f008601b0083201,0x13008b39130104db,0x6e690400701945c3,0x7504a0063b050074,
0x2064656e6769736e,0x0e10001307100013,0x72c01134a8020059,0x5c00c02202350341,
0x5215501300110552,0x8013067f04001105,0xe4b89000058e1b92,0x0fc016000f980195,
0x22000f0300f90400,0x04000f0300550138,0xb415008ec0160053,0x2f0011012827008e,
0x009f030000110128,0x0816a013009fb419,0x220019ea10001900,0x220011051b8500c8,
0x04001105071c0140,0x06930004b013003b,0xb002abc8e6b89000,0x3948130010043435,
0xa400730c00100400,0xe6a1c4e0b3900008,0x22001206007409ac,0x0f00120605550140,
0x0076eab62a000076,0x0d40260076eab623,0xeab8130076040010,0xc8e4b79000069332,
0x0010041b86b802ab,0x040010042fc64813,0x86001b5b91150038,0x0308f900017f3f0a,
0x7d27011e5706952f,0x369a023d29542704,0x000002210303ab2f,0x0004c6000a320403,
0x081fa701252709f8,0x737265762eb00001,0x671c2e34206e6f69,0x73207465677261d1,
0x5fba202c30325f6d,0x726464612e0002f1,0x657a69735f737365,0x7369800035323320,
0x0dcb2e20656c6269,0x60638a2e28202041,0x0013203436622e20,0x6c61767465725faf,
0x28280200eb202930,0x020100230f003100,0x002a2c305f3663db,0x315f09002a32332f,
0x021c009a3b002900,0x001602008d0c010f,0x00001e090500810f,0x671260fa7b100075,
0x323c72250973001f,0x343666b000123b3e,0x3e333c6466250920,0x6271007f00110a68,
0x017c3a306e696765,0x002a05005c646c22,0x2600815b202c314c,0x0064751200283b5d,
0x3b5d31320000270f,0x0065657865370060,0xa4080007706d7430,0x0035706d65744300,
0x00fe003b67657259,0x73003b3056000b01,0x00165b0922009a74,0x00a5202c5d302b50,
0x17000b0101133b19,0x3332336233003331,0x3172390033311200,0x3bc401820300653b,
0x6e752e6c6c616300,0x202c2f0195282069,0x2800202c5202031c,0x0009202c22008600,
0x0001413b29003149,0x4b5b202c32430140,0x0004fb01392b1000,0x6c6143202f2f7d00,
0x646e45207165736c,0x0402130800db3020,0x6572003b327000e1,0x563a3123013d3b74,
0x7d003a30646e6f01,0x044402fa0f2f02fb,0x2064657270db01e1,0x3b3e30313c702509,
0x312c0299391e0299,0x05029a311f029a35,0x0f00af0e02743311,0x0b0033361f0802a7,
0x02b331120002b30f,0x746573003a3205f1,0x3233732e65672e70,0x004f202c31702509,
0xe6746f6e003b3065,0x7025202c320df100,0x2032702540003b31,0x3142420920617262,
0x58617262003b325f,0x003b314100100102,0x3364005d02000800,0x110116766f6d003a,
0x342a01ec01005a38,0x220016331100383a,0x003a329d003e3a35,0x0038732e67656e00,
0x0500590300223613,0x6430202c31980132,0x3b11000130464633,0x3412002b371b0084,
0x3813005031110359,0xed04002534120050,0x20003e202c333300,0x00f2331600f23a39,
0xf3351300f334312b,0x30317100f3351200,0x0000f4646e61003a,0x00c2202c373100bd,
0x686e1401683b3122,0x6837722d00880001,0x6834110168351001,0x75371b0076351601,
0x7536130075361300,0x6c756d003a316d00,0x015e0200070300e5,0x3a379700ed323123,
0x5f752e7268730000,0x1300260000a20201,0x00a9716523021133,0x0000a90b00203613,
0x1700a936702100d9,0x381302120c011f37,0x341300aa381300aa,0x1f005f746c23005f,
0x005f391003027038,0x005f3917005f3811,0x005f3913005f301b,0x2e706372003a399e,
0x0502a30c01046e72,0x1b00093a302302a4,0x010b343122028e31,0x610a013a01029004,
0x016109015a331301,0x006a34140048361b,0x312710050b3a342f,0x1c050d3716050c34,
0x72746e6566050d31,0x0004e806089c2079,0x04de0e00180601d2,0x0020311f0200200f,
0x331f0c0020321f0c,0x0c0534341f0c0020,0x353c663d02876611,0x2c000547331f0546,
0x0547321b05473635,0x3b0f010c0e051207,0x1f010029371f0005,0x0029381f00002931,
0x391f000029321f01,0x01085d331f010029,0xad341e01002a301f,0xa83812033e321305,
0x6805ac00003f0404,0x05683b782e646974,0x312104e10305c201,0x11001c6c1503ed39,
0x3b33202c84001d32,0x3123056364646100,0xa80100220003e533,0x0007e80002ea0500,
0x1305483b5d290021,0x2a00673211035f35,0x0541341500993032,0x6433120604313229,
0x0492321203610200,0x0104160a062f3211,0x2d3012002d0300c4,0x2a0e06913a332f00,
0x06a1321003ee5f32,0x3222014103006201,0x00fa6f6c24052934,0x0700690201113314,
0x2002011433110114,0x1101463b38333800,0x470a00210005bd33,0x230005d535332301,
0x4731352101470900,0x1400495d35333a01,0x371300490b00e836,0x00490a0023000516,
0x3b5d373349019002,0x6800048b35120492,0x0b004f0200260100,0x04b00200070401ae,
0x1400760904e03210,0x321a060c02008e38,0x1300175f322304d1,0x0407a8341301b737,
0x0026020065040066,0x07a433130779381b,0x36373435313700f4,0x3b45463238423235,
0x1200340910006200,0x056f3a3922003b39,0x5c0906d20605cf0e,0x33344a005c351000,
0x0800dc0008003833,0x3529071736190044,0x220bae25100bad3b,0x5200320002ae203b,
0x1200172c3572257b,0x7d003b364d00327d,0x750c0099371b0099,0x2b00270501550000,
0x00ba391000ba3531,0x0e22000d00ba431f,0x110045391a004c07,0x45464206f908ff32,
0x4645463234453236,0x66003b4645393341,0x0502cb000045616d,0x0b00b8313222004c,
0x4200ff01a601004b,0x3345394342413743,0x004b333038393342,0x027c02004b341900,
0x019601004c32322b,0x41383239453301fb,0x3331324143463346,0x0024361200244145,
0x36353145444135df,0x0070444232454339,0x07002e00013e0200,0x383222014c0b007e,
0x4544313743ee004c,0x3133313034323645,0x5306085b00004c35,0x004c381a004c0300,
0x4146ed004c303322,0x3938433739393130,0x3312004c31374245,0x2b004c3932280145,
0x02fa3212004c3033,0x31304131304132de,0x0098364631363734,0x4c03005306047001,
0x4c34332201540b00,0x433631433635de00,0x3041374232353831,0x0400530504890101,
0x36332201ec0b004c,0x5e0001313823004c,0x02004c3232333232,0x1b004c3533290129,
0x4634017c02004c36,0x4132303f00013541,0x3329012902000130,0x3412017c0b004c37,
0x000135434636017c,0x01293412004c311e,0x017c341b017c3319,0x035f4518017c3413,
0x29012902004c421e,0x2f017c0b004c3134,0x004c0c030c663434,0x004c333429012902,
0x1c0027030028341d,0x1a0d04940f002735,0x0f04943510049531,0xe2010012000c0034,
0x0816080034361706,0x32202c354a066f01,0x001e030470010703,0x970100530504fd00,
0x725f008e202c243a,0x241600853b7d3831,0x081b7d16047a7d39,0x3964078566252032,
0x010a16736261003b,0x32081e3b312504b3,0x001b010da0323366,0x32363830346630aa,
0x014d000c3d423233,0x32110f0d5933702f,0x3135130831090c0e,0x10f1010ca8351608,
0x64303b05e7367024,0x1b0f0d190f000130,0x3a0dc232130dc232,0x35352f0726365f32,
0x3813003c09030061,0x1607e53a372a003c,0x010f0c371e00a335,0x2f1501a63a1f003a,
0x1e33120401a63032,0x1c02bd0101a60900,0x341306ad0101a633,0xe3303834374f01a6,
0x32130de3321c100d,0x64340de332100de3,0xb3313224029b7669,0x32322f0f03320f02,
0x033233322f260332,0x0b00850103b00103,0x0100373532220333,0x34440333341a0006,
0x327295008f202c37,0x39627573003b7d35,0x00570000d1361300,0x200106aa010a2509,
0x00039f01006c0c00,0x3632373031b8001f,0x0b883b3834323339,0x120084301b069800,
0x2b003b3911008438,0x030243030a467d38,0x3324098f381108d4,0xb1000009050ba730,
0x05853412027b080b,0x9b0b03052235352f,0x39342a083735120f,0x01020c9b301f0b0c,
0x331200af72110710,0x0b0400004701152e,0x0c2135120f393112,0x260f410400953310,
0x0f41321f0f413233,0x0e0f490a17ce0e03,0x00280f0f510e0020,0x321f140028311f0a,
0x0016db311f0016da,0x0efa331f0efa341c,0x0f00bd0e0c6b0003,0x090031321f080f02,
0x0031331f010f0a0f,0x0f33130ebf321e09,0xbe341f0e26331914,0x0c4302030201020e,
0x0322040ebd34332a,0x2403031e0202210a,0x253a17e1646c2914,0x0043381f0d713772,
0x090f0301025e0202,0x5d39220d6c020043,0x0b850208c50503a9,0x301f07480816c004,
0x0e6431312902005f,0x0202c3311302c307,0x1602c23533280d91,0x0b02c2331f02c236,
0x0b02ae0f0302b80f,0x0f11fb0e0b02a40f,0x0a001e331f00001e,0x15351f0a001e341f,
0x391d1215371d0212,0x00175c37352f1215,0x031c341f1216301d,0x0f01210c11ed0003,
0xe90f012a0c0411eb,0x11e70f01330c0411,0x01120f0f013d0c05,0x0028341f0028311e,
0x76351e0028321e01,0x9c371a0376341303,0x8803081235331f11,0x950f0e603a382e02,
0xf130130eca0a0008,0x1239332f1025020a,0x03f03a3034390512,0x6231342112123617,
0x3527051212341f06,0x121232342f12dc36,0x1234131212341b0f,0x33342c1212341412,
0x19006a3035271212,0x2103115e0103c932,0x0211970007a40a00,0x11970106be0a0020,
0x3021135a0b041804,0x4b5d33353a045f30,0x004b0b0080341400,0x004a34352b125d06,
0x121535352b04ec02,0x3031230ff3303122,0x04121831302a1040,0x13d00200080601b5,
0x363524121b34342b,0x3a352a017c030095,0xc036130017030157,0x7735312f05ba0b01,
0x312a07dc36150314,0x361b147703057a35,0x6e00106a34151477,0xb335141281371b00,
0x0f02c50c001d000a,0x003b393422101280,0x030da1030012800f,0x800f10ea331e0dae,
0x12800f10bf0e1012,0x322b011280321f1b,0x381900750c009937,0x12800f11340c10ef,
0x0b004c06099c0113,0x01131280331f1280,0x10e803004c05154b,0x1312800f004b351b,
0x2c331f004b343329,0x331f1012800f0311,0xc102110404131280,0x0f00bc0c007e0401,
0x331f11040a131280,0x0a1312800f041104,0x0f041104331f1104,0x331f11040a131280,
0x0a1312800f041104,0x4c0910dd33161104,0x0c8d041312800f00,0x1f12800b004c3519,
0xe039342813128034,0x1f017c0b004c040c,0x19176b0313128035,0x004c30352b017c34,
0x0417be0a1312800f,0x800f1973321e004c,0x3335290dc4031012,0x02cc0212800e004c,
0x12800f002735352c,0x80361f049537190e,0x8008003438171912,0x6001031280391f12,
0xc938312a001e0316,0x8f202c343031540e,0x1612810f10af0000,0x12810d0fd4313227,
0x341c58128131322f,0x341f128134131281,0x231281351f051281,0x128134131281341b,
0x0f0157011281341c,0x1c128234130c1282,0xa504003d01128234,0x83341f0212830f00,
0x020401a8321f1912,0x1c441283321f115d,0x1c12833413128334,0x181283331f128334,
0x35322f260335341f,0x126a363224030335,0x890203120203360c,0x0212830315b60c12,
0x38161283371b12bf,0x2f031283331a1283,0x2f11b502006c0d12,0x31332d0612833932,
0xd902128335121283,0x030ab47d30333c11,0x12840208d8030244,0x0009050c19303524,
0xfe33312709fd311b,0x391f155831352b09,0x003b3235220f09fe,0xf030362809fe321e,
0x31362f0900351b21,0x03090036121209ff,0x0f023631362f004c,0x09ff321f0235361a,
0x760c009a33362c00,0x76333625014f0200,0x0a00351f00bb0900,0x004c04047d361212,
0x0a0037362f08f90b,0x004c040a3e361212,0x39362f021dcb371f,0x004c303729120a01,
0x2f07c9361b078402,0x32372f0f0a013137,0x00013f3712120a01,0x31372b007e06002e,
0x12120a01341f004c,0x004c333729077337,0x0a0136372f091d0b,0x3537290146371212,
0x38372f091d0b004c,0x2901463712120a01,0x2f01540b004c3737,0xca3812120a013038,
0x381b004c39372808,0x120a0132382f091d,0x4c31382901293812,0x0134382f091d0b00,
0x382901293812120a,0x382f017c0b004c33,0x01293812120a0136,0x017c0b004c353829,
0x3812120a0138382f,0x0b004c3738290129,0x120a0130392f017c,0x017c381901293912,
0x2c2153030028391e,0x0d04970f00283139,0xce34312f1950331a,0x0d00353333281806,
0x23540218e50e2354,0x85020a040c237204,0x0a04351f23a5031c,0x0a047f7d36333517,
0x5d0723753514085d,0x085d351c04660108,0x0a0636662f11d601,0x3031703b15f80107,
0x12a90212a8020016,0x7738312b12aa3117,0x32312c12ac311408,0x0a0f0f2881070a0d,
0x3331703201e7010d,0x341c007034170070,0x600c007033140070,0x24100a1535302f2b,
0x0a17341c003f3531,0x040a180f00ae3517,0x332f160a1935312f,0x19257b020501bd37,
0x371d06760101bd37,0x1b381f00930101bd,0x317032129c01070a,0x0c01373617013735,
0x1900c33631240b4a,0x361f254f020a2036,0x035339332f120a20,0x1504035330342f27,
0x342209b60b274634,0x311a000601003832,0x91202c3339440354,0x260a223234723a00,
0x0027130a26983334,0x006c0c0020021019,0x060a22341f19d102,0xdb39120a2236342d,
0x351d003b3634210d,0x043912024f020a22,0x19331409f2391303,0xa6381b000937140a,
0xa7301f028739131c,0xb73711009508041c,0x35392f3c31cf0f01,0x31d137342f1e31d0,
0x1531c50f32aa021b,0x311a0e31c636392f,0x75301309b6030683,0x35120b433a342a01,
0x030a001ac9000017,0x410309fe02069608,0x36353a2fd0391200,0x16903939292d593a,
0x1647381f0265391b,0x34292abe39342502,0x01793934231b6038,0x1b6137352715d902,
0x61341f1b61383526,0x1b6a0a36230d031b,0x270f1b730e001f0d,0x1f130027311f0900,
0x0027331f13002732,0xa00f130027341f13,0x322e1b8d331d021b,0x1f1b8b391c1b8d38,
0x202c354e031b8b35,0x0e0b32e30f01425b,0x371f071b9d0f014b,0x011bf4321f080030,
0x1bfd331f0800300f,0x1bb60f0100300f01,0xbf0f080031301f09,0x39352f325103001b,
0x2df430362f1d2df4,0xf307002df4351f18,0x0203c5747663332d,0x1ec7011efe021b87,
0x1a007f020019970f,0x1e00173613041431,0x022b3b3517041432,0x1f00bc33362b1c7b,
0x00bc35160300bc34,0x355d35241f52341a,0x0048361f00480912,0x203e0a0048371603,
0x1a80371b01043612,0x0c00ac00118b3114,0x312503049e0f1ae5,0x00ac38312a1bb839,
0x1523b50837e63915,0x1d2b3536291d2b30,0x001c00257c373224,0x051d2b351f1b6b02,
0x0f35c6391f002d02,0x1d2335131d23351b,0x3a3736391d233514,0x00e80a005f05120c,
0x3132290586323225,0x322b014c3711014c,0x2b214838171c9e32,0x343332251d863b37,
0x6134170067391a21,0x12bb0212a6371a25,0x08b63615009a341d,0x3632220182353229,
0x3136101265020182,0xf6371400134a0f08,0x02012a3a39363a1c,0x17018b3037230017,
0x1238d03717065f34,0x73213c0401065f35,0x3f9c082017499065,0xffffff0001007b20,
0x0206087d1de1ffff,0xff01a77b202fa22f,0x417b20636f6c5f8d,0x202fa4d2022aff01,
0x0fa4ca0400001b7b,0x1104007d54690161,0x1f17000c01837d08,0x1e17000c1c17000c,
0x1d17000c0217000c,0x1b17000c0617000c,0x1217000c1a14000c,0x1217003c12170018,
0x1ec1008412170060,0x0a04000001a40004,0x0018824d39070008,0x48f5170400181903,
0x1011f02564800510,0x0000101000043900,0x000239001008a474,0x1004000139001008,
0x2100100000010100,0x220080007439041e,0x00800b1100800018,0x007014190300145f,
0x3013007001bc2242,0x0c5f00700e110070,0x4f1f00500c190300,0x225c01301100080a,
0x1349ee0000c00264,0x012364a0005558d8,0xa640001b2193f01a,0x001e4093511d0123,
0x00001c406ad9dc00,0x3000001f40853c7c,0x08c000001c406be8,0x0905629240061200,
0x7e00005007e80000,0x052251bd1a052266,0x77220060004feb06,0x1d137b9201006000,
0x029c00001e524cc7,0x13006002cf220060,0x0030018c2200904e,0x003043130030fb13,
0x00307d1300306413,0x1303050300204510,0xb7134a0e00000c49,0x0cbb130001000048,
0x000ced134ac00000,0x00000cf113521300,0xfa170018f61751fe,0x03260018ff170018,
0x00000c1c13001802,0x6110001820174a3e,0x0c6513033503000c,0x000c03124afd0100,
0x00000c0b13517100,0x141400181017518b,0x181900000847000c,0x0c551300181d1700,
0x000c59134ef80000,0x00000c83134f0000,0x6f00000c87135167,0x03b903000cdf1051,
0x22512b00000ce313,0x1350c700000c0441,0x4a17021800000c45,0xe700000c4e130018,
0x1857170018531750,0x043103000c9d1000,0x224b3e00000ca113,0x134dd000000c0575,
0x7e17500d00000c79,0x1300000c82130018,0x188b170018871750,0x00f000000cda1300,
0x134ff001000cde13,0x0d00000143001806,0x0c36134fd900000c,0x000c3a134fbc0000,
0x00000c64134fc400,0xae00000c68134fa6,0x04cd03000cc7104f,0x64027823000ccb13,
0x0c9c1300901f128d,0x0018a1174eaa0000,0x174e2a00000ca513,0x130018ae170018aa,
0xf413015c00000cf0,0x226d16013822000c,0x3008342667dd1f01,0x0804130330001300,
0x0815130008111300,0x0826130008221300,0x083f1300083b1300,0x084e1300084a1300,
0x085d130008591300,0x986c180008681300,0x00080218551a1003,0x0008921300088e13,
0xf000a32600089f13,0x0008b41300080002,0x0008c5130008c113,0x08de13027c00da22,
0x08ef130008eb1300,0xd800130008fc1300,0x0819130008151303,0x0829130008251300,
0x0839130008351300,0x08511304184d1300,0x08631300085f1300,0x0875130008711300,
0x088f1300088b1300,0x089f1300089b1300,0x08af130008ab1300,0xc713018c01c32200,
0xd7130008d3130008,0xe7130008e3130008,0xe421bd00010f0008,0x015de42851074f1d,
0x0810011d39000814,0x2800100500180c00,0xdc2301f300080000,0xdc041b0e0000fc01,
0x00180c0e00001c81,0xe760316c20074022,0x0018e7402350d901,0x1de7470038dde422,
0xdf84803100184000,0x100028f41c248375,0xdde228004000589d,0x021de418ff5381c9,
0x2200801c022700b0,0xdc0468418ae10740,0x001801e7210080f1,0x319c03300070a814,
0xfc61dc23689f0709,0x130000a81a8e0000,0x404000900800a880,0x90501400f8821c01,
0x40004830dc033000,0x191400f031dc2358,0x05719d01e7210048,0x188e2f0110020038,
0x0068070022000068,0x011d33011006c028,0x040170241f016020,0x08029c02a1000801,
0x5547dde40800c010,0x03ff0536dc442830,0x001008019de21000,0x00001831dc001801,
0x01500e0601b0270e,0x58525c0030001001,0x0088021de4c84301,0x0008dd1300880212,
0x284057340100180d,0xe46853008830dc43,0x54310000300c029d,0xac1a11b21d042851,
0x0c000028831c0bf2,0x18000030c31c0120,0x14000028c29c0120,0x9c210018819c0120,
0x0213012008001061,0x00c80d5199000120,0xfc001c028102900b,0xc051020e39ffffff,
0x282201f99de40bff,0x0e02c8101f553e07,0x0010dd1200109d13,0xa80402680b027805,
0x601de72900200401,0x0228411c01804102,0x03fff5e0001de77f,0x90140038030e01d0,
0x5de4a10008040040,0x1de2280044040000,0x3108ec8618220290,0x86184471d0dde214,
0x0010a0110010309c,0xb0011d320010dc13,0xc011001042140030,0xd01200105c150010,
0x1c04860010020040,0x03f02c0000008401,0x00a8fc1303f80514,0x00b8041d23000802,
0x02dd3b0020140429,0x2348aa2501038010,0x03880c02f824b1dc,0x21550b28b11ca341,
0x411c03b170e3411c,0x811c036000c0000c,0x9ca53100900471eb,0x20b11c0333011041,
0x2003120020011300,0x61110178c11c2300,0x5011041c01410178,0x488503a0b2dc2000,
0x5803fffdc0001de7,0x00480d401c034204,0x3203104814013001,0x01a00b0178011ca5,
0x01f602c0b19d0431,0x1994ae0bf8021de2,0x18ffdc551c025de2,0xe433728663110418,
0x000002a30350029d,0xa828c31c01190ce0,0x3403230050301200,0x0142038830180128,
0x30821200b820621c,0x00181b1400480a00,0xe8e7bc029de201f4,0x98b90802dde21bfb,
0x0030e21003501aff,0x7802dde218ece6d0,0x00309c011af1eaf2,0xa8031de220180af0,
0xcc035de21bf2884f,0x7c021de218fa4a2b,0x78547500c0a738af,0xc800281c0118f96b,
0x035de21989004c54,0xc4400018fb1c77b8,0x0664390018f227ad,0x51d87d94c80018e8,
0xfca80680035de218,0x18614adebc400018,0x0018fd5b05b04800,0x48001844488c8840,
0x84400018fe044444,0x555439006055540a,0x1855544433001895,0x50000018ff152800,
0x8000003600480004,0x0130031de4320018,0x060018c016001800,0x029d3904b00b0020,
0x180e05400304d020,0x029c034104c00200,0xa02ca29c32023050,0x38041304e0041301,
0x1c13043818012300,0x980c1a0008040050,0x1902188cac02e405,0x208e00002831dc00,
0x0b130106180f0318,0xb00206800a1804f8,0x9d23160758181f06,0x0468fc042303a004,
0x00649c7700482011,0xc00f07584800dffc,0xc01d200001411400,0x01e75900c0181800,
0x02d80206c0082000,0xd0181475eddde221,0x0300080500500402,0xdc835101400405a0,
0x5873100438000c61,0x9ec43000281b1468,0x21dec41c405e5421,0x1d229c041cd10088,
0x10a29c0018040000,0x071028029d3206a8,0x10083ffffff8a264,0x000029229c04b100,
0x40046872dc031486,0x432100402d22df84,0x4201d0501401c8dc,0xa311048818a29c43,
0x9d03420030040430,0x00f0711004482c61,0x005206b0dc041930,0x9d200028b31c0320,
0xa19c044851012862,0xf81c61dc31001818,0xc8080038c19c2008,0x80051201a0601106,
0x08d819219f844801,0x1207380ff29dc341,0x1c31dc23480550dd,0x0060a0dc04310898,
0x500e0140019de43a,0x02e8011402c00301,0x01e802030018181f,0xb80102d831dc0332,
0x0828012802d80000,0x05980c001d034202,0x58dc022100280011,0x0610001de4084307,
0x0080010358000223,0x23092020649c0148,0x38019d2205381d04,0x9c21053801dd2a05,
0xe223087804017842,0x772fa29c2105385d,0xe44903880401c804,0x419c21053828001d,
0x0030619c01320040,0x2300181b1400480a,0x05385d1305381de2,0xe220084305709c10,
0x0105385d1305381d,0x3802055014100588,0x9d22053802dd2205,0x053801dd22053801,
0x0538020028619c24,0x001806053802dd22,0x053802dd22053802,0xdd22053802001806,
0x3802001806053802,0x1806053802dd2205,0x3802dd2205380200,0x2205380200180605,
0x02001806053802dd,0xff15280018000538,0x0650000538020018,0x1606680900188016,
0x600c0020050018c0,0x0018181f04e80e0b,0x60019c2c02400303,0x09800c00280c1902,
0x1f4305381400dd3f,0x1b08d8041c053841,0x0f0538411a053801,0x1f05381d151500c0,
0x0538011f1b053810,0x33014000011d3803,0x1853290538415c83,0x053811211e310538,
0x3815212205385e14,0x01b8020538611305,0x10020538619c0233,0x053819219c044200,
0x1d21220538185122,0x0205381c61220538,0x50430048431201d0,0x0030020538629c03,
0x2205381c411d0342,0x2305200305381051,0x381441210538729c,0xdc03205109b00205,
0x1ca11c3f05381441,0x3811211f3a0a0538,0x385d150538f11205,0x1060220538141a05,
0xa00c0c05380f0050,0x010bb80e0c08040b,0x3305385c032301e0,0x0f38090aa814415c,
0x3806f8040e05380f,0x50f41504c80c01dd,0x04b8cffc0061400a,0x0f0c0cf80f020803,
0x48011de4432d0ce8,0x780f0ce04c180020,0x18040203f80f1000,0x00100b1600900f00,
0x04079011011c0142,0x1c010ba8201f0ba8,0x0c0500080f103090,0xe80c1e10e00f0098,
0x5f06780605080c00,0x0e0050180d7ffffc,0x500c800210042803,0x600a705c0339ffc0,
0x02e025231f84118e,0x120078fc02dde44f,0x48929c0232059803,0x84110e6108d00100,
0xa29c3203b029229f,0x10a020a120041830,0x02dd2f0da89de423,0x3902e81d130300d8,
0x0dd80607e00c015d,0x080806053003a027,0x350005300404a805,0xfffc40dc0240948f,
0x0204f2036838003f,0x020bf2c00000801c,0x020bf2800000831c,0x07e81d130020515c,
0x980f03782c025d39,0x00b818035d331d01,0x2010b00c08983418,0x434801500e601d03,
0x40041a22047891dc,0x0ff834180478000e,0x7005055840dc4331,0x48089d2301180405,
0x0c800a0098081301,0x3401201c18041007,0x00c8031158515c00,0x21b11d0442018802,
0x810cb81841221120,0x9c01201000001083,0x39b11d0450520e40,0x0607981848230020,
0x1d0418ffc07608e8,0x01201062004031b1,0x804166004810c11c,0x82141180201c0000,
0x811d110d100a0040,0x0f1140dc02283275,0x0f09f0201e000020,0x0158888023010158,
0x0312780f06888c11,0x1f02484013024800,0x7e1de72101046860,0x14021803001800bd,
0x0f1604900f021801,0x100e00100c4904a0,0x12080c2300480f08,0x0211f0060e12000f,
0x130010411c221200,0x0010509c2412005d,0x11f0529c22120002,0x1300880511f05c13,
0x2f0570011306d804,0x02d80d0111801441,0x120018022f08a005,0x9c330a1200281f04,
0x220d680208502901,0x18319c3311e0619c,0x621205f018120a30,0x9c3312009c1311b8,
0x1300200211581801,0x0c10819c2212009c,0x0f0712000f030801,0x0a07800eafff0c98,
0x00180d1690030ca8,0x3311d01c1304a804,0xf00c1a01a024825c,0x024803840c980f04,
0x1c2f0c98025de43a,0x98021d2f5b0c9842,0x220a0c98201f1d0c,0x051960020c98221c,
0x0c98821c02321878,0x21221c0441001003,0x311068525c210c98,0xc843120930225f84,
0x1301d01c03503201,0x70829c033219a843,0x411d03490030030c,0x9820a25c320c9824,
0x421d23002892120c,0x241f0c98811c0c98,0x0c98f21d2f1a0c98,0x90040b0c98801f0c,
0x1000dd3f05700c02,0x811c0c9805020018,0x201f0c980c1b0c98,0x0c98421c2b1a0c98,
0x0f06d80f0c988111,0x1aa000dc240ae003,0x0278219c22027802,0xa01c612f1aa0dd14,
0xdc434f001003521a,0x02100ac31aa00c80,0x0f330d38001c033f,0x07609c4422241e10,
0x0edffc0061dc0184,0x30035de43e19a81e,0x9c02331005700f1e,0x0a0400780f0a9831,
0xc0050200191d0b10,0x01b8091308a0060f,0xfc521c036004e800,0x000861130418ffff,
0x01e7210598207120,0x0850dc8340431b58,0x210c10090cf0050c,0x5de240408cd61de7,
0x61dc031853269601,0x401021cc00004014,0x4818004000451738,0xb0dd1301089d131b,
0x09d8021006f00b0c,0x0c1800f00b008037,0xc81e116800120310,0x43120b13a80f0e10,
0x24180bc868171af0,0x0107681c01231ae0,0x2012000808101cc0,0x1400181061220c88,
0x130c983811001861,0x9c320020040c789d,0x0000280203401861,0x20001fb8031f0bc8,
0x30191a2401105de2,0x421c014804a80c0e,0xf092dc00331b5030,0x1d1a100109780c00,
0xf00519d003001828,0x02dd3300f09d1300,0x1903f0211f03f030,0x0cb01de7221c5804,
0x3800203700584210,0x04290c08001f01a0,0x9d14060bf00f0bf8,0x1c221df0201a1df0,
0x0bd000dc220bd031,0x0333023003064004,0x500c20230b3050dc,0x5060130b3008120b,
0x18412f1d5051130b,0x48219d0132010bf0,0x001c3900489c130b,0x5304509c1f045008,
0x0f1b13100f04300e,0x13060da00f3d0d98,0x2401b01d1301b09c,0x1501b0020010041c,
0x10050da00300105c,0x0010dc150da00200,0x2301e00d0200d018,0x1313200301e0051d,
0xa51200200301e0dc,0x01319e04805e0218,0xd80f6f13e00f1440,0x1fa00f00200e0d13,
0x5001102f0030060b,0x00002c05b8060100,0x4c012f0ea8021088,0x0c00dc0343090ea8,
0x9c1201680d190168,0xdca3410df0040168,0x430f98020a684d40,0x001f003830dc0348,
0x001c039044010038,0xd80f0ea0e0180ea0,0xf422075800147714,0x130c14900f18901f,
0x019004d0221c5803,0x1c03332520543320,0x00002480910758c2,0x230bf822df84120e,
0x1415300f00589de2,0x9c220058325c0332,0x58fe225c31005898,0x06005828929c3100,
0x001114f82c1314f8,0x180b0e00f80f14f8,0x6003dd2b0fd00415,0x0768dd140e50031d,
0x147008130ff80313,0x2088089d33000803,0x08880a1321e80314,0x2280230280200a2b,
0x080907280d111308,0x100a981c44193308,0x0408d88e1d0690dc,0x0690f0dc42340e20,
0x03e820e02108980c,0xb29c44195214a009,0x005830a121005819,0x1c3300580507400b,
0x06e8381800580200,0x00b01f80001de751,0x5de4221500fc0a28,0x103061dc01420008,
0x2010c00007fa6e27,0x1c21002041120020,0xacc35c03420020f3,0x320d28a8d12001b0,
0x0add3301380a9de4,0x00c801602f0090ac,0x13006881dc013300,0x0a0f4801130d5885,
0x1700a3dc01310a10,0x0440420f5809e721,0x09e0091203e895dc,0x1bffe03f2880e210,
0x042cdbc0100809e0,0x0007f21c04c20f78,0xb8a8821c432012c0,0x0511006024832100,
0x3e001c83405005c8,0x00003f0d60010018,0x581a602d0800583a,0x0110030058101000,
0xe000013900588112,0x423a220618020058,0x27080060391f0dc0,0x81dc2342103818e0,
0xb800028005159822,0x013807016060160c,0x002f0a00190d4032,0x03a8101f00079050,
0xffff2803dde28409,0x03dde44b10a01bff,0x91200090030920fc,0x0117027000009012,
0x0080000a20020018,0x9d2f02008010612f,0x17905d1203008003,0x090558d8f3dc0343,
0x04c8081de2340080,0xc0800078070e580b,0x58f006321c0318ff,0x5d330f50821c2204,
0x0328381313f82218,0x0418b80b0c788413,0x0e880f0ab0030ea0,0xa01c432100100404,
0x98fc925c43685310,0x29b2220b98201a0b,0x120b7820a1220aa8,0x26e8411c230b9043,
0xb010a1230ab84113,0x231c03330b78010a,0xdd3300c0c31200c0,0x1302200315303030,
0x222678c2130fe003,0x60128122183020aa,0x3000005810a22200,0x33050b7820082f18,
0x90001205e8c01c03,0x3306f88e235d3105,0x403c12000800d35c,0x80e1200600d3130a,
0x84082e0aa8061970,0x0fd00d20180e1a88,0x2c07e0301a0bf00e,0x02e80c1205683403,
0xc01d0340582c5100,0x700e07b004110800,0x040c400602e80318,0x277800b508010358,
0x04c01c30d0fc0f10,0x05a801dc23330170,0x04100104b8000023,0x580f03b00e1be801,
0x52005809c0220100,0x4100501bffffef30,0x3a1d97d4dc021b0e,0x402c140040061b78,
0x7c001d300e880100,0x086920df843009f8,0x8e500007dc231c30,0x213001d0839c0119,
0x0120889000081c01,0x07388e000038c01c,0x882e1740022d6801,0x0da810002b126021,
0xdc02310926f80c1f,0x38015842101bd830,0x0470032d98380040,0x1c3113200504d001,
0x01201f3300881400,0x0228020ea80307c0,0x04024080415c0340,0x10512204480e0e30,
0x04d8091ca80607e8,0xa8011de23121c803,0x032113201d03220b,0x20d023602102689c,
0x0080192123010800,0x311c03684100d800,0x004100a003110020,0x03684101081c4358,
0x432e980c001030dc,0x18012aa07c315c03,0x036843194843122e,0x0010a11203e8415c,
0x000058681309f802,0x680100c018130a80,0x031268082e580401,0x0a380402500100d0,
0x10315c03330ae804,0x1810012201100400,0x1cd0201610b80107,0x070278091300b014,
0x1ad80f1b70090150,0x0112140001001f45,0x03d500001005d4aa,0x5c00120020047f2a,
0x3d04b32600280917,0x9ae91316002808a9,0x130011091230f002,0x179eb3041386b502,
0x0b5e00280100348a,0xa21b005042460000,0x9000004e2a6e0028,0x002803ad2a002809,
0x280312000057ba6e,0x5acc6e0028d91b00,0xf51b002802c70000,0xc700005d936e0028,
0x002804032a002800,0x28088100005e5a6e,0x66db220028201b00,0x28481b00280c377c,
0x7895000068d65f00,0x6b6e00286d1b0000,0x12002845ad000069,0x5700187014000729,
0x0401cc9c0000af18,0xb42200284d1b01eb,0x2517002800a046af,0xbc220028cf1b0028,
0x0486a103139f0eaf,0x26002801392a0028,0x002827170050b034,0x44b03c220028851b,
0x0028281700280035,0x50a417002802052a,0x28491b0028291700,0x2802051fb0ac2000,
0x28f01b00282a1700,0x2c1700c8b0ec2600,0x26002803872a0028,0x00282d170078b164,
0x1e4afb02bfc16b16,0xaf1b0010000140b1,0x300000b174530028,0xf51b002805170028,
0x080338b1a4220028,0x01562a0028000168,0x010168b1b42e0028,0x28bc1700280b0078,
0x02c52a0028281700,0x2b170028c4170028,0x17002803282a0028,0x1b00282c170028cc,
0x1700f0d4170028c1,0x260028e51b002806,0x002807170028b204,0x1204b00815fe0f10,
0x1301300313d994b2,0x0050042b2b860f04,0x17002800380cb512,0x0486c6081300500a,
0x1b3984b6b42204b4,0x220028c41b02d000,0x02a8001b052cb6ec,0xb72022002802832a,
0x442a0280001b0110,0x0078b74c26002803,0x0303cc3213028008,0xcf39b7840032ca7c,
0x0e00001a5700c800,0x1422002808867304,0x1b44002800e254bb,0x011f2a00282c0000,
0x03b033c85c220028,0x741b002824140190,0x12e284cd14220028,0x1b002811148c5f03,
0xb2b2d594220028dd,0x0028101400dc0312,0xd90422002802302a,0x001e4401e0001d81,
0x0028a41b00280800,0x002800bac1d9e422,0x1b00280700001c44,0xdc3cdab4220028d8,
0x2a00f01f17020800,0x18dd342200280364,0x13002805023003c0,0x7d01023004ef0406,
0x021c01130394071c,0x0004313822002004,0x800100010f002008,0x0000000400000006,
0x000000c801010001,0x0000000000001ef0,0x0000004000001eeb,0x0000001400040003,
0x0000004c00000078,0x0000000000002046,0x0000000000000000,0x0000000000008a4a,
0x0000002c00000048,0x6e6f642d2d20672d,0x2d656772656d2d74,0x6f6c626369736162,
0x65722d2d20736b63,0x2d74612d6e727574,0x0000000020646e65,0x73726573552f3a43,
0x636f442f42534d2f,0x562f73746e656d75,0x7453206c61757369,0x313032206f696475,
0x63656a6f72502f35,0x617275654e2f7374,0x55432f74654e2d6c,0x656e72656b2f4144,
0x0000000075632e6c,0x2e25f400020a0d2a,0x206e6f6973726576,0x61742e0a0d332e34,
0x5f6d732074656772,0x75626564202c3032,0x726464612e0a0d67,0x657a69735f737365,
0x690bf0003a323320,0x662e20656c626973,0x61702e2820636e75,0x3436622e206d6172,
0x65725f14f8001220,0x5f2029306c617674,0x695f776f505f385a,0x535f54456449746e,
0x0a0d280a0d695f30,0x5f110100250f0033,0x002b2c305f370020,0x317f09002b32332f,
0x00a03b0a0d290a0d,0x6964776f70336d1d,0x00860f0017020092,0x72007a02001f0906,
0x226765722e0a0d7b,0x3b3e323c72256400,0x2520343666b30012,0x01413b3e333c6466,
0x31203420636f6ce1,0x940a0d3120373230,0x306e696765627200,0x302034096f001d3a,
0x0a0d4200002b3020,0x4c005604008b646c,0x5d2700b05b202c31,0x0f0090751100283b,
0x7c3b5d3133000027,0xb000816578653e00,0x0a0d382038323031,0x00e20b0016706d74,
0x320048706d657443,0x0142070177676572,0x0a0d3b3066000b01,0x175b092200af7473,
0x00bb2c5d302b4100,0x18000b0101583b1a,0x3532336233003531,0x31723a0035311200,
0x3bd401cb0300693b,0x752e6c6c61630a0d,0x2c4f01df2820696e,0x2c210102320a0d20,
0x2c23008d02028420,0x3b1a01c700000a20,0x3264662509830160,0x302b3300515b202c,
0x0800d97d1c01c15d,0x3b328100df040257,0x01433b7465720a0d,0x646e20016c3a3124,
0x0f31034b7d1f014f,0x70cb01ed05480349,0x313c702520646572,0xe3391e02e33b3e30,
0x312a02e435312d02,0x0702e4311f02e433,0x33110402e433312f,0x02f10f00de0e02be,
0xfd0f0b0033361f08,0x314102fd31180102,0x3205f201ba312035,0x2e707465730a0d3a,
0x25093233732e6567,0x02760000602c3170,0x32500123746f6e34,0x40d002a07025202c,
0x2061726220327025,0x623102065f314242,0x11001000029a6172,0x6f09000a01012031,
0x3a3373006f361300,0x110164766f6d0a0d,0x342a024302006b38,0x2400173312004a3a,
0x0051321900513a35,0x67656e5d00513810,0x00333615004a732e,0x3198016904006e04,
0x304646336430202c,0x391300573b180001,0x3412003a371b00a8,0x38150062311203d3,
0x2503002834130062,0x030050202c333f01,0x39331501393a3921,0x3515013a34312b01,
0x301304a63519013a,0x6133035831100042,0xf62c3722013b646e,0x6e1401c03b312300,
0x0b001f2c342201c0,0x341201c0351001c0,0x371b0087351501c0,0x3619008636150086,
0xd700008631140086,0x0301196c756d3c01,0x32312501b5030007,0x3210004737190121,
0x02c6726873330047,0x1400370000c53817,0x00cd716523028d33,0x0000cd0b00223613,
0x1600cd36702200fe,0x3815028e0c015437,0x33140087381900ce,0x6c230071341400ce,
0x0302fe381f007174,0x0071381200713910,0x0071301b00713916,0x6d01f10000713915,
0x012b6e722e706372,0x302503340703330c,0x00273a312b000b3a,0x0303120601253413,
0x9f301a026e090167,0x019f0a0198331301,0x00823416005c361b,0x31291105fd3a342f,
0x1f05ff371705fe34,0x6e6501f70105ff31,0x6465654620797274,0x05db647261776f46,
0xd10e001906020a00,0x21311f0300210f05,0x1f0d0021321f0d00,0x062a341f0d002133,
0x3c663d02c666100f,0x00063d331f063c35,0x20314a063d363529,0x1904e105063b3132,
0x040f002904063b31,0x062d0f013a0e0206,0x311f010029371f00,0x010029381f000029,
0x29391f000029321f,0x1f010999331f0100,0x069f341f01002a30,0x1303a00600fe0700,
0x9b00004d03055f38,0x3b782e6469746806,0x059b0406b1010646,0x6f34120048393127,
0x2c322200296c1404,0x646133030800002f,0x8c02031e01063c64,0x3f0400c332312204,
0x29002100091f0003,0x03cb3513060f3b5d,0xa730322a00743212,0x2031350606341700,
0x1206fd3119076b32,0x321403d703007233,0x3c04073a32160533,0x3d2c312604a20a00,
0x3a332f003d301300,0x04795f322a0e07ac,0x0800720207bc3211,0x341300ae3714017c,
0x1401286f6c2305ea,0x4206007903013f33,0x3800202c33333501,0x34333301743b3833,
0x333401750a00212c,0x7534332906c62c35,0x333a017531352101,0x00f8361400495d35,
0x0005b2371300490b,0x01be0200490a0023,0x3405153b5d373349,0x00260100682c3335,
0x070401dc0a004f03,0x0576321205330300,0x0085343429019706,0x1a06cb03009d3814,
0x00185f3224056332,0x0175341701e73715,0x0400850308ce3914,0x8e381b0035030084,
0x3137e808c8331308,0x3842323536373435,0x3825004f3b454632,0x1300420910007f33,
0x3346031e05004a39,0x06a60d062f343220,0x351000790807d007,0x41383333344b0079,
0x19004407010a0009,0x0e403b352c081536,0x030d203b230d5f00,0x3572257b20343682,
0x0000347d1200172c,0x371c009c7d1d01ca,0x2c382700780b009c,0x1000bd35312b0027,
0x0d00bd431f00bd39,0x391a004c07102000,0x01f00a4332110045,0x3234453236454642,
0x4645393341464546,0x270045616d2804ce,0xb8313222004c2c32,0xff01c601004b0b00,
0x3943424137434200,0x3330383933423345,0x02004b341900004b,0x01004c32322b02bc,
0x3239453301fb0199,0x3241434633464138,0x3612002441453331,0x3145444135df0024,
0x4442324543393635,0x002e2c3724000070,0x3222014c0b007e07,0x44313743ee004c38,
0x3331303432364545,0x532c3928004c3531,0x004c381a004c0300,0x4146ed004c303322,
0x3938433739393130,0x3338004c31374245,0x2b004c0200532c31,0x031a3212004c3033,
0x31304131304132de,0x0098364631363734,0x4c0300530604b001,0x4c34332201540b00,
0x433631433635de00,0x3041374232353831,0x0400530504c90101,0x36332201ec0b004c,
0x5e0001313823004c,0x27004c3232333232,0x1b004c0400532c37,0x4634017c02004c36,
0x4132303f00013541,0x00532c3927000130,0x3412017c0b004c04,0x000135434636017c,
0x01293412004c311e,0x017c341b017c3319,0x035f4518017c3413,0x532c3327004c421e,
0x2f017c0b004c0400,0x004c0b040daa3434,0x004c0400532c3527,0x1d0027030028341d,
0x1a0e04970f002735,0x0f04973512049831,0x27010012000d0037,0x088a070037361907,
0x32202c354a06b501,0x001e030476010749,0x4500005404050401,0x725f00922c352500,
0x251800883b7d3831,0x08847d1704827d39,0x3304e40007cd6612,0x04bb010acf736261,
0x77661108773b3126,0x30aa001c2c332208,0x3233323638303466,0x702f0156000d2242,
0x0cf132120f0e7433,0x2708893515088908,0x0134362300773a35,0x0c64302905f3010e,
0x1b100e1330302f02,0x3a0ee032150ee032,0x35352f0754365f32,0x3815003e08040063,
0x1608353a372a003e,0x0202b6371e00a735,0x1701b23a382f0034,0x33120401b230322f,
0x02d10101b209001e,0x1306c20101b2331d,0x303834374f01b234,0x150ed4321c100ed4,
0x330ed432110ed432,0x31322402ac766964,0x322f1103490f02c4,0x4933322f29034932,
0x008b0103cd010403,0x0038353222034a0b,0x35034a341a000601,0x32723000932c3734,
0x3962757334034a35,0x00570000d7361300,0x200106c7010a8209,0x1f2c3823006c0c00,
0x393632373031b800,0x000c123b38343233,0x38120084301b06b5,0x382b003b39110084,
0x00a92c35240aa37d,0x332609be02002c01,0x312c000b070c2430,0x3436029a0709fa3a,
0x0005510f02df2c39,0x2a0866351210a40a,0x0d38301f0b7b3934,0x00c17211073f0102,
0x00004700170d3313,0x3513102731120b73,0x334700a333170ca0,0x323327103c322030,
0xfb07103c321f103c,0x6f72506b63614203,0x614c747372694670,0x00210e1044726579,
0x1f0b00290f104c0e,0x1913321f15002931,0x341b001914311f02,0x1f0ff332332a0ff3,
0xf332332f050ff333,0x00e90e0d1b00020f,0x0031321f080ffb0f,0x31331f0110030f09,
0x07000fb8321f0900,0x1915e634332400c3,0x020fb7341f0f1133,0x33170ce203036301,
0x040fb635332a0d0d,0x038c02027d0a0390,0x1a31646c2815f604,0x381f0e3c3772253a,
0xfc0102ba02020043,0x230e37020043090f,0x0209500404175d39,0x07cd0718fc050c10,
0x31312a02005f301f,0x1f3113031f060f2f,0xfd3533270e5c0303,0x1e3617031e361a00,
0x140f0f031e331f03,0x000f0c030a0f0403,0x001f0f13520e0c03,0x341f0b001f331f01,
0x04136d351f0b001f,0x136d391d136d371d,0x301c0019aa37352f,0x1f037b38332a136e,
0x037b381f06037b34,0x0f01500c13450002,0x410f01580c041343,0x133f0f01600c0413,
0x0113670f01690c05,0x0028341f0028311e,0xd5351f0028321e01,0x813414011d070003,
0x331f12e637332a18,0x382e02da0408138d,0x6c0609650e0f3e3a,0x130fb40814e90100,
0x332f113f030bdb30,0xab32342309136a39,0x18046a3a30343900,0x073b313423136a36,
0x6a32342f136a3418,0x2f145f3635280413,0x6a341b0f136a3234,0x6a3418136a341513,
0x33342c052e341413,0x19007a303527136a,0x210312b601045632,0x0212ef00089f0a00,
0x12ef0107a70a0020,0x302114e00b04a504,0x4b5d33353a04ec30,0x004b0b0080341400,
0x004a34352b13b506,0x136d35352b057902,0x02006b2c32303145,0x01e30413700a0029,
0x3428155603000806,0x3420323459137334,0x0400a43614008c36,0x0401763a352a019b,
0xd70801f036150018,0x1c351f161c361b02,0x312a08e436150316,0x361b161c03062635,
0x7d0011a13416161c,0xe6371b0073371700,0x002a000be3351513,0x000c13e50f032c0c,
0x2313e6393229004e,0x0e13e60f004b3934,0x331e0f11030f0403,0x220e1013e60f124d,
0xe6321f1d13e60f12,0x0b009c37322c0213,0x9a0c125538190078,0x0ad3011313e60f12,
0x331f13e60b004c06,0x4c0516f1011313e6,0x004b351b124e0300,0x4b3433291313e60f,
0xe60f031292331f00,0x041313e6331f1013,0x0c007e2c3628126a,0x6a0a1313e60f00bc,
0xe60f04126a331f12,0x6a331f126a0a1313,0x6a0a1313e60f0412,0xe60f04126a331f12,
0x433317126a0a1313,0x1313e60f004c0812,0x0b004c35190dd604,0x281313e6341f13e6,
0x0b004c040e293934,0x031313e6351f017c,0x352b017c34191911,0x0a1313e60f004c30,
0x47321e004c041964,0x0f0d031013e60f1b,0x13e60e004c333529,0x002708002e2c3627,
0x049837190f13e60f,0x3738191c13e6361f,0x13e6391f13e60700,0x2a001e0317cc0103,
0x3430314510183831,0xe70f12070000932c,0x0b11263132291813,0x5913e731322f13e7,
0x13e7341513e7341c,0xe7351f0613e7341f,0x341513e7341b2313,0x5f0113e7341c13e7,
0xe834150c13e80f01,0x003f0113e8341c13,0x1f0413e90f00a904,0x01b4321f1b13e934,
0x13e9321f12ba0204,0xe9341513e9341c45,0xe9331f13e9341c13,0x2f29034c341f1a13,
0x36322404034c3532,0x2c3726034d0c13d0,0x2c372517330c13ef,0x13e93732723b0093,
0x13e9331a13e93816,0x0902006c0d139503,0x0413e90f001f0013,0xe9351213e931332d,
0x7d30333c132d0213,0x0100aa2c34240b1f,0xa4301626f603002d,0xff3a312d000b070c,
0x503331280a4f0709,0x391f16e131352b0a,0x0a503839290f0a50,0x50321f004b323523,
0x1b24683036280d0a,0x0a5131362f094f35,0x2f004c2c32363712,0x6d361a11026e3136,
0x362d010a51321f02,0x342700790b009d33,0x00be31362b00282c,0x363638120a52351f,
0x362f094b0b004c2c,0x2c383638120a5237,0x2f021f86371f004c,0x303729120a533936,
0x1b361b07d602004c,0x2f0f0a5331372f08,0x333734120a533237,0x372b007e06002e2c,
0x120a53341f004c31,0x4c0300532c353738,0x5336372f096f0b00,0x00532c373738120a,
0x372f096f0b004c03,0x2c393738120a5338,0x01540b004c030053,0x3838120a5330382f,
0x1b004c0200532c31,0x0a5332382f096f38,0x0300532c33383812,0x34382f096f0b004c,
0x532c353837120a53,0x2f017c0b004c0400,0x373837120a533638,0x7c0b004c0400532c,
0x37120a5338382f01,0x004c0400532c3938,0x0a5330392f017c0b,0x7c38190129391212,
0x22c3030028391e01,0x049a0f002831392d,0x34312f1af1331a0e,0x003833332a1b0709,
0x52021a860e25520c,0x250a560c25700425,0x3533723f00952c35,0x877d363336190a56,
0x2575351508a30904,0x351d046e0108a306,0x001d00127f0108a3,0x3b172e01050a580f,
0x1360020016303170,0x2b13623116136103,0x1364311608bd3831,0x2b08070a5f32312d,
0x3301f3010d0a610f,0x7334160073333170,0x7333160073341c00,0x6735302f2e6a0c00,
0x1c0041353126100a,0x0f00b235170a6934,0xc90f2c0d01060a6a,0x020501c9371f1601,
0x8a0101c937192787,0x00980101c9371e06,0x133201070a6d381f,0x3616014035317033,
0x3631260ba50c0140,0x4f020a72361900c8,0x332f140a72361f27,0x6a30342f2a036a39,
0x080b296b34150503,0x060100393234220a,0x333935036b311a00,0x743234723a00952c,
0x280a28ad3334260a,0x0c00200210880029,0x74341f1b2802006c,0x120a7436342d060a,
0x003b3634210e4439,0xaa2c35240a74351d,0x1609e603002d0100,0x2d000b37160a6933,
0x1302a8070a233a38,0x051e60301f02a739,0x0701d0371200a807,0x42357a39372f0a70,
0x342f20357b35392f,0x0f3670021e357c37,0x357136392f1a3570,0x1409f70306c40804,
0x1a0bf7341b019930,0x05002735130ba630,0x3734312032821c47,0x06f6070353332038,
0x2f391300602c3827,0x2e07005f36352e33,0x391b179f39392902,0x25021737381f02b7,
0xfc3834292d533934,0xac0301a43934231c,0xfd38191721351816,0x341f1cfd3835271c,
0x65764102fb071cfd,0x43646e4165676172,0x1d0674636572726f,0x280f1d0f0e00200d,
0x1f140028311f0a00,0x0028331f14002832,0x3c0f140028341f14,0x322e1d29331d041d,
0x2a1d27391b1d2938,0x1d27351f1d273035,0x4e021d2730352f05,0xc90f01715b202c35,
0x1d390f01790e0b36,0x321f080030371f07,0x1f0800300f011d90,0x0100300f011d9933,
0x0031301f091d520f,0x015107011d5b0f08,0xe839352f1cb03514,0x1f00483036271e30,
0x30e8351f1830e833,0x7476633330e70800,0x20fa021d06020433,0x8d031ae70e20c302,
0x97361a008d311900,0xa1321f002636141a,0x211d062746050d04,0x00e907005b33362d,
0xe935160300e9341f,0x5d3525217a341a00,0x32250c005504136e,0x543716030054361f,
0x013d361222720a00,0x12c831151c08371b,0x351b05c30700c600,0x03007138312f22e0,
0xc538312a1d6c3915,0x2664073c61391600,0x31c835141f0c3019,0x3732251f0c353629,
0x1d1c04001d002841,0x0c37352f1f0c3518,0x19391f003d02041f,0x35151f03351b0f3a,
0x35141f0335181f03,0x13813a373639391f,0x322501140a006e05,0x0185313229065732,
0x7e32322b01853711,0x3b372b23b538171e,0x1a23a13332251f66,0x1a283c3417006739,
0x341d143002141b37,0x322909d93615009a,0x01ae36322201ae35,0x063a3c361213da03,
0x0014ce34342f016a,0x3a39363a1ed63715,0x3037250018030149,0x313629025c0701ba,
0x35143d9837180742,0x6c69662e51f00742,0x2f3a432220310965,0x534d2f7372657355,
0x656d75636f442f42,0x757369562f73746e,0x6964757453206c61,0x502f35313032206f,
0x2f737463656a6f72,0x4e2d6c617275654e,0x2f414455432f7465,0x632e6c656e72656b,
0x35353431202c2275,0x324414eb39323139,0x2032b0006a303731,0x6f72705c5c3a6322,
0x2ef000140006cc67,0x696469766e5c5c73,0x6f63207570672061,0x20676e697475706d,
0x5c74696b6c6f6f74,0x765c5c616475635c,0x636e695c5c352e37,0x65645c5c6564756c,
0x9100d15f65636976,0x70682e736e6f6974,0x3836393360007870,0x3035316401b13830,
0x7a331f007a383530,0x786874616d463500,0x705f6c62645f9c00,0x0c34110081337874,
0x3410008037332400,0x0080505c5c330164,0x282003fa00804610,0x694d5c5c29363878,
0x2074666f736f7263,0x5c302e32318b0170,0x682e20007e43565c,0x3535393733700069,
0x3534345112623433,0x9765732101cf3835,0x5f6042d72e202100,0x00080e206f666e69,
0x42ff3731323002b2,0x13000700095a6211,0x6162002d03001930,0x12001b7665726262,
0x090124fd01000734,0x3314000938302400,0x3124000931130009,0x13001b321b001230,
0x2300193313003535,0x2a00180300083936,0x0008351300203137,0x8037140010363423,
0x37362a0097301900,0x3824001034130060,0x1b00a5351d009335,0x3714003404001b34,
0x36362a00d803003c,0x31312300ac040020,0x140011393924004b,0x060113391f006537,
0x381404007736312f,0x580400b4301d0019,0x332a017c37392b00,0x8b05005e0700ab32,
0x01640c0057301d00,0xbd03013c04014b04,0x301d00a133352b00,0xbc301500de04013a,
0x0500ef0f01130d00,0x60371b012338372d,0x3c35342f00ef0d00,0x02000b01a40c0600,
0x3f0086361b01b404,0x301c070218373031,0xf9361f008805001b,0x034a0b03420a0001,
0x0302aa656e696c4f,0x392f1f02aa32392f,0xaa32392f0b02aa32,0x8c02aa32392f4202,
0x392f3902aa32392f,0xaa32392f4902aa32,0x48810104ea090f02,0x381c01320e05560b,
0x510902c630180012,0x0647003300480f00,0x1304191900000803,0xc201063032342500,
0x3e0f012a0a0d2601,0x37381f0037061700,0x00bd0c061c061900,0xcf38392d01c3311c,
0x334d010663311f06,0x004d040188382032,0x0164321d005f3215,0x203233450d00240f,
0x1f013f371f00c033,0x0500720308003d0f,0x190402d939140249,0x011f0b0093311700,
0x00570901021b391f,0x6632332539004e0f,0x0201060f49ee0001,0x12084a2d20323337,
0x23012f0948570000,0x00fb361c03653531,0x120419007838382f,0x0571040447341404,
0x39047b0400c93215,0x81321f094a313731,0x24110081391f0500,0x0600820f09303431,
0x1e05050402b03214,0x1b0901fc0f09ca31,0x0501b5301f009836,0x06220c041d35392d,
0x09d70401e033372b,0xc1331a006634382b,0xb00f025e35392e05,0x33312f01c709a100,
0x1f02c0311b0f02c0,0x02c0371f0302c031,0x2f087e0700780c19,0x33312f20028f636f,
0x028f32382f0f028f,0x3617c30000b70313,0x37312f000b32706d,0x1f00d9391c330020,
0x00d9341509012937,0x352b3f012a31352d,0x0074371f00007439,0x1f08007430392f10,
0xb3312b2b08019d39,0x027a050900070f05,0x02d8311b0aa0371e,0x08c30c070326371f,
0x600f038309003401,0x01870336c4024b00,0x313333393f000903,0x321f0331321b0503,
0x1d0103fe0f0c05f1,0x9c0f09f30809bf32,0x03050610b4030c00,0xbc05489f0e031e04,
0x4739312d00920a03,0xab341c0f43351d01,0x5936312d0b510c04,0x00c60f0863351701,
0x391c0300c6311f36,0x0f0cb837392e0a19,0x040090321f410156,0x0acc0d050bc7371f,
0xfd0e07002337392f,0x12331f3900bc0f0c,0x2f050d8f301f0502,0x0ca00f1702be3337,
0x31342f2b00e10f0a,0xad0f0067031300e1,0x2f000c3831260105,0x21311f0d00213233,
0x0f014530312e1400,0x3d0f08020d1900ff,0x05370997331f0903,0x01fc010f330e0634,
0x063d341f0400820f,0x0107253831323f09,0x0f06b20c000c3117,0x016138372f1a051e,
0x00e00b0161351b4d,0x0da1030d5437372a,0x1700e63517003a01,0x8f0400640d022839,
0x37372f003d321601,0x0be730382f040be7,0x094e001007b70f1c,0x351f1096060f5d0c,
0x362f03a605050785,0x139f301f0404f136,0x0fe8371e01dc040f,0x0b01f604028f341d,
0x980c025131120070,0x8f00a40f00ad0912,0x087632332f021207,0x76331f0876331b0f,
0x00ea0e13b40e0e08,0x32332f0e0583341f,0x0f073fe80f0d0664,0x0f2800c40f750728,
0x07014b391f05087c,0x00a10f0713d7341f,0x33270706f0321f40,0x0d0021361f000c33,
0x06f00f0e0021351f,0x1f100df834332f5f,0x0f0cc90e1a108731,0x4d0f04840e3904db,
0x2d381f0114083300,0x342f042d341b0f04,0x6235392f380ca30d,0x0f1502fd381f3c04,
0x0f0d56311e0d0cd6,0x760526311f8f00ce,0x0e5e321f1d00ba0f,0x0d100f1700c40f7f,
0x0d190f0266391e27,0xe80f0d1938332e5e,0x0f9a0df8341f0a00,0x080706351f1e00df,
0x002138352f133007,0x060f0e0021371f0d,0x6d0df630342f5f07,0x333d090df631342f,
0x06c0321f01153333,0xf50f18dc36342e06,0x30342701af092d0c,0x06250f05e604000c,
0x32342f6f0e780f0a,0x783539333f0a0e78,0x0d02aa393427120e,0x1bc20f06630e0064,
0x0e9a0f0978361e18,0x3235270500bc0f23,0x1d3a00bc331f000c,0x1f032e3914032e37,
0x1f01d90406001b36,0x030109030c00c534,0xc5361f00d10800b9,0x31312f0ff9080400,
0xba0619f0040400a3,0x005f081500a30f19,0x0f192e371e00e004,0x1e1918180f25005f,
0x0620b0311f1fc536,0x056135362d25bc0c,0x250d7e0f20a9301a,0x2f0235078e009d0f,
0xef351b0f0bef3035,0x352f54101c351f0b,0x0f2f620e0d096e30,0x0f2000cd0f861899,
0x0f2700970f5118a0,0x05028f321f060b9f,0x081412ce0f030a05,0x120f570ca80f0309,
0x352ea218fd0f2001,0x0f1300e80f0b0530,0x0fef39302f050bed,0xac0910b435302e06,
0x382d037f39392b01,0xd40f2b6308035c33,0x3517080be20f3d00,0x0d002131372f08f6,
0x0be20f0e0021301f,0x2f370be232352f5f,0x00950f1e05e73031,0x0f3e24850d342f04,
0x1c09fd3617050938,0x361f00540409fd36,0x09400c5f0f1227ba,0x372f2800790f05d3,
0x2e02ac09230b3339,0x841b4e0f02ac3536,0x343f0a0cd637352f,0x294107160a533135,
0x061aaa0e00254c0f,0x37312e003c0822f4,0x312f0608680f057f,0x8c32332f05226c30,
0x6f04008c371a1700,0x1e01ee0625940903,0x290230fa0231277d,0x0503040530f50831,
0x02310910a8000013,0x037a0a0950203820,0x08004c381f29c207,0x321e02fd0500c806,
0xf7050009301d005f,0x4304005436342e0f,0x950e004a34362d18,0x352d008238352d00,
0x00eb33372e001339,0x00aa0e00f532332e,0x0f001b351e003905,0xfd0500790e38008d,
0x1f10007a36332f00,0x1f000a060000cd36,0x018a351f07006736,0x0f0e950a05cb0070,
0x060013381d03026d,0x0700e430312f0099,0x8c321e5301c4361f,0x1f11026431352f00,
0x08020f0f5c00a037,0x01930f000247381f,0x2f00810500540e1b,0x019b076e00e03235,
0x001c0683020d321f,0x39342e015d39322d,0x381e1301970f05b3,0x11013139382f00ca,
0x39342f07029d321f,0x0e0162331e3900f8,0xa3060806540f019a,0x0f01a30e0d2d090a,
0x710f0009011b0098,0x277b1f4037000007,0x07da07755600062d,0x0728145d0f07e805,
0x62361f2667030056,0x0f2deb36312e4200,0x950036750c3d0067,0x0f393b04000b0616,
0x0ce334382f040071,0x42004f0f0044070a,0x01c60830004f381f,0x33312e300050331f,
0xa20f2b00550f01b4,0x2f1602dc381f0001,0x62321f2e02dc3038,0x57006332312f4200,
0x0f3600670f033f0e,0x1f000c321800019d,0xda34332f14007333,0x1f000c3332271900,
0x2f36351e43006335,0x01013d0f3d00670f,0x0f0f9705000c321c,0x0fa730332c07033b,
0x1f00005a0f0f9e09,0x0f05a70c3a005a36,0x170001220f3700b8,0x0f1d4f341612fb33,
0x39140012040c0611,0x26008531362b02db,0x0300600a1e723731,0x0e4c006c341f000c,
0xf60f4700700f2504,0xc20f000c311c0106,0x200f02ed321b0801,0x5a351f005a090a02,
0x5e0f0134351e3a00,0x362c0001220f3400,0x1b0803420f000c36,0x090a00c80f06d733,
0x1e3a005a391f005a,0x0734005e0f1b6b39,0x728f0012060f0122,0x1d7b207365676e61,
0x616e627570620200,0x351f148e03001f6d,0x0d1a437a0009434d,0xf1331f2375014378,
0x00ef000bc9079638,0x0b831dd43538363f,0x2e9f0f098d0500a8,0x3337353f00580631,
0x393f006a0a463728,0x01700b8a2f603933,0x520a2e406031382f,0x063f4e0f22b20300,
0x3ea133392f002e0b,0x0a0d306000580a34,0x00000000000a0d7d
};
#pragma data_seg()


}
#line 910 "c:\\users\\msb\\documents\\visual studio 2015\\projects\\neural-net\\cuda\\debug\\kernel.fatbin.c"


extern "C" {
#line 914 "c:\\users\\msb\\documents\\visual studio 2015\\projects\\neural-net\\cuda\\debug\\kernel.fatbin.c"
#pragma data_seg(".nvFatBinSegment")
__declspec(allocate(".nvFatBinSegment")) __declspec(align(8)) static const __fatBinC_Wrapper_t __fatDeviceText= 
	{ 0x466243b1, 1, fatbinData, 0 };
#pragma data_seg()

}
#line 921 "c:\\users\\msb\\documents\\visual studio 2015\\projects\\neural-net\\cuda\\debug\\kernel.fatbin.c"

#line 4 "c:\\users\\msb\\documents\\visual studio 2015\\projects\\neural-net\\cuda\\debug\\kernel.cudafe1.stub.c"
extern void __device_stub__Z10FeedFowardPdS_S_S_i(double *, double *, double *, double *, int);
extern void __device_stub__Z18BackPropFirstLayerPdS_S_(double *, double *, double *);
extern void __device_stub__Z8BackPropPdS_S_S_ii(double *, double *, double *, double *, int, int);
extern void __device_stub__Z17AverageAndCorrectPdS_S_S_ii(double *, double *, double *, double *, int, int);
static void __nv_cudaEntityRegisterCallback(void **);
static void __sti____cudaRegisterAll_14_kernel_cpp1_ii_ab6093b9(void);
#pragma section(".CRT$XCU",read,write)
__declspec(allocate(".CRT$XCU"))static void (*__dummy_static_init__sti____cudaRegisterAll_14_kernel_cpp1_ii_ab6093b9[])(void) = {__sti____cudaRegisterAll_14_kernel_cpp1_ii_ab6093b9};
void __device_stub__Z10FeedFowardPdS_S_S_i(double *__par0, double *__par1, double *__par2, double *__par3, int __par4){if (cudaSetupArgument((void *)(char *)&__par0, sizeof(__par0), (size_t)0U) != cudaSuccess) return;if (cudaSetupArgument((void *)(char *)&__par1, sizeof(__par1), (size_t)4U) != cudaSuccess) return;if (cudaSetupArgument((void *)(char *)&__par2, sizeof(__par2), (size_t)8U) != cudaSuccess) return;if (cudaSetupArgument((void *)(char *)&__par3, sizeof(__par3), (size_t)12U) != cudaSuccess) return;if (cudaSetupArgument((void *)(char *)&__par4, sizeof(__par4), (size_t)16U) != cudaSuccess) return;{ volatile static char *__f; __f = ((char *)((void ( *)(double *, double *, double *, double *, int))FeedFoward)); (void)cudaLaunch(((char *)((void ( *)(double *, double *, double *, double *, int))FeedFoward))); };}
#line 21 "C:/Users/MSB/Documents/Visual Studio 2015/Projects/Neural-Net/CUDA/kernel.cu"
void FeedFoward( double *__cuda_0,double *__cuda_1,double *__cuda_2,double *__cuda_3,int __cuda_4)
#line 22 "C:/Users/MSB/Documents/Visual Studio 2015/Projects/Neural-Net/CUDA/kernel.cu"
{__device_stub__Z10FeedFowardPdS_S_S_i( __cuda_0,__cuda_1,__cuda_2,__cuda_3,__cuda_4);
#line 30 "C:/Users/MSB/Documents/Visual Studio 2015/Projects/Neural-Net/CUDA/kernel.cu"
}
#line 1 "c:\\users\\msb\\documents\\visual studio 2015\\projects\\neural-net\\cuda\\debug\\kernel.cudafe1.stub.c"
void __device_stub__Z18BackPropFirstLayerPdS_S_( double *__par0,  double *__par1,  double *__par2) {  if (cudaSetupArgument((void *)(char *)&__par0, sizeof(__par0), (size_t)0U) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par1, sizeof(__par1), (size_t)4U) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par2, sizeof(__par2), (size_t)8U) != cudaSuccess) return; { volatile static char *__f; __f = ((char *)((void ( *)(double *, double *, double *))BackPropFirstLayer)); (void)cudaLaunch(((char *)((void ( *)(double *, double *, double *))BackPropFirstLayer))); }; }
#line 32 "C:/Users/MSB/Documents/Visual Studio 2015/Projects/Neural-Net/CUDA/kernel.cu"
void BackPropFirstLayer( double *__cuda_0,double *__cuda_1,double *__cuda_2)
#line 33 "C:/Users/MSB/Documents/Visual Studio 2015/Projects/Neural-Net/CUDA/kernel.cu"
{__device_stub__Z18BackPropFirstLayerPdS_S_( __cuda_0,__cuda_1,__cuda_2);


}
#line 1 "c:\\users\\msb\\documents\\visual studio 2015\\projects\\neural-net\\cuda\\debug\\kernel.cudafe1.stub.c"
void __device_stub__Z8BackPropPdS_S_S_ii( double *__par0,  double *__par1,  double *__par2,  double *__par3,  int __par4,  int __par5) {  if (cudaSetupArgument((void *)(char *)&__par0, sizeof(__par0), (size_t)0U) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par1, sizeof(__par1), (size_t)4U) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par2, sizeof(__par2), (size_t)8U) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par3, sizeof(__par3), (size_t)12U) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par4, sizeof(__par4), (size_t)16U) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par5, sizeof(__par5), (size_t)20U) != cudaSuccess) return; { volatile static char *__f; __f = ((char *)((void ( *)(double *, double *, double *, double *, int, int))BackProp)); (void)cudaLaunch(((char *)((void ( *)(double *, double *, double *, double *, int, int))BackProp))); }; }
#line 38 "C:/Users/MSB/Documents/Visual Studio 2015/Projects/Neural-Net/CUDA/kernel.cu"
void BackProp( double *__cuda_0,double *__cuda_1,double *__cuda_2,double *__cuda_3,int __cuda_4,int __cuda_5)
#line 39 "C:/Users/MSB/Documents/Visual Studio 2015/Projects/Neural-Net/CUDA/kernel.cu"
{__device_stub__Z8BackPropPdS_S_S_ii( __cuda_0,__cuda_1,__cuda_2,__cuda_3,__cuda_4,__cuda_5);
#line 48 "C:/Users/MSB/Documents/Visual Studio 2015/Projects/Neural-Net/CUDA/kernel.cu"
}
#line 1 "c:\\users\\msb\\documents\\visual studio 2015\\projects\\neural-net\\cuda\\debug\\kernel.cudafe1.stub.c"
void __device_stub__Z17AverageAndCorrectPdS_S_S_ii( double *__par0,  double *__par1,  double *__par2,  double *__par3,  int __par4,  int __par5) {  if (cudaSetupArgument((void *)(char *)&__par0, sizeof(__par0), (size_t)0U) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par1, sizeof(__par1), (size_t)4U) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par2, sizeof(__par2), (size_t)8U) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par3, sizeof(__par3), (size_t)12U) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par4, sizeof(__par4), (size_t)16U) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par5, sizeof(__par5), (size_t)20U) != cudaSuccess) return; { volatile static char *__f; __f = ((char *)((void ( *)(double *, double *, double *, double *, int, int))AverageAndCorrect)); (void)cudaLaunch(((char *)((void ( *)(double *, double *, double *, double *, int, int))AverageAndCorrect))); }; }
#line 50 "C:/Users/MSB/Documents/Visual Studio 2015/Projects/Neural-Net/CUDA/kernel.cu"
void AverageAndCorrect( double *__cuda_0,double *__cuda_1,double *__cuda_2,double *__cuda_3,int __cuda_4,int __cuda_5)
#line 51 "C:/Users/MSB/Documents/Visual Studio 2015/Projects/Neural-Net/CUDA/kernel.cu"
{__device_stub__Z17AverageAndCorrectPdS_S_S_ii( __cuda_0,__cuda_1,__cuda_2,__cuda_3,__cuda_4,__cuda_5);
#line 61 "C:/Users/MSB/Documents/Visual Studio 2015/Projects/Neural-Net/CUDA/kernel.cu"
}
#line 1 "c:\\users\\msb\\documents\\visual studio 2015\\projects\\neural-net\\cuda\\debug\\kernel.cudafe1.stub.c"
static void __nv_cudaEntityRegisterCallback( void **__T20) {  { volatile static void **__ref; __ref = (volatile void **)__T20; }; __nv_save_fatbinhandle_for_managed_rt(__T20); __cudaRegisterFunction(__T20, (const char*)((void ( *)(double *, double *, double *, double *, int, int))AverageAndCorrect), (char*)"AverageAndCorrect", "AverageAndCorrect", -1, (uint3*)0, (uint3*)0, (dim3*)0, (dim3*)0, (int*)0); __cudaRegisterFunction(__T20, (const char*)((void ( *)(double *, double *, double *, double *, int, int))BackProp), (char*)"BackProp", "BackProp", -1, (uint3*)0, (uint3*)0, (dim3*)0, (dim3*)0, (int*)0); __cudaRegisterFunction(__T20, (const char*)((void ( *)(double *, double *, double *))BackPropFirstLayer), (char*)"BackPropFirstLayer", "BackPropFirstLayer", -1, (uint3*)0, (uint3*)0, (dim3*)0, (dim3*)0, (int*)0); __cudaRegisterFunction(__T20, (const char*)((void ( *)(double *, double *, double *, double *, int))FeedFoward), (char*)"FeedFoward", "FeedFoward", -1, (uint3*)0, (uint3*)0, (dim3*)0, (dim3*)0, (int*)0); }
static void __sti____cudaRegisterAll_14_kernel_cpp1_ii_ab6093b9(void) {  __cudaFatCubinHandle = __cudaRegisterFatBinary((void*)&__fatDeviceText); { void (*callback_fp)(void **) = (void (*)(void **))(__nv_cudaEntityRegisterCallback); (*callback_fp)(__cudaFatCubinHandle); } atexit(__cudaUnregisterBinaryUtil);  }
#line 2 "kernel.cudafe1.stub.c"
#line 1 "kernel.cudafe1.stub.c"


